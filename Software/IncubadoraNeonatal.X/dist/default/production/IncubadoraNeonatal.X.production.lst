

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Dec 09 21:56:22 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,space=0,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,space=0,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47     0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82     0004                     fsr             equ	4
    83     0004                     fsr0            equ	4
    84     0000                     indf            equ	0
    85     0000                     indf0           equ	0
    86     0002                     pc              equ	2
    87     0002                     pcl             equ	2
    88     000A                     pclath          equ	10
    89     0003                     status          equ	3
    90     0000                     INDF            equ	0	;# 
    91     0001                     TMR0            equ	1	;# 
    92     0002                     PCL             equ	2	;# 
    93     0003                     STATUS          equ	3	;# 
    94     0004                     FSR             equ	4	;# 
    95     0005                     PORTA           equ	5	;# 
    96     0006                     PORTB           equ	6	;# 
    97     0007                     PORTC           equ	7	;# 
    98     0008                     PORTD           equ	8	;# 
    99     0009                     PORTE           equ	9	;# 
   100     000A                     PCLATH          equ	10	;# 
   101     000B                     INTCON          equ	11	;# 
   102     000C                     PIR1            equ	12	;# 
   103     000D                     PIR2            equ	13	;# 
   104     000E                     TMR1            equ	14	;# 
   105     000E                     TMR1L           equ	14	;# 
   106     000F                     TMR1H           equ	15	;# 
   107     0010                     T1CON           equ	16	;# 
   108     0011                     TMR2            equ	17	;# 
   109     0012                     T2CON           equ	18	;# 
   110     0013                     SSPBUF          equ	19	;# 
   111     0014                     SSPCON          equ	20	;# 
   112     0015                     CCPR1           equ	21	;# 
   113     0015                     CCPR1L          equ	21	;# 
   114     0016                     CCPR1H          equ	22	;# 
   115     0017                     CCP1CON         equ	23	;# 
   116     0018                     RCSTA           equ	24	;# 
   117     0019                     TXREG           equ	25	;# 
   118     001A                     RCREG           equ	26	;# 
   119     001B                     CCPR2           equ	27	;# 
   120     001B                     CCPR2L          equ	27	;# 
   121     001C                     CCPR2H          equ	28	;# 
   122     001D                     CCP2CON         equ	29	;# 
   123     001E                     ADRESH          equ	30	;# 
   124     001F                     ADCON0          equ	31	;# 
   125     0081                     OPTION_REG      equ	129	;# 
   126     0085                     TRISA           equ	133	;# 
   127     0086                     TRISB           equ	134	;# 
   128     0087                     TRISC           equ	135	;# 
   129     0088                     TRISD           equ	136	;# 
   130     0089                     TRISE           equ	137	;# 
   131     008C                     PIE1            equ	140	;# 
   132     008D                     PIE2            equ	141	;# 
   133     008E                     PCON            equ	142	;# 
   134     0091                     SSPCON2         equ	145	;# 
   135     0092                     PR2             equ	146	;# 
   136     0093                     SSPADD          equ	147	;# 
   137     0094                     SSPSTAT         equ	148	;# 
   138     0098                     TXSTA           equ	152	;# 
   139     0099                     SPBRG           equ	153	;# 
   140     009C                     CMCON           equ	156	;# 
   141     009D                     CVRCON          equ	157	;# 
   142     009E                     ADRESL          equ	158	;# 
   143     009F                     ADCON1          equ	159	;# 
   144     010C                     EEDATA          equ	268	;# 
   145     010D                     EEADR           equ	269	;# 
   146     010E                     EEDATH          equ	270	;# 
   147     010F                     EEADRH          equ	271	;# 
   148     018C                     EECON1          equ	396	;# 
   149     018D                     EECON2          equ	397	;# 
   150     0000                     INDF            equ	0	;# 
   151     0001                     TMR0            equ	1	;# 
   152     0002                     PCL             equ	2	;# 
   153     0003                     STATUS          equ	3	;# 
   154     0004                     FSR             equ	4	;# 
   155     0005                     PORTA           equ	5	;# 
   156     0006                     PORTB           equ	6	;# 
   157     0007                     PORTC           equ	7	;# 
   158     0008                     PORTD           equ	8	;# 
   159     0009                     PORTE           equ	9	;# 
   160     000A                     PCLATH          equ	10	;# 
   161     000B                     INTCON          equ	11	;# 
   162     000C                     PIR1            equ	12	;# 
   163     000D                     PIR2            equ	13	;# 
   164     000E                     TMR1            equ	14	;# 
   165     000E                     TMR1L           equ	14	;# 
   166     000F                     TMR1H           equ	15	;# 
   167     0010                     T1CON           equ	16	;# 
   168     0011                     TMR2            equ	17	;# 
   169     0012                     T2CON           equ	18	;# 
   170     0013                     SSPBUF          equ	19	;# 
   171     0014                     SSPCON          equ	20	;# 
   172     0015                     CCPR1           equ	21	;# 
   173     0015                     CCPR1L          equ	21	;# 
   174     0016                     CCPR1H          equ	22	;# 
   175     0017                     CCP1CON         equ	23	;# 
   176     0018                     RCSTA           equ	24	;# 
   177     0019                     TXREG           equ	25	;# 
   178     001A                     RCREG           equ	26	;# 
   179     001B                     CCPR2           equ	27	;# 
   180     001B                     CCPR2L          equ	27	;# 
   181     001C                     CCPR2H          equ	28	;# 
   182     001D                     CCP2CON         equ	29	;# 
   183     001E                     ADRESH          equ	30	;# 
   184     001F                     ADCON0          equ	31	;# 
   185     0081                     OPTION_REG      equ	129	;# 
   186     0085                     TRISA           equ	133	;# 
   187     0086                     TRISB           equ	134	;# 
   188     0087                     TRISC           equ	135	;# 
   189     0088                     TRISD           equ	136	;# 
   190     0089                     TRISE           equ	137	;# 
   191     008C                     PIE1            equ	140	;# 
   192     008D                     PIE2            equ	141	;# 
   193     008E                     PCON            equ	142	;# 
   194     0091                     SSPCON2         equ	145	;# 
   195     0092                     PR2             equ	146	;# 
   196     0093                     SSPADD          equ	147	;# 
   197     0094                     SSPSTAT         equ	148	;# 
   198     0098                     TXSTA           equ	152	;# 
   199     0099                     SPBRG           equ	153	;# 
   200     009C                     CMCON           equ	156	;# 
   201     009D                     CVRCON          equ	157	;# 
   202     009E                     ADRESL          equ	158	;# 
   203     009F                     ADCON1          equ	159	;# 
   204     010C                     EEDATA          equ	268	;# 
   205     010D                     EEADR           equ	269	;# 
   206     010E                     EEDATH          equ	270	;# 
   207     010F                     EEADRH          equ	271	;# 
   208     018C                     EECON1          equ	396	;# 
   209     018D                     EECON2          equ	397	;# 
   210                           
   211                           	psect	idataCOMMON
   212     0003                     __pidataCOMMON:
   213                           
   214                           ;initializer for _temperaturaIdeal
   215     0003  3419               	retlw	25
   216     0006                     _PORTBbits      set	6
   217     0005                     _PORTAbits      set	5
   218     001E                     _ADRESH         set	30
   219     001F                     _ADCON0bits     set	31
   220     0010                     _T1CONbits      set	16
   221     000B                     _INTCONbits     set	11
   222     000E                     _TMR1L          set	14
   223     000F                     _TMR1H          set	15
   224     000C                     _PIR1bits       set	12
   225     0019                     _TXREG          set	25
   226     0018                     _RCSTAbits      set	24
   227     0007                     _PORTCbits      set	7
   228     0060                     _TMR1IF         set	96
   229     0040                     _RD0            set	64
   230     0041                     _RD1            set	65
   231     0047                     _RD7            set	71
   232     0046                     _RD6            set	70
   233     0045                     _RD5            set	69
   234     0044                     _RD4            set	68
   235     009E                     _ADRESL         set	158
   236     009F                     _ADCON1bits     set	159
   237     008C                     _PIE1bits       set	140
   238     0085                     _TRISAbits      set	133
   239     0086                     _TRISBbits      set	134
   240     0081                     _OPTION_REGbits set	129
   241     0088                     _TRISD          set	136
   242     0098                     _TXSTAbits      set	152
   243     0099                     _SPBRG          set	153
   244     0087                     _TRISCbits      set	135
   245                           
   246                           	psect	strings
   247     0742                     __pstrings:
   248     0742                     stringtab:
   249     0742                     __stringtab:
   250                           
   251                           ;	String table - string pointers are 1 byte each
   252     0742  1BFF               	btfsc	btemp+1,7
   253     0743  2F4C               	ljmp	stringcode
   254     0744  1383               	bcf	3,7
   255     0745  187F               	btfsc	btemp+1,0
   256     0746  1783               	bsf	3,7
   257     0747  0800               	movf	0,w
   258     0748  0A84               	incf	4,f
   259     0749  1903               	skipnz
   260     074A  0AFF               	incf	btemp+1,f
   261     074B  0008               	return
   262     074C                     stringcode:
   263     074C                     stringdir:
   264     074C  3007               	movlw	high stringdir
   265     074D  008A               	movwf	10
   266     074E  0804               	movf	4,w
   267     074F  0A84               	incf	4,f
   268     0750  0782               	addwf	2,f
   269     0751                     __stringbase:
   270     0751  3400               	retlw	0
   271     0752                     __end_of__stringtab:
   272     0752                     STR_1:
   273     0752  3455               	retlw	85	;'U'
   274     0753  346D               	retlw	109	;'m'
   275     0754  3469               	retlw	105	;'i'
   276     0755  3464               	retlw	100	;'d'
   277     0756  3461               	retlw	97	;'a'
   278     0757  3464               	retlw	100	;'d'
   279     0758  3465               	retlw	101	;'e'
   280     0759  343A               	retlw	58	;':'
   281     075A  3420               	retlw	32	;' '
   282     075B  3425               	retlw	37	;'%'
   283     075C  3469               	retlw	105	;'i'
   284     075D  3425               	retlw	37	;'%'
   285     075E  3425               	retlw	37	;'%'
   286     075F  3400               	retlw	0
   287     0760                     STR_3:
   288     0760  3454               	retlw	84	;'T'
   289     0761  3465               	retlw	101	;'e'
   290     0762  346D               	retlw	109	;'m'
   291     0763  3470               	retlw	112	;'p'
   292     0764  342E               	retlw	46	;'.'
   293     0765  3420               	retlw	32	;' '
   294     0766  3469               	retlw	105	;'i'
   295     0767  3464               	retlw	100	;'d'
   296     0768  3465               	retlw	101	;'e'
   297     0769  3461               	retlw	97	;'a'
   298     076A  346C               	retlw	108	;'l'
   299     076B  3400               	retlw	0
   300     076C                     STR_2:
   301     076C  3454               	retlw	84	;'T'
   302     076D  3465               	retlw	101	;'e'
   303     076E  346D               	retlw	109	;'m'
   304     076F  3470               	retlw	112	;'p'
   305     0770  343A               	retlw	58	;':'
   306     0771  3420               	retlw	32	;' '
   307     0772  3425               	retlw	37	;'%'
   308     0773  3469               	retlw	105	;'i'
   309     0774  3443               	retlw	67	;'C'
   310     0775  3400               	retlw	0
   311     0776                     STR_8:
   312     0776  340D               	retlw	13
   313     0777  340A               	retlw	10
   314     0778  340D               	retlw	13
   315     0779  340A               	retlw	10
   316     077A  3400               	retlw	0
   317     076C                     STR_7           equ	STR_2
   318     0772                     STR_4           equ	STR_2+6
   319     0752                     STR_5           equ	STR_1
   320     0778                     STR_6           equ	STR_8+2
   321                           
   322                           	psect	cinit
   323     000F                     start_initialization:	
   324                           ; #config settings
   325                           
   326     000F                     __initialization:
   327                           
   328                           ; Initialize objects allocated to COMMON
   329     000F  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   330     0014  00FB               	movwf	__pdataCOMMON& (0+127)
   331                           
   332                           ; Clear objects allocated to BANK1
   333     0015  1383               	bcf	3,7	;select IRP bank0
   334     0016  30A0               	movlw	low __pbssBANK1
   335     0017  0084               	movwf	4
   336     0018  30D0               	movlw	low (__pbssBANK1+48)
   337     0019  120A  158A  26D0  120A  118A  	fcall	clear_ram0
   338                           
   339                           ; Clear objects allocated to BANK0
   340     001E  3051               	movlw	low __pbssBANK0
   341     001F  0084               	movwf	4
   342     0020  306E               	movlw	low (__pbssBANK0+29)
   343     0021  120A  158A  26D0  120A  118A  	fcall	clear_ram0
   344                           
   345                           ; Clear objects allocated to BITCOMMON
   346     0026  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   347     0027                     end_of_initialization:	
   348                           ;End of C runtime variable initialization code
   349                           
   350     0027                     __end_of__initialization:
   351     0027  0183               	clrf	3
   352     0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   353                           
   354                           	psect	bitbssCOMMON
   355     03D0                     __pbitbssCOMMON:
   356     03D0                     _aquecedorLigado:
   357     03D0                     	ds	1
   358     03D1                     _enviarDadosTerminal:
   359     03D1                     	ds	1
   360                           
   361                           	psect	dataCOMMON
   362     007B                     __pdataCOMMON:
   363     007B                     _temperaturaIdeal:
   364     007B                     	ds	1
   365                           
   366                           	psect	bssBANK0
   367     0051                     __pbssBANK0:
   368     0051                     _width:
   369     0051                     	ds	2
   370     0053                     _prec:
   371     0053                     	ds	2
   372     0055                     _umidadeValor:
   373     0055                     	ds	2
   374     0057                     _tempValor:
   375     0057                     	ds	2
   376     0059                     _oxigValor:
   377     0059                     	ds	2
   378     005B                     _contador:
   379     005B                     	ds	2
   380     005D                     _flags:
   381     005D                     	ds	1
   382     005E                     _sumation:
   383     005E                     	ds	1
   384     005F                     _RH:
   385     005F                     	ds	1
   386     0060                     _temper:
   387     0060                     	ds	1
   388     0061                     _rhByte2:
   389     0061                     	ds	1
   390     0062                     _rhByte1:
   391     0062                     	ds	1
   392     0063                     _tempByte2:
   393     0063                     	ds	1
   394     0064                     _tempByte1:
   395     0064                     	ds	1
   396     0065                     _checkBit:
   397     0065                     	ds	1
   398     0066                     _tempBuffer:
   399     0066                     	ds	8
   400                           
   401                           	psect	bssBANK1
   402     00A0                     __pbssBANK1:
   403     00A0                     _dbuf:
   404     00A0                     	ds	32
   405     00C0                     _umidadeBuffer:
   406     00C0                     	ds	8
   407     00C8                     _infoTempBuffer:
   408     00C8                     	ds	8
   409                           
   410                           	psect	clrtext
   411     0ED0                     clear_ram0:	
   412                           ;	Called with FSR containing the base address, and
   413                           ;	W with the last address+1
   414                           
   415     0ED0  0064               	clrwdt	;clear the watchdog before getting into this loop
   416     0ED1                     clrloop0:
   417     0ED1  0180               	clrf	0	;clear RAM location pointed to by FSR
   418     0ED2  0A84               	incf	4,f	;increment pointer
   419     0ED3  0604               	xorwf	4,w	;XOR with final address
   420     0ED4  1903               	btfsc	3,2	;have we reached the end yet?
   421     0ED5  3400               	retlw	0	;all done for this memory range, return
   422     0ED6  0604               	xorwf	4,w	;XOR again to restore value
   423     0ED7  2ED1               	goto	clrloop0	;do the next byte
   424                           
   425                           	psect	cstackCOMMON
   426     0070                     __pcstackCOMMON:
   427     0070                     ?_putch:
   428     0070                     ?_Lcd_Port:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ?_Lcd_Cmd:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ?_Lcd_Clear:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ?_Lcd_Init:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     ?_Lcd_Write_Char:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0070                     ?_dht11_init:	
   444                           ; 1 bytes @ 0x0
   445                           
   446     0070                     ?_find_response:	
   447                           ; 1 bytes @ 0x0
   448                           
   449     0070                     ?_read_dht11:	
   450                           ; 1 bytes @ 0x0
   451                           
   452     0070                     ?_UART_Write:	
   453                           ; 1 bytes @ 0x0
   454                           
   455     0070                     ?_read_dht11_data:	
   456                           ; 1 bytes @ 0x0
   457                           
   458     0070                     ?_display_dht11_data:	
   459                           ; 1 bytes @ 0x0
   460                           
   461     0070                     ?_definir_temperatura:	
   462                           ; 1 bytes @ 0x0
   463                           
   464     0070                     ?_incrementarTemperatura:	
   465                           ; 1 bytes @ 0x0
   466                           
   467     0070                     ?_decrementarTemperatura:	
   468                           ; 1 bytes @ 0x0
   469                           
   470     0070                     ?_display_terminal_data:	
   471                           ; 1 bytes @ 0x0
   472                           
   473     0070                     ?_TrataInt:	
   474                           ; 1 bytes @ 0x0
   475                           
   476     0070                     ?_main:	
   477                           ; 1 bytes @ 0x0
   478                           
   479     0070                     putch@c:	
   480                           ; 2 bytes @ 0x0
   481                           
   482     0070                     ??_TrataInt:	
   483                           ; 1 bytes @ 0x0
   484                           
   485                           
   486                           ; 1 bytes @ 0x0
   487     0070                     	ds	2
   488     0072                     ?_fputc:
   489     0072                     ?___awdiv:	
   490                           ; 2 bytes @ 0x2
   491                           
   492     0072                     ?___awmod:	
   493                           ; 2 bytes @ 0x2
   494                           
   495     0072                     ?___aldiv:	
   496                           ; 2 bytes @ 0x2
   497                           
   498     0072                     Lcd_Port@a:	
   499                           ; 4 bytes @ 0x2
   500                           
   501     0072                     UART_Write@data:	
   502                           ; 1 bytes @ 0x2
   503                           
   504     0072                     ___awdiv@divisor:	
   505                           ; 1 bytes @ 0x2
   506                           
   507     0072                     ___awmod@divisor:	
   508                           ; 2 bytes @ 0x2
   509                           
   510     0072                     fputc@c:	
   511                           ; 2 bytes @ 0x2
   512                           
   513     0072                     ___aldiv@divisor:	
   514                           ; 2 bytes @ 0x2
   515                           
   516     0072                     ??_putch:	
   517                           ; 4 bytes @ 0x2
   518                           
   519     0072                     ??_Lcd_Port:	
   520                           ; 1 bytes @ 0x2
   521                           
   522     0072                     ??_dht11_init:	
   523                           ; 1 bytes @ 0x2
   524                           
   525     0072                     ??_find_response:	
   526                           ; 1 bytes @ 0x2
   527                           
   528     0072                     ??_read_dht11:	
   529                           ; 1 bytes @ 0x2
   530                           
   531     0072                     ??_UART_Write:	
   532                           ; 1 bytes @ 0x2
   533                           
   534     0072                     ??_incrementarTemperatura:	
   535                           ; 1 bytes @ 0x2
   536                           
   537     0072                     ??_decrementarTemperatura:	
   538                           ; 1 bytes @ 0x2
   539                           
   540                           
   541                           ; 1 bytes @ 0x2
   542     0072                     	ds	1
   543     0073                     ?_UART_Write_Text:
   544     0073                     read_dht11@data:	
   545                           ; 1 bytes @ 0x3
   546                           
   547     0073                     UART_Write_Text@text:	
   548                           ; 1 bytes @ 0x3
   549                           
   550     0073                     ??_Lcd_Cmd:	
   551                           ; 2 bytes @ 0x3
   552                           
   553     0073                     ??_Lcd_Write_Char:	
   554                           ; 1 bytes @ 0x3
   555                           
   556                           
   557                           ; 1 bytes @ 0x3
   558     0073                     	ds	1
   559     0074                     Lcd_Write_Char@temp:
   560     0074                     read_dht11@timeout:	
   561                           ; 1 bytes @ 0x4
   562                           
   563     0074                     ___awdiv@dividend:	
   564                           ; 2 bytes @ 0x4
   565                           
   566     0074                     ___awmod@dividend:	
   567                           ; 2 bytes @ 0x4
   568                           
   569     0074                     fputc@fp:	
   570                           ; 2 bytes @ 0x4
   571                           
   572                           
   573                           ; 2 bytes @ 0x4
   574     0074                     	ds	1
   575     0075                     Lcd_Cmd@a:
   576     0075                     Lcd_Write_Char@y:	
   577                           ; 1 bytes @ 0x5
   578                           
   579     0075                     ??_UART_Write_Text:	
   580                           ; 1 bytes @ 0x5
   581                           
   582                           
   583                           ; 1 bytes @ 0x5
   584     0075                     	ds	1
   585     0076                     ?_Lcd_Set_Cursor:
   586     0076                     Lcd_Set_Cursor@b:	
   587                           ; 1 bytes @ 0x6
   588                           
   589     0076                     Lcd_Write_Char@a:	
   590                           ; 1 bytes @ 0x6
   591                           
   592     0076                     read_dht11@i:	
   593                           ; 1 bytes @ 0x6
   594                           
   595     0076                     ___awdiv@counter:	
   596                           ; 1 bytes @ 0x6
   597                           
   598     0076                     ___awmod@counter:	
   599                           ; 1 bytes @ 0x6
   600                           
   601     0076                     ___aldiv@dividend:	
   602                           ; 1 bytes @ 0x6
   603                           
   604     0076                     ??_Lcd_Clear:	
   605                           ; 4 bytes @ 0x6
   606                           
   607     0076                     ??_Lcd_Init:	
   608                           ; 1 bytes @ 0x6
   609                           
   610     0076                     ??___awdiv:	
   611                           ; 1 bytes @ 0x6
   612                           
   613     0076                     ??___awmod:	
   614                           ; 1 bytes @ 0x6
   615                           
   616                           
   617                           ; 1 bytes @ 0x6
   618     0076                     	ds	1
   619     0077                     ?_Lcd_Write_String:
   620     0077                     ___awdiv@sign:	
   621                           ; 1 bytes @ 0x7
   622                           
   623     0077                     ___awmod@sign:	
   624                           ; 1 bytes @ 0x7
   625                           
   626     0077                     Lcd_Write_String@a:	
   627                           ; 1 bytes @ 0x7
   628                           
   629     0077                     ??_Lcd_Set_Cursor:	
   630                           ; 2 bytes @ 0x7
   631                           
   632                           
   633                           ; 1 bytes @ 0x7
   634     0077                     	ds	1
   635     0078                     ?_abs:
   636     0078                     ___awdiv@quotient:	
   637                           ; 2 bytes @ 0x8
   638                           
   639     0078                     abs@a:	
   640                           ; 2 bytes @ 0x8
   641                           
   642                           
   643                           ; 2 bytes @ 0x8
   644     0078                     	ds	2
   645     007A                     ??_vfprintf:
   646                           
   647                           	psect	cstackBANK0
   648     0020                     __pcstackBANK0:	
   649                           ; 1 bytes @ 0xA
   650                           
   651     0020                     Lcd_Set_Cursor@a:
   652     0020                     ??_fputc:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0020                     ??_abs:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0020                     ??_Lcd_Write_String:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0020                     ??___aldiv:	
   662                           ; 1 bytes @ 0x0
   663                           
   664                           
   665                           ; 1 bytes @ 0x0
   666     0020                     	ds	1
   667     0021                     Lcd_Set_Cursor@z:
   668     0021                     ___aldiv@counter:	
   669                           ; 1 bytes @ 0x1
   670                           
   671                           
   672                           ; 1 bytes @ 0x1
   673     0021                     	ds	1
   674     0022                     Lcd_Set_Cursor@y:
   675     0022                     ___aldiv@sign:	
   676                           ; 1 bytes @ 0x2
   677                           
   678                           
   679                           ; 1 bytes @ 0x2
   680     0022                     	ds	1
   681     0023                     Lcd_Set_Cursor@temp:
   682     0023                     Lcd_Write_String@i:	
   683                           ; 1 bytes @ 0x3
   684                           
   685     0023                     ___aldiv@quotient:	
   686                           ; 2 bytes @ 0x3
   687                           
   688                           
   689                           ; 4 bytes @ 0x3
   690     0023                     	ds	1
   691     0024                     ??_read_dht11_data:
   692                           
   693                           ; 1 bytes @ 0x4
   694     0024                     	ds	3
   695     0027                     ?_UART_Init:
   696     0027                     UART_Init@baud_rate:	
   697                           ; 1 bytes @ 0x7
   698                           
   699                           
   700                           ; 4 bytes @ 0x7
   701     0027                     	ds	2
   702     0029                     ?_vfpfcnvrt:
   703     0029                     vfpfcnvrt@fp:	
   704                           ; 1 bytes @ 0x9
   705                           
   706                           
   707                           ; 2 bytes @ 0x9
   708     0029                     	ds	2
   709     002B                     vfpfcnvrt@fmt:
   710     002B                     ??_UART_Init:	
   711                           ; 1 bytes @ 0xB
   712                           
   713                           
   714                           ; 1 bytes @ 0xB
   715     002B                     	ds	1
   716     002C                     vfpfcnvrt@ap:
   717                           
   718                           ; 1 bytes @ 0xC
   719     002C                     	ds	1
   720     002D                     ??_vfpfcnvrt:
   721                           
   722                           ; 1 bytes @ 0xD
   723     002D                     	ds	2
   724     002F                     vfpfcnvrt@done:
   725                           
   726                           ; 1 bytes @ 0xF
   727     002F                     	ds	1
   728     0030                     vfpfcnvrt@cp:
   729                           
   730                           ; 1 bytes @ 0x10
   731     0030                     	ds	1
   732     0031                     vfpfcnvrt@convarg:
   733                           
   734                           ; 4 bytes @ 0x11
   735     0031                     	ds	4
   736     0035                     vfpfcnvrt@c:
   737                           
   738                           ; 1 bytes @ 0x15
   739     0035                     	ds	1
   740     0036                     ?_vfprintf:
   741     0036                     vfprintf@fp:	
   742                           ; 2 bytes @ 0x16
   743                           
   744                           
   745                           ; 2 bytes @ 0x16
   746     0036                     	ds	2
   747     0038                     vfprintf@fmt:
   748                           
   749                           ; 1 bytes @ 0x18
   750     0038                     	ds	1
   751     0039                     vfprintf@ap:
   752                           
   753                           ; 1 bytes @ 0x19
   754     0039                     	ds	1
   755     003A                     vfprintf@cfmt:
   756                           
   757                           ; 1 bytes @ 0x1A
   758     003A                     	ds	1
   759     003B                     ?_sprintf:
   760     003B                     sprintf@s:	
   761                           ; 2 bytes @ 0x1B
   762                           
   763                           
   764                           ; 1 bytes @ 0x1B
   765     003B                     	ds	1
   766     003C                     sprintf@fmt:
   767                           
   768                           ; 1 bytes @ 0x1C
   769     003C                     	ds	3
   770     003F                     ??_sprintf:
   771                           
   772                           ; 1 bytes @ 0x1F
   773     003F                     	ds	1
   774     0040                     sprintf@ap:
   775                           
   776                           ; 1 bytes @ 0x20
   777     0040                     	ds	1
   778     0041                     sprintf@f:
   779                           
   780                           ; 11 bytes @ 0x21
   781     0041                     	ds	11
   782     004C                     ??_display_dht11_data:
   783     004C                     ??_definir_temperatura:	
   784                           ; 1 bytes @ 0x2C
   785                           
   786     004C                     ??_display_terminal_data:	
   787                           ; 1 bytes @ 0x2C
   788                           
   789                           
   790                           ; 1 bytes @ 0x2C
   791     004C                     	ds	2
   792     004E                     ??_main:
   793                           
   794                           ; 1 bytes @ 0x2E
   795     004E                     	ds	3
   796                           
   797                           	psect	maintext
   798     002B                     __pmaintext:	
   799 ;;
   800 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   801 ;;
   802 ;; *************** function _main *****************
   803 ;; Defined at:
   804 ;;		line 135 in file "main.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  2  209[None  ] int 
   811 ;; Registers used:
   812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : B00/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0
   820 ;;      Temps:          0       3       0       0       0
   821 ;;      Totals:         0       3       0       0       0
   822 ;;Total ram usage:        3 bytes
   823 ;; Hardware stack levels required when called: 7
   824 ;; This function calls:
   825 ;;		_Lcd_Init
   826 ;;		_UART_Init
   827 ;;		_decrementarTemperatura
   828 ;;		_definir_temperatura
   829 ;;		_dht11_init
   830 ;;		_display_dht11_data
   831 ;;		_display_terminal_data
   832 ;;		_find_response
   833 ;;		_incrementarTemperatura
   834 ;;		_read_dht11_data
   835 ;; This function is called by:
   836 ;;		Startup code after reset
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840     002B                     _main:	
   841                           ;psect for function _main
   842                           
   843     002B                     l2345:	
   844                           ;incstack = 0
   845                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   846                           
   847                           
   848                           ;main.c: 138:     TRISD = 0x00;
   849     002B  1683               	bsf	3,5	;RP0=1, select bank1
   850     002C  1303               	bcf	3,6	;RP1=0, select bank1
   851     002D  0188               	clrf	8	;volatile
   852     002E                     l2347:
   853                           
   854                           ;main.c: 139:     OPTION_REGbits.nRBPU = 0;
   855     002E  1381               	bcf	1,7	;volatile
   856     002F                     l2349:
   857                           
   858                           ;main.c: 140:     TRISBbits.TRISB0 = 1;
   859     002F  1406               	bsf	6,0	;volatile
   860     0030                     l2351:
   861                           
   862                           ;main.c: 141:     TRISBbits.TRISB1 = 1;
   863     0030  1486               	bsf	6,1	;volatile
   864     0031                     l2353:
   865                           
   866                           ;main.c: 142:     TRISBbits.TRISB2 = 1;
   867     0031  1506               	bsf	6,2	;volatile
   868     0032                     l2355:
   869                           
   870                           ;main.c: 143:     TRISCbits.TRISC2 = 1;
   871     0032  1507               	bsf	7,2	;volatile
   872     0033                     l2357:
   873                           
   874                           ;main.c: 144:     TRISCbits.TRISC6 = 0;
   875     0033  1307               	bcf	7,6	;volatile
   876     0034                     l2359:
   877                           
   878                           ;main.c: 145:     TRISCbits.TRISC7 = 1;
   879     0034  1787               	bsf	7,7	;volatile
   880     0035                     l2361:
   881                           
   882                           ;main.c: 146:     TRISAbits.TRISA0 = 1;
   883     0035  1405               	bsf	5,0	;volatile
   884     0036                     l2363:
   885                           
   886                           ;main.c: 147:     TRISAbits.TRISA1 = 0;
   887     0036  1085               	bcf	5,1	;volatile
   888     0037                     l2365:
   889                           
   890                           ;main.c: 148:     TRISAbits.TRISA2 = 0;
   891     0037  1105               	bcf	5,2	;volatile
   892     0038                     l2367:
   893                           
   894                           ;main.c: 149:     TRISAbits.TRISA3 = 0;
   895     0038  1185               	bcf	5,3	;volatile
   896     0039                     l2369:
   897                           
   898                           ;main.c: 150:     TRISAbits.TRISA5 = 0;
   899     0039  1285               	bcf	5,5	;volatile
   900     003A                     l2371:
   901                           
   902                           ;main.c: 153:     INTCONbits.GIE = 1;
   903     003A  178B               	bsf	11,7	;volatile
   904     003B                     l2373:
   905                           
   906                           ;main.c: 154:     INTCONbits.PEIE = 1;
   907     003B  170B               	bsf	11,6	;volatile
   908     003C                     l2375:
   909                           
   910                           ;main.c: 155:     PIE1bits.TMR1IE = 1;
   911     003C  140C               	bsf	12,0	;volatile
   912     003D                     l2377:
   913                           
   914                           ;main.c: 158:     T1CONbits.TMR1CS = 0;
   915     003D  1283               	bcf	3,5	;RP0=0, select bank0
   916     003E  1303               	bcf	3,6	;RP1=0, select bank0
   917     003F  1090               	bcf	16,1	;volatile
   918     0040                     l2379:
   919                           
   920                           ;main.c: 159:     T1CONbits.T1CKPS0 = 1;
   921     0040  1610               	bsf	16,4	;volatile
   922     0041                     l2381:
   923                           
   924                           ;main.c: 160:     T1CONbits.T1CKPS1 = 1;
   925     0041  1690               	bsf	16,5	;volatile
   926     0042                     l2383:
   927                           
   928                           ;main.c: 161:     T1CONbits.TMR1ON = 1;
   929     0042  1410               	bsf	16,0	;volatile
   930     0043                     l2385:
   931                           
   932                           ;main.c: 167:     TMR1H = 0x9E;
   933     0043  309E               	movlw	158
   934     0044  008F               	movwf	15	;volatile
   935     0045                     l2387:
   936                           
   937                           ;main.c: 168:     TMR1L = 0x58;
   938     0045  3058               	movlw	88
   939     0046  008E               	movwf	14	;volatile
   940     0047                     l2389:
   941                           
   942                           ;main.c: 172:     ADCON1bits.PCFG0 = 0;
   943     0047  1683               	bsf	3,5	;RP0=1, select bank1
   944     0048  1303               	bcf	3,6	;RP1=0, select bank1
   945     0049  101F               	bcf	31,0	;volatile
   946     004A                     l2391:
   947                           
   948                           ;main.c: 173:     ADCON1bits.PCFG1 = 1;
   949     004A  149F               	bsf	31,1	;volatile
   950     004B                     l2393:
   951                           
   952                           ;main.c: 174:     ADCON1bits.PCFG2 = 1;
   953     004B  151F               	bsf	31,2	;volatile
   954     004C                     l2395:
   955                           
   956                           ;main.c: 175:     ADCON1bits.PCFG3 = 1;
   957     004C  159F               	bsf	31,3	;volatile
   958     004D                     l2397:
   959                           
   960                           ;main.c: 177:     ADCON0bits.ADCS0 = 0;
   961     004D  1283               	bcf	3,5	;RP0=0, select bank0
   962     004E  1303               	bcf	3,6	;RP1=0, select bank0
   963     004F  131F               	bcf	31,6	;volatile
   964     0050                     l2399:
   965                           
   966                           ;main.c: 178:     ADCON0bits.ADCS1 = 0;
   967     0050  139F               	bcf	31,7	;volatile
   968     0051                     l2401:
   969                           
   970                           ;main.c: 179:     ADCON1bits.ADFM = 0;
   971     0051  1683               	bsf	3,5	;RP0=1, select bank1
   972     0052  1303               	bcf	3,6	;RP1=0, select bank1
   973     0053  139F               	bcf	31,7	;volatile
   974                           
   975                           ;main.c: 181:     ADRESL = 0x00;
   976     0054  019E               	clrf	30	;volatile
   977                           
   978                           ;main.c: 182:     ADRESH = 0x00;
   979     0055  1283               	bcf	3,5	;RP0=0, select bank0
   980     0056  1303               	bcf	3,6	;RP1=0, select bank0
   981     0057  019E               	clrf	30	;volatile
   982     0058                     l2403:
   983                           
   984                           ;main.c: 183:     ADCON0bits.ADON = 1;
   985     0058  141F               	bsf	31,0	;volatile
   986     0059                     l2405:
   987                           
   988                           ;main.c: 185:     ADCON0bits.CHS0 = 0;
   989     0059  119F               	bcf	31,3	;volatile
   990     005A                     l2407:
   991                           
   992                           ;main.c: 186:     ADCON0bits.CHS1 = 0;
   993     005A  121F               	bcf	31,4	;volatile
   994     005B                     l2409:
   995                           
   996                           ;main.c: 187:     ADCON0bits.CHS2 = 0;
   997     005B  129F               	bcf	31,5	;volatile
   998     005C                     l2411:
   999                           
  1000                           ;main.c: 190:         OPTION_REGbits.PSA = 1;
  1001     005C  1683               	bsf	3,5	;RP0=1, select bank1
  1002     005D  1303               	bcf	3,6	;RP1=0, select bank1
  1003     005E  1581               	bsf	1,3	;volatile
  1004     005F                     l2413:
  1005                           
  1006                           ;main.c: 192:     OPTION_REGbits.PS0 = 0;
  1007     005F  1001               	bcf	1,0	;volatile
  1008     0060                     l2415:
  1009                           
  1010                           ;main.c: 193:     OPTION_REGbits.PS1 = 1;
  1011     0060  1481               	bsf	1,1	;volatile
  1012     0061                     l2417:
  1013                           
  1014                           ;main.c: 194:     OPTION_REGbits.PS2 = 1;
  1015     0061  1501               	bsf	1,2	;volatile
  1016     0062  0064               	clrwdt	;# 
  1017     0063                     l2419:
  1018                           
  1019                           ;main.c: 197:     Lcd_Init();
  1020     0063  120A  118A  24D2  120A  118A  	fcall	_Lcd_Init
  1021     0068                     l2421:
  1022                           
  1023                           ;main.c: 198:     UART_Init(9600);
  1024     0068  3000               	movlw	0
  1025     0069  1283               	bcf	3,5	;RP0=0, select bank0
  1026     006A  1303               	bcf	3,6	;RP1=0, select bank0
  1027     006B  00AA               	movwf	UART_Init@baud_rate+3
  1028     006C  3000               	movlw	0
  1029     006D  00A9               	movwf	UART_Init@baud_rate+2
  1030     006E  3025               	movlw	37
  1031     006F  00A8               	movwf	UART_Init@baud_rate+1
  1032     0070  3080               	movlw	128
  1033     0071  00A7               	movwf	UART_Init@baud_rate
  1034     0072  120A  118A  27B2  120A  118A  	fcall	_UART_Init
  1035     0077                     l2423:
  1036                           
  1037                           ;main.c: 199:     PORTAbits.RA1 = 0;
  1038     0077  1283               	bcf	3,5	;RP0=0, select bank0
  1039     0078  1303               	bcf	3,6	;RP1=0, select bank0
  1040     0079  1085               	bcf	5,1	;volatile
  1041     007A                     l2425:
  1042                           
  1043                           ;main.c: 200:     PORTAbits.RA2 = 0;
  1044     007A  1105               	bcf	5,2	;volatile
  1045     007B                     l2427:
  1046                           
  1047                           ;main.c: 201:     PORTAbits.RA3 = 0;
  1048     007B  1185               	bcf	5,3	;volatile
  1049     007C                     l210:	
  1050                           ;main.c: 203:     while(1) {
  1051                           
  1052     007C  0064               	clrwdt	;# 
  1053     007D                     l2429:
  1054                           
  1055                           ;main.c: 205:         dht11_init();
  1056     007D  120A  118A  27E5  120A  118A  	fcall	_dht11_init
  1057     0082                     l2431:
  1058                           
  1059                           ;main.c: 206:         find_response();
  1060     0082  120A  158A  2732  120A  118A  	fcall	_find_response
  1061     0087                     l2433:
  1062                           
  1063                           ;main.c: 207:         read_dht11_data();
  1064     0087  120A  118A  252F  120A  118A  	fcall	_read_dht11_data
  1065     008C                     l2435:
  1066                           
  1067                           ;main.c: 209:         ADCON0bits.GO = 1;
  1068     008C  1283               	bcf	3,5	;RP0=0, select bank0
  1069     008D  1303               	bcf	3,6	;RP1=0, select bank0
  1070     008E  151F               	bsf	31,2	;volatile
  1071     008F                     l2437:
  1072                           
  1073                           ;main.c: 210:         _delay((unsigned long)((10)*(8000000/4000000.0)));
  1074     008F  3005               	movlw	5
  1075     0090  1283               	bcf	3,5	;RP0=0, select bank0
  1076     0091  1303               	bcf	3,6	;RP1=0, select bank0
  1077     0092  00CE               	movwf	??_main
  1078     0093                     u2437:
  1079     0093  0BCE               	decfsz	??_main,f
  1080     0094  2893               	goto	u2437
  1081     0095  2896               	nop2
  1082     0096                     l2439:
  1083                           
  1084                           ;main.c: 211:         oxigValor = ADRESH;
  1085     0096  1283               	bcf	3,5	;RP0=0, select bank0
  1086     0097  1303               	bcf	3,6	;RP1=0, select bank0
  1087     0098  081E               	movf	30,w	;volatile
  1088     0099  00CE               	movwf	??_main
  1089     009A  01CF               	clrf	??_main+1
  1090     009B  084E               	movf	??_main,w
  1091     009C  00D9               	movwf	_oxigValor
  1092     009D  084F               	movf	??_main+1,w
  1093     009E  00DA               	movwf	_oxigValor+1
  1094     009F                     l2441:
  1095                           
  1096                           ;main.c: 213:         tempValor = temper;
  1097     009F  0860               	movf	_temper,w
  1098     00A0  00CE               	movwf	??_main
  1099     00A1  01CF               	clrf	??_main+1
  1100     00A2  084E               	movf	??_main,w
  1101     00A3  00D7               	movwf	_tempValor
  1102     00A4  084F               	movf	??_main+1,w
  1103     00A5  00D8               	movwf	_tempValor+1
  1104     00A6                     l2443:
  1105                           
  1106                           ;main.c: 214:         umidadeValor = RH;
  1107     00A6  085F               	movf	_RH,w
  1108     00A7  00CE               	movwf	??_main
  1109     00A8  01CF               	clrf	??_main+1
  1110     00A9  084E               	movf	??_main,w
  1111     00AA  00D5               	movwf	_umidadeValor
  1112     00AB  084F               	movf	??_main+1,w
  1113     00AC  00D6               	movwf	_umidadeValor+1
  1114     00AD                     l2445:
  1115                           
  1116                           ;main.c: 216:         if (PORTBbits.RB0)
  1117     00AD  1C06               	btfss	6,0	;volatile
  1118     00AE  28B0               	goto	u2281
  1119     00AF  28B1               	goto	u2280
  1120     00B0                     u2281:
  1121     00B0  28B7               	goto	l2449
  1122     00B1                     u2280:
  1123     00B1                     l2447:
  1124                           
  1125                           ;main.c: 217:         {;main.c: 218:             display_dht11_data();
  1126     00B1  120A  118A  262D  120A  118A  	fcall	_display_dht11_data
  1127                           
  1128                           ;main.c: 219:         }
  1129     00B6  28E0               	goto	l2463
  1130     00B7                     l2449:
  1131                           
  1132                           ;main.c: 221:         {;main.c: 222:             definir_temperatura();
  1133     00B7  120A  118A  2708  120A  118A  	fcall	_definir_temperatura
  1134     00BC                     l2451:
  1135                           
  1136                           ;main.c: 223:             if (!PORTBbits.RB1)
  1137     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1138     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1139     00BE  1886               	btfsc	6,1	;volatile
  1140     00BF  28C1               	goto	u2291
  1141     00C0  28C2               	goto	u2290
  1142     00C1                     u2291:
  1143     00C1  28CE               	goto	l2457
  1144     00C2                     u2290:
  1145     00C2                     l2453:
  1146                           
  1147                           ;main.c: 224:             {;main.c: 225:                 _delay((unsigned long)((25)*(80
      +                          00000/4000000.0)));
  1148     00C2  300F               	movlw	15
  1149     00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1150     00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1151     00C5  00CE               	movwf	??_main
  1152     00C6                     u2447:
  1153     00C6  0BCE               	decfsz	??_main,f
  1154     00C7  28C6               	goto	u2447
  1155     00C8  28C9               	nop2
  1156     00C9                     l2455:
  1157                           
  1158                           ;main.c: 226:                 incrementarTemperatura();
  1159     00C9  120A  158A  26E2  120A  118A  	fcall	_incrementarTemperatura
  1160     00CE                     l2457:
  1161                           
  1162                           ;main.c: 229:             if (!PORTBbits.RB2)
  1163     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1164     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1165     00D0  1906               	btfsc	6,2	;volatile
  1166     00D1  28D3               	goto	u2301
  1167     00D2  28D4               	goto	u2300
  1168     00D3                     u2301:
  1169     00D3  28E0               	goto	l2463
  1170     00D4                     u2300:
  1171     00D4                     l2459:
  1172                           
  1173                           ;main.c: 230:             {;main.c: 231:                 _delay((unsigned long)((25)*(80
      +                          00000/4000000.0)));
  1174     00D4  300F               	movlw	15
  1175     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1176     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1177     00D7  00CE               	movwf	??_main
  1178     00D8                     u2457:
  1179     00D8  0BCE               	decfsz	??_main,f
  1180     00D9  28D8               	goto	u2457
  1181     00DA  28DB               	nop2
  1182     00DB                     l2461:
  1183                           
  1184                           ;main.c: 232:                 decrementarTemperatura();
  1185     00DB  120A  158A  26D8  120A  118A  	fcall	_decrementarTemperatura
  1186     00E0                     l2463:
  1187                           
  1188                           ;main.c: 236:         if (enviarDadosTerminal)
  1189     00E0  1CFA               	btfss	_enviarDadosTerminal/(0+8),_enviarDadosTerminal& (0+7)
  1190     00E1  28E3               	goto	u2311
  1191     00E2  28E4               	goto	u2310
  1192     00E3                     u2311:
  1193     00E3  28EA               	goto	l2469
  1194     00E4                     u2310:
  1195     00E4                     l2465:
  1196                           
  1197                           ;main.c: 237:         {;main.c: 238:             display_terminal_data();
  1198     00E4  120A  118A  2679  120A  118A  	fcall	_display_terminal_data
  1199     00E9                     l2467:
  1200                           
  1201                           ;main.c: 239:             enviarDadosTerminal = 0;
  1202     00E9  10FA               	bcf	_enviarDadosTerminal/(0+8),_enviarDadosTerminal& (0+7)
  1203     00EA                     l2469:
  1204                           
  1205                           ;main.c: 242:         if (oxigValor <= 64)
  1206     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1207     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1208     00EC  085A               	movf	_oxigValor+1,w
  1209     00ED  3A80               	xorlw	128
  1210     00EE  00FF               	movwf	btemp+1
  1211     00EF  3080               	movlw	128
  1212     00F0  027F               	subwf	btemp+1,w
  1213     00F1  1D03               	skipz
  1214     00F2  28F5               	goto	u2325
  1215     00F3  3041               	movlw	65
  1216     00F4  0259               	subwf	_oxigValor,w
  1217     00F5                     u2325:
  1218     00F5  1803               	skipnc
  1219     00F6  28F8               	goto	u2321
  1220     00F7  28F9               	goto	u2320
  1221     00F8                     u2321:
  1222     00F8  28FD               	goto	l2473
  1223     00F9                     u2320:
  1224     00F9                     l2471:
  1225                           
  1226                           ;main.c: 243:         {;main.c: 244:             PORTAbits.RA1 = 1;
  1227     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1228     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1229     00FB  1485               	bsf	5,1	;volatile
  1230                           
  1231                           ;main.c: 245:         }
  1232     00FC  290F               	goto	l2477
  1233     00FD                     l2473:
  1234     00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1235     00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1236     00FF  085A               	movf	_oxigValor+1,w
  1237     0100  3A80               	xorlw	128
  1238     0101  00FF               	movwf	btemp+1
  1239     0102  3080               	movlw	128
  1240     0103  027F               	subwf	btemp+1,w
  1241     0104  1D03               	skipz
  1242     0105  2908               	goto	u2335
  1243     0106  304B               	movlw	75
  1244     0107  0259               	subwf	_oxigValor,w
  1245     0108                     u2335:
  1246     0108  1C03               	skipc
  1247     0109  290B               	goto	u2331
  1248     010A  290C               	goto	u2330
  1249     010B                     u2331:
  1250     010B  290F               	goto	l2477
  1251     010C                     u2330:
  1252     010C                     l2475:
  1253                           
  1254                           ;main.c: 247:         {;main.c: 248:             PORTAbits.RA1 = 0;
  1255     010C  1283               	bcf	3,5	;RP0=0, select bank0
  1256     010D  1303               	bcf	3,6	;RP1=0, select bank0
  1257     010E  1085               	bcf	5,1	;volatile
  1258     010F                     l2477:
  1259                           
  1260                           ;main.c: 251:         if (tempValor <= temperaturaIdeal - 3)
  1261     010F  087B               	movf	_temperaturaIdeal,w
  1262     0110  3EFD               	addlw	253
  1263     0111  1283               	bcf	3,5	;RP0=0, select bank0
  1264     0112  1303               	bcf	3,6	;RP1=0, select bank0
  1265     0113  00CE               	movwf	??_main
  1266     0114  30FF               	movlw	255
  1267     0115  1803               	skipnc
  1268     0116  3000               	movlw	0
  1269     0117  00CF               	movwf	??_main+1
  1270     0118  084F               	movf	??_main+1,w
  1271     0119  3A80               	xorlw	128
  1272     011A  00D0               	movwf	??_main+2
  1273     011B  0858               	movf	_tempValor+1,w
  1274     011C  3A80               	xorlw	128
  1275     011D  0250               	subwf	??_main+2,w
  1276     011E  1D03               	skipz
  1277     011F  2922               	goto	u2345
  1278     0120  0857               	movf	_tempValor,w
  1279     0121  024E               	subwf	??_main,w
  1280     0122                     u2345:
  1281     0122  1C03               	skipc
  1282     0123  2925               	goto	u2341
  1283     0124  2926               	goto	u2340
  1284     0125                     u2341:
  1285     0125  292B               	goto	l2481
  1286     0126                     u2340:
  1287     0126                     l2479:
  1288                           
  1289                           ;main.c: 252:         {;main.c: 253:             PORTAbits.RA2 = 1;
  1290     0126  1283               	bcf	3,5	;RP0=0, select bank0
  1291     0127  1303               	bcf	3,6	;RP1=0, select bank0
  1292     0128  1505               	bsf	5,2	;volatile
  1293                           
  1294                           ;main.c: 254:             aquecedorLigado = 1;
  1295     0129  147A               	bsf	_aquecedorLigado/(0+8),_aquecedorLigado& (0+7)
  1296                           
  1297                           ;main.c: 255:         }
  1298     012A  293C               	goto	l2485
  1299     012B                     l2481:
  1300     012B  087B               	movf	_temperaturaIdeal,w
  1301     012C  1283               	bcf	3,5	;RP0=0, select bank0
  1302     012D  1303               	bcf	3,6	;RP1=0, select bank0
  1303     012E  00CE               	movwf	??_main
  1304     012F  01CF               	clrf	??_main+1
  1305     0130  0858               	movf	_tempValor+1,w
  1306     0131  064F               	xorwf	??_main+1,w
  1307     0132  1D03               	skipz
  1308     0133  2936               	goto	u2355
  1309     0134  0857               	movf	_tempValor,w
  1310     0135  064E               	xorwf	??_main,w
  1311     0136                     u2355:
  1312     0136  1D03               	skipz
  1313     0137  2939               	goto	u2351
  1314     0138  293A               	goto	u2350
  1315     0139                     u2351:
  1316     0139  293C               	goto	l2485
  1317     013A                     u2350:
  1318     013A                     l2483:
  1319                           
  1320                           ;main.c: 257:         {;main.c: 258:             PORTAbits.RA2 = 0;
  1321     013A  1105               	bcf	5,2	;volatile
  1322                           
  1323                           ;main.c: 259:             aquecedorLigado = 0;
  1324     013B  107A               	bcf	_aquecedorLigado/(0+8),_aquecedorLigado& (0+7)
  1325     013C                     l2485:
  1326                           
  1327                           ;main.c: 262:         if (umidadeValor < 45)
  1328     013C  0856               	movf	_umidadeValor+1,w
  1329     013D  3A80               	xorlw	128
  1330     013E  00FF               	movwf	btemp+1
  1331     013F  3080               	movlw	128
  1332     0140  027F               	subwf	btemp+1,w
  1333     0141  1D03               	skipz
  1334     0142  2945               	goto	u2365
  1335     0143  302D               	movlw	45
  1336     0144  0255               	subwf	_umidadeValor,w
  1337     0145                     u2365:
  1338     0145  1803               	skipnc
  1339     0146  2948               	goto	u2361
  1340     0147  2949               	goto	u2360
  1341     0148                     u2361:
  1342     0148  294D               	goto	l2489
  1343     0149                     u2360:
  1344     0149                     l2487:
  1345                           
  1346                           ;main.c: 263:         {;main.c: 264:             PORTAbits.RA3 = 1;
  1347     0149  1283               	bcf	3,5	;RP0=0, select bank0
  1348     014A  1303               	bcf	3,6	;RP1=0, select bank0
  1349     014B  1585               	bsf	5,3	;volatile
  1350                           
  1351                           ;main.c: 265:         }
  1352     014C  2986               	goto	l2501
  1353     014D                     l2489:
  1354     014D  1283               	bcf	3,5	;RP0=0, select bank0
  1355     014E  1303               	bcf	3,6	;RP1=0, select bank0
  1356     014F  0856               	movf	_umidadeValor+1,w
  1357     0150  3A80               	xorlw	128
  1358     0151  00FF               	movwf	btemp+1
  1359     0152  3080               	movlw	128
  1360     0153  027F               	subwf	btemp+1,w
  1361     0154  1D03               	skipz
  1362     0155  2958               	goto	u2375
  1363     0156  3037               	movlw	55
  1364     0157  0255               	subwf	_umidadeValor,w
  1365     0158                     u2375:
  1366     0158  1C03               	skipc
  1367     0159  295B               	goto	u2371
  1368     015A  295C               	goto	u2370
  1369     015B                     u2371:
  1370     015B  2974               	goto	l2497
  1371     015C                     u2370:
  1372     015C                     l2491:
  1373     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1374     015D  1303               	bcf	3,6	;RP1=0, select bank0
  1375     015E  0856               	movf	_umidadeValor+1,w
  1376     015F  3A80               	xorlw	128
  1377     0160  00FF               	movwf	btemp+1
  1378     0161  3080               	movlw	128
  1379     0162  027F               	subwf	btemp+1,w
  1380     0163  1D03               	skipz
  1381     0164  2967               	goto	u2385
  1382     0165  303D               	movlw	61
  1383     0166  0255               	subwf	_umidadeValor,w
  1384     0167                     u2385:
  1385     0167  1803               	skipnc
  1386     0168  296A               	goto	u2381
  1387     0169  296B               	goto	u2380
  1388     016A                     u2381:
  1389     016A  2974               	goto	l2497
  1390     016B                     u2380:
  1391     016B                     l2493:
  1392                           
  1393                           ;main.c: 267:         {;main.c: 268:             PORTAbits.RA3 = 0;
  1394     016B  1283               	bcf	3,5	;RP0=0, select bank0
  1395     016C  1303               	bcf	3,6	;RP1=0, select bank0
  1396     016D  1185               	bcf	5,3	;volatile
  1397                           
  1398                           ;main.c: 269:             if (!aquecedorLigado)
  1399     016E  187A               	btfsc	_aquecedorLigado/(0+8),_aquecedorLigado& (0+7)
  1400     016F  2971               	goto	u2391
  1401     0170  2972               	goto	u2390
  1402     0171                     u2391:
  1403     0171  2986               	goto	l2501
  1404     0172                     u2390:
  1405     0172                     l2495:
  1406                           
  1407                           ;main.c: 270:             {;main.c: 271:                 PORTAbits.RA2 = 0;
  1408     0172  1105               	bcf	5,2	;volatile
  1409     0173  2986               	goto	l2501
  1410     0174                     l2497:
  1411     0174  1283               	bcf	3,5	;RP0=0, select bank0
  1412     0175  1303               	bcf	3,6	;RP1=0, select bank0
  1413     0176  0856               	movf	_umidadeValor+1,w
  1414     0177  3A80               	xorlw	128
  1415     0178  00FF               	movwf	btemp+1
  1416     0179  3080               	movlw	128
  1417     017A  027F               	subwf	btemp+1,w
  1418     017B  1D03               	skipz
  1419     017C  297F               	goto	u2405
  1420     017D  303D               	movlw	61
  1421     017E  0255               	subwf	_umidadeValor,w
  1422     017F                     u2405:
  1423     017F  1C03               	skipc
  1424     0180  2982               	goto	u2401
  1425     0181  2983               	goto	u2400
  1426     0182                     u2401:
  1427     0182  2986               	goto	l2501
  1428     0183                     u2400:
  1429     0183                     l2499:
  1430                           
  1431                           ;main.c: 275:         {;main.c: 276:             PORTAbits.RA2 = 1;
  1432     0183  1283               	bcf	3,5	;RP0=0, select bank0
  1433     0184  1303               	bcf	3,6	;RP1=0, select bank0
  1434     0185  1505               	bsf	5,2	;volatile
  1435     0186                     l2501:
  1436                           
  1437                           ;main.c: 279:         if (tempValor >= temperaturaIdeal + 3)
  1438     0186  087B               	movf	_temperaturaIdeal,w
  1439     0187  3E03               	addlw	3
  1440     0188  1283               	bcf	3,5	;RP0=0, select bank0
  1441     0189  1303               	bcf	3,6	;RP1=0, select bank0
  1442     018A  00CE               	movwf	??_main
  1443     018B  3000               	movlw	0
  1444     018C  1803               	skipnc
  1445     018D  3001               	movlw	1
  1446     018E  00CF               	movwf	??_main+1
  1447     018F  0858               	movf	_tempValor+1,w
  1448     0190  3A80               	xorlw	128
  1449     0191  00D0               	movwf	??_main+2
  1450     0192  084F               	movf	??_main+1,w
  1451     0193  3A80               	xorlw	128
  1452     0194  0250               	subwf	??_main+2,w
  1453     0195  1D03               	skipz
  1454     0196  2999               	goto	u2415
  1455     0197  084E               	movf	??_main,w
  1456     0198  0257               	subwf	_tempValor,w
  1457     0199                     u2415:
  1458     0199  1C03               	skipc
  1459     019A  299C               	goto	u2411
  1460     019B  299D               	goto	u2410
  1461     019C                     u2411:
  1462     019C  29A1               	goto	l2505
  1463     019D                     u2410:
  1464     019D                     l2503:
  1465                           
  1466                           ;main.c: 280:         {;main.c: 281:             PORTAbits.RA5 = 1;
  1467     019D  1283               	bcf	3,5	;RP0=0, select bank0
  1468     019E  1303               	bcf	3,6	;RP1=0, select bank0
  1469     019F  1685               	bsf	5,5	;volatile
  1470                           
  1471                           ;main.c: 282:         }
  1472     01A0  29B1               	goto	l2509
  1473     01A1                     l2505:
  1474     01A1  087B               	movf	_temperaturaIdeal,w
  1475     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1476     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1477     01A4  00CE               	movwf	??_main
  1478     01A5  01CF               	clrf	??_main+1
  1479     01A6  0858               	movf	_tempValor+1,w
  1480     01A7  064F               	xorwf	??_main+1,w
  1481     01A8  1D03               	skipz
  1482     01A9  29AC               	goto	u2425
  1483     01AA  0857               	movf	_tempValor,w
  1484     01AB  064E               	xorwf	??_main,w
  1485     01AC                     u2425:
  1486     01AC  1D03               	skipz
  1487     01AD  29AF               	goto	u2421
  1488     01AE  29B0               	goto	u2420
  1489     01AF                     u2421:
  1490     01AF  29B1               	goto	l2509
  1491     01B0                     u2420:
  1492     01B0                     l2507:
  1493                           
  1494                           ;main.c: 284:         {;main.c: 285:             PORTAbits.RA5 = 0;
  1495     01B0  1285               	bcf	5,5	;volatile
  1496     01B1                     l2509:
  1497                           
  1498                           ;main.c: 287:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1499     01B1  3006               	movlw	6
  1500     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1501     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1502     01B4  00D0               	movwf	??_main+2
  1503     01B5  3013               	movlw	19
  1504     01B6  00CF               	movwf	??_main+1
  1505     01B7  30AD               	movlw	173
  1506     01B8  00CE               	movwf	??_main
  1507     01B9                     u2467:
  1508     01B9  0BCE               	decfsz	??_main,f
  1509     01BA  29B9               	goto	u2467
  1510     01BB  0BCF               	decfsz	??_main+1,f
  1511     01BC  29B9               	goto	u2467
  1512     01BD  0BD0               	decfsz	??_main+2,f
  1513     01BE  29B9               	goto	u2467
  1514     01BF  287C               	goto	l210
  1515     01C0  120A  118A  280C   	ljmp	start
  1516     01C3                     __end_of_main:
  1517                           
  1518                           	psect	text1
  1519     052F                     __ptext1:	
  1520 ;; *************** function _read_dht11_data *****************
  1521 ;; Defined at:
  1522 ;;		line 41 in file "main.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0, pclath, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1536 ;;      Params:         0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0
  1538 ;;      Temps:          0       6       0       0       0
  1539 ;;      Totals:         0       6       0       0       0
  1540 ;;Total ram usage:        6 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; Hardware stack levels required when called: 4
  1543 ;; This function calls:
  1544 ;;		_Lcd_Set_Cursor
  1545 ;;		_read_dht11
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551     052F                     _read_dht11_data:	
  1552                           ;psect for function _read_dht11_data
  1553                           
  1554     052F                     l2317:	
  1555                           ;incstack = 0
  1556                           ; Regs used in _read_dht11_data: [wreg+status,2+status,0+pclath+cstack]
  1557                           
  1558                           
  1559                           ;main.c: 43:     if (checkBit) {
  1560     052F  1283               	bcf	3,5	;RP0=0, select bank0
  1561     0530  1303               	bcf	3,6	;RP1=0, select bank0
  1562     0531  0865               	movf	_checkBit,w
  1563     0532  1903               	btfsc	3,2
  1564     0533  2D35               	goto	u2261
  1565     0534  2D36               	goto	u2260
  1566     0535                     u2261:
  1567     0535  2D87               	goto	l181
  1568     0536                     u2260:
  1569     0536                     l2319:
  1570                           
  1571                           ;main.c: 44:         rhByte1 = read_dht11();
  1572     0536  120A  118A  2403  120A  118A  	fcall	_read_dht11
  1573     053B  1283               	bcf	3,5	;RP0=0, select bank0
  1574     053C  1303               	bcf	3,6	;RP1=0, select bank0
  1575     053D  00E2               	movwf	_rhByte1
  1576                           
  1577                           ;main.c: 45:         rhByte2 = read_dht11();
  1578     053E  120A  118A  2403  120A  118A  	fcall	_read_dht11
  1579     0543  1283               	bcf	3,5	;RP0=0, select bank0
  1580     0544  1303               	bcf	3,6	;RP1=0, select bank0
  1581     0545  00E1               	movwf	_rhByte2
  1582                           
  1583                           ;main.c: 46:         tempByte1 = read_dht11();
  1584     0546  120A  118A  2403  120A  118A  	fcall	_read_dht11
  1585     054B  1283               	bcf	3,5	;RP0=0, select bank0
  1586     054C  1303               	bcf	3,6	;RP1=0, select bank0
  1587     054D  00E4               	movwf	_tempByte1
  1588                           
  1589                           ;main.c: 47:         tempByte2 = read_dht11();
  1590     054E  120A  118A  2403  120A  118A  	fcall	_read_dht11
  1591     0553  1283               	bcf	3,5	;RP0=0, select bank0
  1592     0554  1303               	bcf	3,6	;RP1=0, select bank0
  1593     0555  00E3               	movwf	_tempByte2
  1594                           
  1595                           ;main.c: 48:         sumation = read_dht11();
  1596     0556  120A  118A  2403  120A  118A  	fcall	_read_dht11
  1597     055B  1283               	bcf	3,5	;RP0=0, select bank0
  1598     055C  1303               	bcf	3,6	;RP1=0, select bank0
  1599     055D  00DE               	movwf	_sumation
  1600     055E                     l2321:
  1601                           
  1602                           ;main.c: 50:         if (sumation == (rhByte1 + rhByte2 + tempByte1 + tempByte2)) {
  1603     055E  0862               	movf	_rhByte1,w
  1604     055F  0761               	addwf	_rhByte2,w
  1605     0560  00A4               	movwf	??_read_dht11_data
  1606     0561  01A5               	clrf	??_read_dht11_data+1
  1607     0562  0DA5               	rlf	??_read_dht11_data+1,f
  1608     0563  0864               	movf	_tempByte1,w
  1609     0564  0724               	addwf	??_read_dht11_data,w
  1610     0565  00A6               	movwf	??_read_dht11_data+2
  1611     0566  3000               	movlw	0
  1612     0567  1803               	skipnc
  1613     0568  3001               	movlw	1
  1614     0569  0725               	addwf	??_read_dht11_data+1,w
  1615     056A  00A7               	movwf	??_read_dht11_data+3
  1616     056B  0863               	movf	_tempByte2,w
  1617     056C  0726               	addwf	??_read_dht11_data+2,w
  1618     056D  00A8               	movwf	??_read_dht11_data+4
  1619     056E  3000               	movlw	0
  1620     056F  1803               	skipnc
  1621     0570  3001               	movlw	1
  1622     0571  0727               	addwf	??_read_dht11_data+3,w
  1623     0572  00A9               	movwf	??_read_dht11_data+5
  1624     0573  085E               	movf	_sumation,w
  1625     0574  0628               	xorwf	??_read_dht11_data+4,w
  1626     0575  0429               	iorwf	??_read_dht11_data+5,w
  1627     0576  1D03               	skipz
  1628     0577  2D79               	goto	u2271
  1629     0578  2D7A               	goto	u2270
  1630     0579                     u2271:
  1631     0579  2D7F               	goto	l2325
  1632     057A                     u2270:
  1633     057A                     l2323:
  1634                           
  1635                           ;main.c: 51:             RH = rhByte1;
  1636     057A  0862               	movf	_rhByte1,w
  1637     057B  00DF               	movwf	_RH
  1638                           
  1639                           ;main.c: 52:             temper = tempByte1;
  1640     057C  0864               	movf	_tempByte1,w
  1641     057D  00E0               	movwf	_temper
  1642                           
  1643                           ;main.c: 53:         }
  1644     057E  2D87               	goto	l181
  1645     057F                     l2325:
  1646                           
  1647                           ;main.c: 55:         {;main.c: 56:             Lcd_Set_Cursor(1, 1);
  1648     057F  01F6               	clrf	Lcd_Set_Cursor@b
  1649     0580  0AF6               	incf	Lcd_Set_Cursor@b,f
  1650     0581  3001               	movlw	1
  1651     0582  120A  118A  25DF  120A  118A  	fcall	_Lcd_Set_Cursor
  1652     0587                     l181:
  1653     0587  0008               	return
  1654     0588                     __end_of_read_dht11_data:
  1655                           
  1656                           	psect	text2
  1657     0403                     __ptext2:	
  1658 ;; *************** function _read_dht11 *****************
  1659 ;; Defined at:
  1660 ;;		line 31 in file "./dht11.h"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  timeout         2    4[COMMON] unsigned int 
  1665 ;;  i               1    6[COMMON] unsigned char 
  1666 ;;  data            1    3[COMMON] unsigned char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      unsigned char 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1676 ;;      Params:         0       0       0       0       0
  1677 ;;      Locals:         4       0       0       0       0
  1678 ;;      Temps:          1       0       0       0       0
  1679 ;;      Totals:         5       0       0       0       0
  1680 ;;Total ram usage:        5 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 1
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_read_dht11_data
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690     0403                     _read_dht11:	
  1691                           ;psect for function _read_dht11
  1692                           
  1693     0403                     l1729:	
  1694                           ;incstack = 0
  1695                           ; Regs used in _read_dht11: [wreg+status,2+status,0]
  1696                           
  1697                           
  1698                           ;./dht11.h: 32:     char data = 0;
  1699     0403  01F3               	clrf	read_dht11@data
  1700                           
  1701                           ;./dht11.h: 33:     for (char i = 0; i < 8; i++) {
  1702     0404  01F6               	clrf	read_dht11@i
  1703     0405                     l1735:
  1704                           
  1705                           ;./dht11.h: 34:         unsigned int timeout = 1000;
  1706     0405  30E8               	movlw	232
  1707     0406  00F4               	movwf	read_dht11@timeout
  1708     0407  3003               	movlw	3
  1709     0408  00F5               	movwf	read_dht11@timeout+1
  1710     0409                     l126:	
  1711                           ;./dht11.h: 35:         while (!PORTCbits.RC2 && --timeout);
  1712                           
  1713     0409  1283               	bcf	3,5	;RP0=0, select bank0
  1714     040A  1303               	bcf	3,6	;RP1=0, select bank0
  1715     040B  1907               	btfsc	7,2	;volatile
  1716     040C  2C0E               	goto	u1451
  1717     040D  2C0F               	goto	u1450
  1718     040E                     u1451:
  1719     040E  2C1B               	goto	l1739
  1720     040F                     u1450:
  1721     040F                     l1737:
  1722     040F  3001               	movlw	1
  1723     0410  02F4               	subwf	read_dht11@timeout,f
  1724     0411  3000               	movlw	0
  1725     0412  1C03               	skipc
  1726     0413  03F5               	decf	read_dht11@timeout+1,f
  1727     0414  02F5               	subwf	read_dht11@timeout+1,f
  1728     0415  0874               	movf	read_dht11@timeout,w
  1729     0416  0475               	iorwf	read_dht11@timeout+1,w
  1730     0417  1D03               	btfss	3,2
  1731     0418  2C1A               	goto	u1461
  1732     0419  2C1B               	goto	u1460
  1733     041A                     u1461:
  1734     041A  2C09               	goto	l126
  1735     041B                     u1460:
  1736     041B                     l1739:
  1737                           
  1738                           ;./dht11.h: 36:         if (timeout == 0) return 0xFF;
  1739     041B  0874               	movf	read_dht11@timeout,w
  1740     041C  0475               	iorwf	read_dht11@timeout+1,w
  1741     041D  1D03               	btfss	3,2
  1742     041E  2C20               	goto	u1471
  1743     041F  2C21               	goto	u1470
  1744     0420                     u1471:
  1745     0420  2C23               	goto	l1745
  1746     0421                     u1470:
  1747     0421                     l1741:
  1748     0421  30FF               	movlw	255
  1749     0422  2C6E               	goto	l132
  1750     0423                     l1745:
  1751                           
  1752                           ;./dht11.h: 38:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  1753     0423  3013               	movlw	19
  1754     0424  00F2               	movwf	??_read_dht11
  1755     0425                     u2477:
  1756     0425  0BF2               	decfsz	??_read_dht11,f
  1757     0426  2C25               	goto	u2477
  1758     0427  2C28               	nop2
  1759     0428                     l1747:
  1760                           
  1761                           ;./dht11.h: 39:         if (PORTCbits.RC2 == 0)
  1762     0428  1283               	bcf	3,5	;RP0=0, select bank0
  1763     0429  1303               	bcf	3,6	;RP1=0, select bank0
  1764     042A  1907               	btfsc	7,2	;volatile
  1765     042B  2C2D               	goto	u1481
  1766     042C  2C2E               	goto	u1480
  1767     042D                     u1481:
  1768     042D  2C3D               	goto	l1751
  1769     042E                     u1480:
  1770     042E                     l1749:
  1771                           
  1772                           ;./dht11.h: 40:         {;./dht11.h: 41:             data &= ~(1 << (7 - i));
  1773     042E  3001               	movlw	1
  1774     042F  00F2               	movwf	??_read_dht11
  1775     0430  0876               	movf	read_dht11@i,w
  1776     0431  3C07               	sublw	7
  1777     0432  3E01               	addlw	1
  1778     0433  2C36               	goto	u1494
  1779     0434                     u1495:
  1780     0434  1003               	clrc
  1781     0435  0DF2               	rlf	??_read_dht11,f
  1782     0436                     u1494:
  1783     0436  3EFF               	addlw	-1
  1784     0437  1D03               	skipz
  1785     0438  2C34               	goto	u1495
  1786     0439  0872               	movf	??_read_dht11,w
  1787     043A  3AFF               	xorlw	255
  1788     043B  05F3               	andwf	read_dht11@data,f
  1789                           
  1790                           ;./dht11.h: 42:         }
  1791     043C  2C65               	goto	l1763
  1792     043D                     l1751:
  1793                           
  1794                           ;./dht11.h: 44:         {;./dht11.h: 45:             data |= (1 << (7 - i));
  1795     043D  3001               	movlw	1
  1796     043E  00F2               	movwf	??_read_dht11
  1797     043F  0876               	movf	read_dht11@i,w
  1798     0440  3C07               	sublw	7
  1799     0441  3E01               	addlw	1
  1800     0442  2C45               	goto	u1504
  1801     0443                     u1505:
  1802     0443  1003               	clrc
  1803     0444  0DF2               	rlf	??_read_dht11,f
  1804     0445                     u1504:
  1805     0445  3EFF               	addlw	-1
  1806     0446  1D03               	skipz
  1807     0447  2C43               	goto	u1505
  1808     0448  0872               	movf	??_read_dht11,w
  1809     0449  04F3               	iorwf	read_dht11@data,f
  1810     044A                     l1753:
  1811                           
  1812                           ;./dht11.h: 46:             timeout = 1000;
  1813     044A  30E8               	movlw	232
  1814     044B  00F4               	movwf	read_dht11@timeout
  1815     044C  3003               	movlw	3
  1816     044D  00F5               	movwf	read_dht11@timeout+1
  1817     044E                     l135:	
  1818                           ;./dht11.h: 47:             while (PORTCbits.RC2 && --timeout);
  1819                           
  1820     044E  1D07               	btfss	7,2	;volatile
  1821     044F  2C51               	goto	u1511
  1822     0450  2C52               	goto	u1510
  1823     0451                     u1511:
  1824     0451  2C5E               	goto	l1757
  1825     0452                     u1510:
  1826     0452                     l1755:
  1827     0452  3001               	movlw	1
  1828     0453  02F4               	subwf	read_dht11@timeout,f
  1829     0454  3000               	movlw	0
  1830     0455  1C03               	skipc
  1831     0456  03F5               	decf	read_dht11@timeout+1,f
  1832     0457  02F5               	subwf	read_dht11@timeout+1,f
  1833     0458  0874               	movf	read_dht11@timeout,w
  1834     0459  0475               	iorwf	read_dht11@timeout+1,w
  1835     045A  1D03               	btfss	3,2
  1836     045B  2C5D               	goto	u1521
  1837     045C  2C5E               	goto	u1520
  1838     045D                     u1521:
  1839     045D  2C4E               	goto	l135
  1840     045E                     u1520:
  1841     045E                     l1757:
  1842                           
  1843                           ;./dht11.h: 48:             if (timeout == 0) return 0xFF;
  1844     045E  0874               	movf	read_dht11@timeout,w
  1845     045F  0475               	iorwf	read_dht11@timeout+1,w
  1846     0460  1D03               	btfss	3,2
  1847     0461  2C63               	goto	u1531
  1848     0462  2C64               	goto	u1530
  1849     0463                     u1531:
  1850     0463  2C65               	goto	l1763
  1851     0464                     u1530:
  1852     0464  2C21               	goto	l1741
  1853     0465                     l1763:
  1854                           
  1855                           ;./dht11.h: 50:     }
  1856     0465  3001               	movlw	1
  1857     0466  07F6               	addwf	read_dht11@i,f
  1858     0467                     l1765:
  1859     0467  3008               	movlw	8
  1860     0468  0276               	subwf	read_dht11@i,w
  1861     0469  1C03               	skipc
  1862     046A  2C6C               	goto	u1541
  1863     046B  2C6D               	goto	u1540
  1864     046C                     u1541:
  1865     046C  2C05               	goto	l1735
  1866     046D                     u1540:
  1867     046D                     l1767:
  1868                           
  1869                           ;./dht11.h: 51:     return data;
  1870     046D  0873               	movf	read_dht11@data,w
  1871     046E                     l132:
  1872     046E  0008               	return
  1873     046F                     __end_of_read_dht11:
  1874                           
  1875                           	psect	text3
  1876     0EE2                     __ptext3:	
  1877 ;; *************** function _incrementarTemperatura *****************
  1878 ;; Defined at:
  1879 ;;		line 90 in file "main.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0
  1896 ;;      Totals:         0       0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907     0EE2                     _incrementarTemperatura:	
  1908                           ;psect for function _incrementarTemperatura
  1909                           
  1910     0EE2                     l1899:	
  1911                           ;incstack = 0
  1912                           ; Regs used in _incrementarTemperatura: [wreg+status,2+status,0]
  1913                           
  1914                           
  1915                           ;main.c: 92:     if (temperaturaIdeal < 35)
  1916     0EE2  3023               	movlw	35
  1917     0EE3  027B               	subwf	_temperaturaIdeal,w
  1918     0EE4  1803               	skipnc
  1919     0EE5  2EE7               	goto	u1711
  1920     0EE6  2EE8               	goto	u1710
  1921     0EE7                     u1711:
  1922     0EE7  2EEB               	goto	l191
  1923     0EE8                     u1710:
  1924     0EE8                     l1901:
  1925                           
  1926                           ;main.c: 93:     {;main.c: 94:         temperaturaIdeal = temperaturaIdeal + 1;
  1927     0EE8  087B               	movf	_temperaturaIdeal,w
  1928     0EE9  3E01               	addlw	1
  1929     0EEA  00FB               	movwf	_temperaturaIdeal
  1930     0EEB                     l191:
  1931     0EEB  0008               	return
  1932     0EEC                     __end_of_incrementarTemperatura:
  1933                           
  1934                           	psect	text4
  1935     0F32                     __ptext4:	
  1936 ;; *************** function _find_response *****************
  1937 ;; Defined at:
  1938 ;;		line 20 in file "./dht11.h"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0
  1954 ;;      Temps:          1       0       0       0       0
  1955 ;;      Totals:         1       0       0       0       0
  1956 ;;Total ram usage:        1 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966     0F32                     _find_response:	
  1967                           ;psect for function _find_response
  1968                           
  1969     0F32                     l1851:	
  1970                           ;incstack = 0
  1971                           ; Regs used in _find_response: [wreg+status,2]
  1972                           
  1973                           
  1974                           ;./dht11.h: 21:     checkBit = 0;
  1975     0F32  1283               	bcf	3,5	;RP0=0, select bank0
  1976     0F33  1303               	bcf	3,6	;RP1=0, select bank0
  1977     0F34  01E5               	clrf	_checkBit
  1978     0F35                     l1853:
  1979                           
  1980                           ;./dht11.h: 22:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  1981     0F35  300D               	movlw	13
  1982     0F36  00F2               	movwf	??_find_response
  1983     0F37                     u2487:
  1984     0F37  0BF2               	decfsz	??_find_response,f
  1985     0F38  2F37               	goto	u2487
  1986     0F39                     l1855:
  1987                           
  1988                           ;./dht11.h: 23:     if (PORTCbits.RC2 == 0) {
  1989     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  1990     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  1991     0F3B  1907               	btfsc	7,2	;volatile
  1992     0F3C  2F3E               	goto	u1661
  1993     0F3D  2F3F               	goto	u1660
  1994     0F3E                     u1661:
  1995     0F3E  2F4F               	goto	l121
  1996     0F3F                     u1660:
  1997     0F3F                     l1857:
  1998                           
  1999                           ;./dht11.h: 24:         _delay((unsigned long)((80)*(8000000/4000000.0)));
  2000     0F3F  3035               	movlw	53
  2001     0F40  00F2               	movwf	??_find_response
  2002     0F41                     u2497:
  2003     0F41  0BF2               	decfsz	??_find_response,f
  2004     0F42  2F41               	goto	u2497
  2005     0F43                     l1859:
  2006                           
  2007                           ;./dht11.h: 25:         if (PORTCbits.RC2 == 1) {
  2008     0F43  1283               	bcf	3,5	;RP0=0, select bank0
  2009     0F44  1303               	bcf	3,6	;RP1=0, select bank0
  2010     0F45  1D07               	btfss	7,2	;volatile
  2011     0F46  2F48               	goto	u1671
  2012     0F47  2F49               	goto	u1670
  2013     0F48                     u1671:
  2014     0F48  2F4B               	goto	l1863
  2015     0F49                     u1670:
  2016     0F49                     l1861:
  2017                           
  2018                           ;./dht11.h: 26:             checkBit = 1;
  2019     0F49  3001               	movlw	1
  2020     0F4A  00E5               	movwf	_checkBit
  2021     0F4B                     l1863:
  2022                           
  2023                           ;./dht11.h: 28:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2024     0F4B  3021               	movlw	33
  2025     0F4C  00F2               	movwf	??_find_response
  2026     0F4D                     u2507:
  2027     0F4D  0BF2               	decfsz	??_find_response,f
  2028     0F4E  2F4D               	goto	u2507
  2029     0F4F                     l121:
  2030     0F4F  0008               	return
  2031     0F50                     __end_of_find_response:
  2032                           
  2033                           	psect	text5
  2034     0679                     __ptext5:	
  2035 ;; *************** function _display_terminal_data *****************
  2036 ;; Defined at:
  2037 ;;		line 105 in file "main.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2051 ;;      Params:         0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0
  2053 ;;      Temps:          0       2       0       0       0
  2054 ;;      Totals:         0       2       0       0       0
  2055 ;;Total ram usage:        2 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 6
  2058 ;; This function calls:
  2059 ;;		_UART_Write_Text
  2060 ;;		_sprintf
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066     0679                     _display_terminal_data:	
  2067                           ;psect for function _display_terminal_data
  2068                           
  2069     0679                     l2343:	
  2070                           ;incstack = 0
  2071                           ; Regs used in _display_terminal_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2072                           
  2073                           
  2074                           ;main.c: 107:     sprintf(umidadeBuffer, "Umidade: %i%%", RH);
  2075     0679  30C0               	movlw	(low (_umidadeBuffer| 0))& (0+255)
  2076     067A  1283               	bcf	3,5	;RP0=0, select bank0
  2077     067B  1303               	bcf	3,6	;RP1=0, select bank0
  2078     067C  00BB               	movwf	sprintf@s
  2079     067D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2080     067E  00BC               	movwf	sprintf@fmt
  2081     067F  085F               	movf	_RH,w
  2082     0680  00CC               	movwf	??_display_terminal_data
  2083     0681  01CD               	clrf	??_display_terminal_data+1
  2084     0682  084C               	movf	??_display_terminal_data,w
  2085     0683  00BD               	movwf	?_sprintf+2
  2086     0684  084D               	movf	??_display_terminal_data+1,w
  2087     0685  00BE               	movwf	?_sprintf+3
  2088     0686  120A  158A  27B7  120A  118A  	fcall	_sprintf
  2089                           
  2090                           ;main.c: 108:     UART_Write_Text(umidadeBuffer);
  2091     068B  30C0               	movlw	(low (_umidadeBuffer| 0))& (0+255)
  2092     068C  00F3               	movwf	UART_Write_Text@text
  2093     068D  3000               	movlw	0
  2094     068E  00F4               	movwf	UART_Write_Text@text+1
  2095     068F  120A  158A  27DA  120A  118A  	fcall	_UART_Write_Text
  2096                           
  2097                           ;main.c: 109:     UART_Write_Text("\r\n");
  2098     0694  3027               	movlw	(low (((STR_8+2)-__stringbase)| (0+32768)))& (0+255)
  2099     0695  00F3               	movwf	UART_Write_Text@text
  2100     0696  3080               	movlw	128
  2101     0697  00F4               	movwf	UART_Write_Text@text+1
  2102     0698  120A  158A  27DA  120A  118A  	fcall	_UART_Write_Text
  2103                           
  2104                           ;main.c: 111:     sprintf(tempBuffer, "Temp: %iC", temper);
  2105     069D  3066               	movlw	(low (_tempBuffer| 0))& (0+255)
  2106     069E  1283               	bcf	3,5	;RP0=0, select bank0
  2107     069F  1303               	bcf	3,6	;RP1=0, select bank0
  2108     06A0  00BB               	movwf	sprintf@s
  2109     06A1  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2110     06A2  00BC               	movwf	sprintf@fmt
  2111     06A3  0860               	movf	_temper,w
  2112     06A4  00CC               	movwf	??_display_terminal_data
  2113     06A5  01CD               	clrf	??_display_terminal_data+1
  2114     06A6  084C               	movf	??_display_terminal_data,w
  2115     06A7  00BD               	movwf	?_sprintf+2
  2116     06A8  084D               	movf	??_display_terminal_data+1,w
  2117     06A9  00BE               	movwf	?_sprintf+3
  2118     06AA  120A  158A  27B7  120A  118A  	fcall	_sprintf
  2119                           
  2120                           ;main.c: 112:     UART_Write_Text(tempBuffer);
  2121     06AF  3066               	movlw	(low (_tempBuffer| 0))& (0+255)
  2122     06B0  00F3               	movwf	UART_Write_Text@text
  2123     06B1  3000               	movlw	0
  2124     06B2  00F4               	movwf	UART_Write_Text@text+1
  2125     06B3  120A  158A  27DA  120A  118A  	fcall	_UART_Write_Text
  2126                           
  2127                           ;main.c: 113:     UART_Write_Text("\r\n\r\n");
  2128     06B8  3025               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2129     06B9  00F3               	movwf	UART_Write_Text@text
  2130     06BA  3080               	movlw	128
  2131     06BB  00F4               	movwf	UART_Write_Text@text+1
  2132     06BC  120A  158A  27DA  120A  118A  	fcall	_UART_Write_Text
  2133     06C1                     l198:
  2134     06C1  0008               	return
  2135     06C2                     __end_of_display_terminal_data:
  2136                           
  2137                           	psect	text6
  2138     0FDA                     __ptext6:	
  2139 ;; *************** function _UART_Write_Text *****************
  2140 ;; Defined at:
  2141 ;;		line 18 in file "./UART.h"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  text            2    3[COMMON] PTR unsigned char 
  2144 ;;		 -> STR_8(5), STR_6(3), tempBuffer(8), umidadeBuffer(8), 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         2       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0
  2159 ;;      Totals:         2       0       0       0       0
  2160 ;;Total ram usage:        2 bytes
  2161 ;; Hardware stack levels used: 1
  2162 ;; Hardware stack levels required when called: 2
  2163 ;; This function calls:
  2164 ;;		_UART_Write
  2165 ;; This function is called by:
  2166 ;;		_display_terminal_data
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170     0FDA                     _UART_Write_Text:	
  2171                           ;psect for function _UART_Write_Text
  2172                           
  2173     0FDA                     l1771:	
  2174                           ;incstack = 0
  2175                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2176                           
  2177                           
  2178                           ;./UART.h: 19:     while (*text) {
  2179     0FDA  2FEF               	goto	l1777
  2180     0FDB                     l1773:
  2181                           
  2182                           ;./UART.h: 20:         UART_Write(*text++);
  2183     0FDB  0874               	movf	UART_Write_Text@text+1,w
  2184     0FDC  00FF               	movwf	btemp+1
  2185     0FDD  0873               	movf	UART_Write_Text@text,w
  2186     0FDE  0084               	movwf	4
  2187     0FDF  120A  118A  2742  120A  158A  	fcall	stringtab
  2188     0FE4  120A  158A  26EC  120A  158A  	fcall	_UART_Write
  2189     0FE9                     l1775:
  2190     0FE9  3001               	movlw	1
  2191     0FEA  07F3               	addwf	UART_Write_Text@text,f
  2192     0FEB  1803               	skipnc
  2193     0FEC  0AF4               	incf	UART_Write_Text@text+1,f
  2194     0FED  3000               	movlw	0
  2195     0FEE  07F4               	addwf	UART_Write_Text@text+1,f
  2196     0FEF                     l1777:
  2197                           
  2198                           ;./UART.h: 19:     while (*text) {
  2199     0FEF  0874               	movf	UART_Write_Text@text+1,w
  2200     0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  2201     0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  2202     0FF2  00FF               	movwf	btemp+1
  2203     0FF3  0873               	movf	UART_Write_Text@text,w
  2204     0FF4  0084               	movwf	4
  2205     0FF5  120A  118A  2742  120A  158A  	fcall	stringtab
  2206     0FFA  3A00               	xorlw	0
  2207     0FFB  1D03               	skipz
  2208     0FFC  2FFE               	goto	u1551
  2209     0FFD  2FFF               	goto	u1550
  2210     0FFE                     u1551:
  2211     0FFE  2FDB               	goto	l1773
  2212     0FFF                     u1550:
  2213     0FFF                     l155:
  2214     0FFF  0008               	return
  2215     1000                     __end_of_UART_Write_Text:
  2216                           
  2217                           	psect	text7
  2218     0EEC                     __ptext7:	
  2219 ;; *************** function _UART_Write *****************
  2220 ;; Defined at:
  2221 ;;		line 12 in file "./UART.h"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  data            1    wreg     unsigned char 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  data            1    2[COMMON] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2235 ;;      Params:         0       0       0       0       0
  2236 ;;      Locals:         1       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0
  2238 ;;      Totals:         1       0       0       0       0
  2239 ;;Total ram usage:        1 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 1
  2242 ;; This function calls:
  2243 ;;		Nothing
  2244 ;; This function is called by:
  2245 ;;		_UART_Write_Text
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249     0EEC                     _UART_Write:	
  2250                           ;psect for function _UART_Write
  2251                           
  2252                           
  2253                           ;incstack = 0
  2254                           ; Regs used in _UART_Write: [wreg]
  2255                           ;UART_Write@data stored from wreg
  2256     0EEC  00F2               	movwf	UART_Write@data
  2257     0EED                     l1681:
  2258     0EED                     l146:	
  2259                           ;./UART.h: 13:     while (!TXSTAbits.TRMT);
  2260                           
  2261     0EED  1683               	bsf	3,5	;RP0=1, select bank1
  2262     0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  2263     0EEF  1C98               	btfss	24,1	;volatile
  2264     0EF0  2EF2               	goto	u1361
  2265     0EF1  2EF3               	goto	u1360
  2266     0EF2                     u1361:
  2267     0EF2  2EED               	goto	l146
  2268     0EF3                     u1360:
  2269     0EF3                     l1683:
  2270                           
  2271                           ;./UART.h: 14:     TXREG = data;
  2272     0EF3  0872               	movf	UART_Write@data,w
  2273     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  2274     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  2275     0EF6  0099               	movwf	25	;volatile
  2276     0EF7                     l149:
  2277     0EF7  0008               	return
  2278     0EF8                     __end_of_UART_Write:
  2279                           
  2280                           	psect	text8
  2281     062D                     __ptext8:	
  2282 ;; *************** function _display_dht11_data *****************
  2283 ;; Defined at:
  2284 ;;		line 63 in file "main.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         0       0       0       0       0
  2299 ;;      Locals:         0       0       0       0       0
  2300 ;;      Temps:          0       2       0       0       0
  2301 ;;      Totals:         0       2       0       0       0
  2302 ;;Total ram usage:        2 bytes
  2303 ;; Hardware stack levels used: 1
  2304 ;; Hardware stack levels required when called: 6
  2305 ;; This function calls:
  2306 ;;		_Lcd_Clear
  2307 ;;		_Lcd_Set_Cursor
  2308 ;;		_Lcd_Write_String
  2309 ;;		_sprintf
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315     062D                     _display_dht11_data:	
  2316                           ;psect for function _display_dht11_data
  2317                           
  2318     062D                     l2327:	
  2319                           ;incstack = 0
  2320                           ; Regs used in _display_dht11_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2321                           
  2322                           
  2323                           ;main.c: 65:     Lcd_Clear();
  2324     062D  120A  158A  26F8  120A  118A  	fcall	_Lcd_Clear
  2325                           
  2326                           ;main.c: 68:     Lcd_Set_Cursor(1, 1);
  2327     0632  01F6               	clrf	Lcd_Set_Cursor@b
  2328     0633  0AF6               	incf	Lcd_Set_Cursor@b,f
  2329     0634  3001               	movlw	1
  2330     0635  120A  118A  25DF  120A  118A  	fcall	_Lcd_Set_Cursor
  2331     063A                     l2329:
  2332                           
  2333                           ;main.c: 69:     sprintf(umidadeBuffer, "Umidade: %i%%", RH);
  2334     063A  30C0               	movlw	(low (_umidadeBuffer| 0))& (0+255)
  2335     063B  1283               	bcf	3,5	;RP0=0, select bank0
  2336     063C  1303               	bcf	3,6	;RP1=0, select bank0
  2337     063D  00BB               	movwf	sprintf@s
  2338     063E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2339     063F  00BC               	movwf	sprintf@fmt
  2340     0640  085F               	movf	_RH,w
  2341     0641  00CC               	movwf	??_display_dht11_data
  2342     0642  01CD               	clrf	??_display_dht11_data+1
  2343     0643  084C               	movf	??_display_dht11_data,w
  2344     0644  00BD               	movwf	?_sprintf+2
  2345     0645  084D               	movf	??_display_dht11_data+1,w
  2346     0646  00BE               	movwf	?_sprintf+3
  2347     0647  120A  158A  27B7  120A  118A  	fcall	_sprintf
  2348     064C                     l2331:
  2349                           
  2350                           ;main.c: 70:     Lcd_Write_String(umidadeBuffer);
  2351     064C  30C0               	movlw	(low (_umidadeBuffer| 0))& (0+255)
  2352     064D  00F7               	movwf	Lcd_Write_String@a
  2353     064E  3000               	movlw	0
  2354     064F  00F8               	movwf	Lcd_Write_String@a+1
  2355     0650  120A  118A  26C2  120A  118A  	fcall	_Lcd_Write_String
  2356                           
  2357                           ;main.c: 73:     Lcd_Set_Cursor(2, 1);
  2358     0655  01F6               	clrf	Lcd_Set_Cursor@b
  2359     0656  0AF6               	incf	Lcd_Set_Cursor@b,f
  2360     0657  3002               	movlw	2
  2361     0658  120A  118A  25DF  120A  118A  	fcall	_Lcd_Set_Cursor
  2362     065D                     l2333:
  2363                           
  2364                           ;main.c: 74:     sprintf(tempBuffer, "Temp: %iC", temper);
  2365     065D  3066               	movlw	(low (_tempBuffer| 0))& (0+255)
  2366     065E  1283               	bcf	3,5	;RP0=0, select bank0
  2367     065F  1303               	bcf	3,6	;RP1=0, select bank0
  2368     0660  00BB               	movwf	sprintf@s
  2369     0661  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2370     0662  00BC               	movwf	sprintf@fmt
  2371     0663  0860               	movf	_temper,w
  2372     0664  00CC               	movwf	??_display_dht11_data
  2373     0665  01CD               	clrf	??_display_dht11_data+1
  2374     0666  084C               	movf	??_display_dht11_data,w
  2375     0667  00BD               	movwf	?_sprintf+2
  2376     0668  084D               	movf	??_display_dht11_data+1,w
  2377     0669  00BE               	movwf	?_sprintf+3
  2378     066A  120A  158A  27B7  120A  118A  	fcall	_sprintf
  2379     066F                     l2335:
  2380                           
  2381                           ;main.c: 75:     Lcd_Write_String(tempBuffer);
  2382     066F  3066               	movlw	(low (_tempBuffer| 0))& (0+255)
  2383     0670  00F7               	movwf	Lcd_Write_String@a
  2384     0671  3000               	movlw	0
  2385     0672  00F8               	movwf	Lcd_Write_String@a+1
  2386     0673  120A  118A  26C2  120A  118A  	fcall	_Lcd_Write_String
  2387     0678                     l184:
  2388     0678  0008               	return
  2389     0679                     __end_of_display_dht11_data:
  2390                           
  2391                           	psect	text9
  2392     07E5                     __ptext9:	
  2393 ;; *************** function _dht11_init *****************
  2394 ;; Defined at:
  2395 ;;		line 11 in file "./dht11.h"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2409 ;;      Params:         0       0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0
  2411 ;;      Temps:          2       0       0       0       0
  2412 ;;      Totals:         2       0       0       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 1
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423     07E5                     _dht11_init:	
  2424                           ;psect for function _dht11_init
  2425                           
  2426     07E5                     l1843:	
  2427                           ;incstack = 0
  2428                           ; Regs used in _dht11_init: [wreg]
  2429                           
  2430                           
  2431                           ;./dht11.h: 12:     TRISCbits.TRISC2 = 0;
  2432     07E5  1683               	bsf	3,5	;RP0=1, select bank1
  2433     07E6  1303               	bcf	3,6	;RP1=0, select bank1
  2434     07E7  1107               	bcf	7,2	;volatile
  2435                           
  2436                           ;./dht11.h: 13:     PORTCbits.RC2 = 0;
  2437     07E8  1283               	bcf	3,5	;RP0=0, select bank0
  2438     07E9  1303               	bcf	3,6	;RP1=0, select bank0
  2439     07EA  1107               	bcf	7,2	;volatile
  2440     07EB                     l1845:
  2441                           
  2442                           ;./dht11.h: 14:     _delay((unsigned long)((18)*(8000000/4000.0)));
  2443     07EB  302F               	movlw	47
  2444     07EC  00F3               	movwf	??_dht11_init+1
  2445     07ED  30BF               	movlw	191
  2446     07EE  00F2               	movwf	??_dht11_init
  2447     07EF                     u2517:
  2448     07EF  0BF2               	decfsz	??_dht11_init,f
  2449     07F0  2FEF               	goto	u2517
  2450     07F1  0BF3               	decfsz	??_dht11_init+1,f
  2451     07F2  2FEF               	goto	u2517
  2452     07F3  2FF4               	nop2
  2453     07F4                     l1847:
  2454                           
  2455                           ;./dht11.h: 15:     PORTCbits.RC2 = 1;
  2456     07F4  1283               	bcf	3,5	;RP0=0, select bank0
  2457     07F5  1303               	bcf	3,6	;RP1=0, select bank0
  2458     07F6  1507               	bsf	7,2	;volatile
  2459                           
  2460                           ;./dht11.h: 16:     _delay((unsigned long)((25)*(8000000/4000000.0)));
  2461     07F7  3010               	movlw	16
  2462     07F8  00F2               	movwf	??_dht11_init
  2463     07F9                     u2527:
  2464     07F9  0BF2               	decfsz	??_dht11_init,f
  2465     07FA  2FF9               	goto	u2527
  2466     07FB  0000               	nop
  2467     07FC                     l1849:
  2468                           
  2469                           ;./dht11.h: 17:     TRISCbits.TRISC2 = 1;
  2470     07FC  1683               	bsf	3,5	;RP0=1, select bank1
  2471     07FD  1303               	bcf	3,6	;RP1=0, select bank1
  2472     07FE  1507               	bsf	7,2	;volatile
  2473     07FF                     l116:
  2474     07FF  0008               	return
  2475     0800                     __end_of_dht11_init:
  2476                           
  2477                           	psect	text10
  2478     0708                     __ptext10:	
  2479 ;; *************** function _definir_temperatura *****************
  2480 ;; Defined at:
  2481 ;;		line 78 in file "main.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2495 ;;      Params:         0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0
  2497 ;;      Temps:          0       2       0       0       0
  2498 ;;      Totals:         0       2       0       0       0
  2499 ;;Total ram usage:        2 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 6
  2502 ;; This function calls:
  2503 ;;		_Lcd_Clear
  2504 ;;		_Lcd_Set_Cursor
  2505 ;;		_Lcd_Write_String
  2506 ;;		_sprintf
  2507 ;; This function is called by:
  2508 ;;		_main
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512     0708                     _definir_temperatura:	
  2513                           ;psect for function _definir_temperatura
  2514                           
  2515     0708                     l2337:	
  2516                           ;incstack = 0
  2517                           ; Regs used in _definir_temperatura: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2518                           
  2519                           
  2520                           ;main.c: 80:     Lcd_Clear();
  2521     0708  120A  158A  26F8  120A  118A  	fcall	_Lcd_Clear
  2522                           
  2523                           ;main.c: 83:     Lcd_Set_Cursor(1, 1);
  2524     070D  01F6               	clrf	Lcd_Set_Cursor@b
  2525     070E  0AF6               	incf	Lcd_Set_Cursor@b,f
  2526     070F  3001               	movlw	1
  2527     0710  120A  118A  25DF  120A  118A  	fcall	_Lcd_Set_Cursor
  2528     0715                     l2339:
  2529                           
  2530                           ;main.c: 84:     Lcd_Write_String("Temp. ideal");
  2531     0715  300F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2532     0716  00F7               	movwf	Lcd_Write_String@a
  2533     0717  3080               	movlw	128
  2534     0718  00F8               	movwf	Lcd_Write_String@a+1
  2535     0719  120A  118A  26C2  120A  118A  	fcall	_Lcd_Write_String
  2536     071E                     l2341:
  2537                           
  2538                           ;main.c: 85:     Lcd_Set_Cursor(2, 1);
  2539     071E  01F6               	clrf	Lcd_Set_Cursor@b
  2540     071F  0AF6               	incf	Lcd_Set_Cursor@b,f
  2541     0720  3002               	movlw	2
  2542     0721  120A  118A  25DF  120A  118A  	fcall	_Lcd_Set_Cursor
  2543                           
  2544                           ;main.c: 86:     sprintf(infoTempBuffer, "%iC", temperaturaIdeal);
  2545     0726  30C8               	movlw	(low (_infoTempBuffer| 0))& (0+255)
  2546     0727  1283               	bcf	3,5	;RP0=0, select bank0
  2547     0728  1303               	bcf	3,6	;RP1=0, select bank0
  2548     0729  00BB               	movwf	sprintf@s
  2549     072A  3021               	movlw	(low (((STR_2+6)-__stringbase)| (0+32768)))& (0+255)
  2550     072B  00BC               	movwf	sprintf@fmt
  2551     072C  087B               	movf	_temperaturaIdeal,w
  2552     072D  00CC               	movwf	??_definir_temperatura
  2553     072E  01CD               	clrf	??_definir_temperatura+1
  2554     072F  084C               	movf	??_definir_temperatura,w
  2555     0730  00BD               	movwf	?_sprintf+2
  2556     0731  084D               	movf	??_definir_temperatura+1,w
  2557     0732  00BE               	movwf	?_sprintf+3
  2558     0733  120A  158A  27B7  120A  118A  	fcall	_sprintf
  2559                           
  2560                           ;main.c: 87:     Lcd_Write_String(infoTempBuffer);
  2561     0738  30C8               	movlw	(low (_infoTempBuffer| 0))& (0+255)
  2562     0739  00F7               	movwf	Lcd_Write_String@a
  2563     073A  3000               	movlw	0
  2564     073B  00F8               	movwf	Lcd_Write_String@a+1
  2565     073C  120A  118A  26C2  120A  118A  	fcall	_Lcd_Write_String
  2566     0741                     l187:
  2567     0741  0008               	return
  2568     0742                     __end_of_definir_temperatura:
  2569                           
  2570                           	psect	text11
  2571     0FB7                     __ptext11:	
  2572 ;; *************** function _sprintf *****************
  2573 ;; Defined at:
  2574 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  s               1   27[BANK0 ] PTR unsigned char 
  2577 ;;		 -> infoTempBuffer(8), tempBuffer(8), umidadeBuffer(8), 
  2578 ;;  fmt             1   28[BANK0 ] PTR const unsigned char 
  2579 ;;		 -> STR_7(10), STR_5(14), STR_4(4), STR_2(10), 
  2580 ;;		 -> STR_1(14), 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  f              11   33[BANK0 ] struct _IO_FILE
  2583 ;;  ret             2    0        int 
  2584 ;;  ap              1   32[BANK0 ] PTR void [1]
  2585 ;;		 -> ?_sprintf(2), 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  2   27[BANK0 ] int 
  2588 ;; Registers used:
  2589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       4       0       0       0
  2596 ;;      Locals:         0      12       0       0       0
  2597 ;;      Temps:          0       1       0       0       0
  2598 ;;      Totals:         0      17       0       0       0
  2599 ;;Total ram usage:       17 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 5
  2602 ;; This function calls:
  2603 ;;		_vfprintf
  2604 ;; This function is called by:
  2605 ;;		_display_dht11_data
  2606 ;;		_definir_temperatura
  2607 ;;		_display_terminal_data
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611     0FB7                     _sprintf:	
  2612                           ;psect for function _sprintf
  2613                           
  2614     0FB7                     l2245:	
  2615                           ;incstack = 0
  2616                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2617                           
  2618     0FB7  303D               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2619     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  2620     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  2621     0FBA  00C0               	movwf	sprintf@ap
  2622     0FBB                     l2247:
  2623     0FBB  083B               	movf	sprintf@s,w
  2624     0FBC  00C1               	movwf	sprintf@f
  2625     0FBD  3000               	movlw	0
  2626     0FBE  00C2               	movwf	sprintf@f+1
  2627     0FBF                     l2249:
  2628     0FBF  01C3               	clrf	sprintf@f+2
  2629     0FC0  01C4               	clrf	sprintf@f+3
  2630     0FC1                     l2251:
  2631     0FC1  01CA               	clrf	sprintf@f+9
  2632     0FC2  01CB               	clrf	sprintf@f+10
  2633     0FC3                     l2253:
  2634     0FC3  3041               	movlw	low sprintf@f
  2635     0FC4  00B6               	movwf	vfprintf@fp
  2636     0FC5  3000               	movlw	high sprintf@f
  2637     0FC6  00B7               	movwf	vfprintf@fp+1
  2638     0FC7  083C               	movf	sprintf@fmt,w
  2639     0FC8  00B8               	movwf	vfprintf@fmt
  2640     0FC9  3040               	movlw	(low (sprintf@ap| 0))& (0+255)
  2641     0FCA  00B9               	movwf	vfprintf@ap
  2642     0FCB  120A  158A  2794  120A  158A  	fcall	_vfprintf
  2643     0FD0                     l2255:
  2644     0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2645     0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2646     0FD2  0843               	movf	sprintf@f+2,w
  2647     0FD3  073B               	addwf	sprintf@s,w
  2648     0FD4  00BF               	movwf	??_sprintf
  2649     0FD5  083F               	movf	??_sprintf,w
  2650     0FD6  0084               	movwf	4
  2651     0FD7  1383               	bcf	3,7	;select IRP bank0
  2652     0FD8  0180               	clrf	0
  2653     0FD9                     l782:
  2654     0FD9  0008               	return
  2655     0FDA                     __end_of_sprintf:
  2656                           
  2657                           	psect	text12
  2658     0F94                     __ptext12:	
  2659 ;; *************** function _vfprintf *****************
  2660 ;; Defined at:
  2661 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  fp              2   22[BANK0 ] PTR struct _IO_FILE
  2664 ;;		 -> sprintf@f(11), 
  2665 ;;  fmt             1   24[BANK0 ] PTR const unsigned char 
  2666 ;;		 -> STR_7(10), STR_5(14), STR_4(4), STR_2(10), 
  2667 ;;		 -> STR_1(14), 
  2668 ;;  ap              1   25[BANK0 ] PTR PTR void 
  2669 ;;		 -> sprintf@ap(1), 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  cfmt            1   26[BANK0 ] PTR unsigned char 
  2672 ;;		 -> STR_7(10), STR_5(14), STR_4(4), STR_2(10), 
  2673 ;;		 -> STR_1(14), 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  2   22[BANK0 ] int 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2683 ;;      Params:         0       4       0       0       0
  2684 ;;      Locals:         0       1       0       0       0
  2685 ;;      Temps:          0       0       0       0       0
  2686 ;;      Totals:         0       5       0       0       0
  2687 ;;Total ram usage:        5 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 4
  2690 ;; This function calls:
  2691 ;;		_vfpfcnvrt
  2692 ;; This function is called by:
  2693 ;;		_sprintf
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697     0F94                     _vfprintf:	
  2698                           ;psect for function _vfprintf
  2699                           
  2700     0F94                     l2201:	
  2701                           ;incstack = 0
  2702                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2703                           
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2706     0F94  1283               	bcf	3,5	;RP0=0, select bank0
  2707     0F95  1303               	bcf	3,6	;RP1=0, select bank0
  2708     0F96  0838               	movf	vfprintf@fmt,w
  2709     0F97  00BA               	movwf	vfprintf@cfmt
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2712     0F98  2FA6               	goto	l2205
  2713     0F99                     l2203:
  2714                           
  2715                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2716     0F99  0836               	movf	vfprintf@fp,w
  2717     0F9A  00A9               	movwf	vfpfcnvrt@fp
  2718     0F9B  0837               	movf	vfprintf@fp+1,w
  2719     0F9C  00AA               	movwf	vfpfcnvrt@fp+1
  2720     0F9D  303A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2721     0F9E  00AB               	movwf	vfpfcnvrt@fmt
  2722     0F9F  0839               	movf	vfprintf@ap,w
  2723     0FA0  00AC               	movwf	vfpfcnvrt@ap
  2724     0FA1  120A  118A  21C3  120A  158A  	fcall	_vfpfcnvrt
  2725     0FA6                     l2205:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2728     0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  2729     0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  2730     0FA8  083A               	movf	vfprintf@cfmt,w
  2731     0FA9  0084               	movwf	4
  2732     0FAA  120A  118A  274C  120A  158A  	fcall	stringdir
  2733     0FAF  3A00               	xorlw	0
  2734     0FB0  1D03               	skipz
  2735     0FB1  2FB3               	goto	u2071
  2736     0FB2  2FB4               	goto	u2070
  2737     0FB3                     u2071:
  2738     0FB3  2F99               	goto	l2203
  2739     0FB4                     u2070:
  2740     0FB4                     l2207:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2743     0FB4  01B6               	clrf	?_vfprintf
  2744     0FB5  01B7               	clrf	?_vfprintf+1
  2745     0FB6                     l827:
  2746     0FB6  0008               	return
  2747     0FB7                     __end_of_vfprintf:
  2748                           
  2749                           	psect	text13
  2750     01C3                     __ptext13:	
  2751 ;; *************** function _vfpfcnvrt *****************
  2752 ;; Defined at:
  2753 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  2756 ;;		 -> sprintf@f(11), 
  2757 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  2758 ;;		 -> vfprintf@cfmt(1), 
  2759 ;;  ap              1   12[BANK0 ] PTR PTR void 
  2760 ;;		 -> sprintf@ap(1), 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  convarg         4   17[BANK0 ] struct .
  2763 ;;  c               1   21[BANK0 ] unsigned char 
  2764 ;;  cp              1   16[BANK0 ] PTR unsigned char 
  2765 ;;		 -> STR_7(10), STR_5(14), STR_4(4), STR_2(10), 
  2766 ;;		 -> STR_1(14), 
  2767 ;;  done            1   15[BANK0 ] _Bool 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2777 ;;      Params:         0       4       0       0       0
  2778 ;;      Locals:         0       7       0       0       0
  2779 ;;      Temps:          0       2       0       0       0
  2780 ;;      Totals:         0      13       0       0       0
  2781 ;;Total ram usage:       13 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 3
  2784 ;; This function calls:
  2785 ;;		___awdiv
  2786 ;;		___awmod
  2787 ;;		_abs
  2788 ;;		_fputc
  2789 ;; This function is called by:
  2790 ;;		_vfprintf
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794     01C3                     _vfpfcnvrt:	
  2795                           ;psect for function _vfpfcnvrt
  2796                           
  2797     01C3                     l2107:	
  2798                           ;incstack = 0
  2799                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2800                           
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2803     01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2804     01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2805     01C5  082B               	movf	vfpfcnvrt@fmt,w
  2806     01C6  0084               	movwf	4
  2807     01C7  1383               	bcf	3,7	;select IRP bank0
  2808     01C8  0800               	movf	0,w
  2809     01C9  0084               	movwf	4
  2810     01CA  120A  118A  274C  120A  118A  	fcall	stringdir
  2811     01CF  3A25               	xorlw	37
  2812     01D0  1D03               	skipz
  2813     01D1  29D3               	goto	u1951
  2814     01D2  29D4               	goto	u1950
  2815     01D3                     u1951:
  2816     01D3  2AB0               	goto	l2161
  2817     01D4                     u1950:
  2818     01D4                     l2109:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2821     01D4  082B               	movf	vfpfcnvrt@fmt,w
  2822     01D5  0084               	movwf	4
  2823     01D6  3001               	movlw	1
  2824     01D7  0780               	addwf	0,f
  2825     01D8                     l2111:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2828     01D8  01D1               	clrf	_width
  2829     01D9  01D2               	clrf	_width+1
  2830     01DA  3000               	movlw	0
  2831     01DB  00DD               	movwf	_flags
  2832     01DC                     l2113:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2835     01DC  30FF               	movlw	255
  2836     01DD  00D3               	movwf	_prec
  2837     01DE  30FF               	movlw	255
  2838     01DF  00D4               	movwf	_prec+1
  2839     01E0                     l2115:
  2840                           
  2841                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2842     01E0  082B               	movf	vfpfcnvrt@fmt,w
  2843     01E1  0084               	movwf	4
  2844     01E2  0800               	movf	0,w
  2845     01E3  00B0               	movwf	vfpfcnvrt@cp
  2846     01E4                     l2117:
  2847                           
  2848                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2849     01E4  0830               	movf	vfpfcnvrt@cp,w
  2850     01E5  0084               	movwf	4
  2851     01E6  120A  118A  274C  120A  118A  	fcall	stringdir
  2852     01EB  3A64               	xorlw	100
  2853     01EC  1903               	skipnz
  2854     01ED  29EF               	goto	u1961
  2855     01EE  29F0               	goto	u1960
  2856     01EF                     u1961:
  2857     01EF  29FC               	goto	l2121
  2858     01F0                     u1960:
  2859     01F0                     l2119:
  2860     01F0  0830               	movf	vfpfcnvrt@cp,w
  2861     01F1  0084               	movwf	4
  2862     01F2  120A  118A  274C  120A  118A  	fcall	stringdir
  2863     01F7  3A69               	xorlw	105
  2864     01F8  1D03               	skipz
  2865     01F9  29FB               	goto	u1971
  2866     01FA  29FC               	goto	u1970
  2867     01FB                     u1971:
  2868     01FB  2A88               	goto	l2149
  2869     01FC                     u1970:
  2870     01FC                     l2121:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2873     01FC  082C               	movf	vfpfcnvrt@ap,w
  2874     01FD  0084               	movwf	4
  2875     01FE  0800               	movf	0,w
  2876     01FF  00FF               	movwf	btemp+1
  2877     0200  3002               	movlw	2
  2878     0201  0780               	addwf	0,f
  2879     0202  087F               	movf	btemp+1,w
  2880     0203  0084               	movwf	4
  2881     0204  0800               	movf	0,w
  2882     0205  00B1               	movwf	vfpfcnvrt@convarg
  2883     0206  0A84               	incf	4,f
  2884     0207  0800               	movf	0,w
  2885     0208  00B2               	movwf	vfpfcnvrt@convarg+1
  2886     0209                     l2123:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2889     0209  082B               	movf	vfpfcnvrt@fmt,w
  2890     020A  0084               	movwf	4
  2891     020B  0830               	movf	vfpfcnvrt@cp,w
  2892     020C  3E01               	addlw	1
  2893     020D  0080               	movwf	0
  2894     020E                     l2125:
  2895                           
  2896                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2897     020E  3020               	movlw	32
  2898     020F  00B5               	movwf	vfpfcnvrt@c
  2899     0210                     l2127:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2902     0210  1BB2               	btfsc	vfpfcnvrt@convarg+1,7
  2903     0211  2A13               	goto	u1981
  2904     0212  2A15               	goto	u1980
  2905     0213                     u1981:
  2906     0213  3001               	movlw	1
  2907     0214  2A16               	goto	u1990
  2908     0215                     u1980:
  2909     0215  3000               	movlw	0
  2910     0216                     u1990:
  2911     0216  00AF               	movwf	vfpfcnvrt@done
  2912     0217                     l2129:
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2915     0217  3001               	movlw	1
  2916     0218  02B5               	subwf	vfpfcnvrt@c,f
  2917     0219  0835               	movf	vfpfcnvrt@c,w
  2918     021A  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2919     021B  0084               	movwf	4
  2920     021C  300A               	movlw	10
  2921     021D  00F2               	movwf	___awmod@divisor
  2922     021E  3000               	movlw	0
  2923     021F  00F3               	movwf	___awmod@divisor+1
  2924     0220  0832               	movf	vfpfcnvrt@convarg+1,w
  2925     0221  00F5               	movwf	___awmod@dividend+1
  2926     0222  0831               	movf	vfpfcnvrt@convarg,w
  2927     0223  00F4               	movwf	___awmod@dividend
  2928     0224  120A  118A  2588  120A  118A  	fcall	___awmod
  2929     0229  0873               	movf	?___awmod+1,w
  2930     022A  00F9               	movwf	abs@a+1
  2931     022B  0872               	movf	?___awmod,w
  2932     022C  00F8               	movwf	abs@a
  2933     022D  120A  158A  2705  120A  118A  	fcall	_abs
  2934     0232  0878               	movf	?_abs,w
  2935     0233  3E30               	addlw	48
  2936     0234  1383               	bcf	3,7	;select IRP bank1
  2937     0235  0080               	movwf	0
  2938     0236                     l2131:
  2939                           
  2940                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2941     0236  300A               	movlw	10
  2942     0237  00F2               	movwf	___awdiv@divisor
  2943     0238  3000               	movlw	0
  2944     0239  00F3               	movwf	___awdiv@divisor+1
  2945     023A  1283               	bcf	3,5	;RP0=0, select bank0
  2946     023B  1303               	bcf	3,6	;RP1=0, select bank0
  2947     023C  0832               	movf	vfpfcnvrt@convarg+1,w
  2948     023D  00F5               	movwf	___awdiv@dividend+1
  2949     023E  0831               	movf	vfpfcnvrt@convarg,w
  2950     023F  00F4               	movwf	___awdiv@dividend
  2951     0240  120A  118A  246F  120A  118A  	fcall	___awdiv
  2952     0245  0873               	movf	?___awdiv+1,w
  2953     0246  1283               	bcf	3,5	;RP0=0, select bank0
  2954     0247  1303               	bcf	3,6	;RP1=0, select bank0
  2955     0248  00B2               	movwf	vfpfcnvrt@convarg+1
  2956     0249  0872               	movf	?___awdiv,w
  2957     024A  00B1               	movwf	vfpfcnvrt@convarg
  2958     024B                     l2133:
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2961     024B  0831               	movf	vfpfcnvrt@convarg,w
  2962     024C  0432               	iorwf	vfpfcnvrt@convarg+1,w
  2963     024D  1903               	btfsc	3,2
  2964     024E  2A50               	goto	u2001
  2965     024F  2A51               	goto	u2000
  2966     0250                     u2001:
  2967     0250  2A56               	goto	l2137
  2968     0251                     u2000:
  2969     0251                     l2135:
  2970     0251  0835               	movf	vfpfcnvrt@c,w
  2971     0252  1D03               	btfss	3,2
  2972     0253  2A55               	goto	u2011
  2973     0254  2A56               	goto	u2010
  2974     0255                     u2011:
  2975     0255  2A17               	goto	l2129
  2976     0256                     u2010:
  2977     0256                     l2137:
  2978                           
  2979                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2980     0256  0835               	movf	vfpfcnvrt@c,w
  2981     0257  1903               	btfsc	3,2
  2982     0258  2A5A               	goto	u2021
  2983     0259  2A5B               	goto	u2020
  2984     025A                     u2021:
  2985     025A  2A81               	goto	l2147
  2986     025B                     u2020:
  2987     025B                     l2139:
  2988     025B  082F               	movf	vfpfcnvrt@done,w
  2989     025C  1903               	btfsc	3,2
  2990     025D  2A5F               	goto	u2031
  2991     025E  2A60               	goto	u2030
  2992     025F                     u2031:
  2993     025F  2A81               	goto	l2147
  2994     0260                     u2030:
  2995     0260                     l2141:
  2996                           
  2997                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2998     0260  3001               	movlw	1
  2999     0261  02B5               	subwf	vfpfcnvrt@c,f
  3000     0262  0835               	movf	vfpfcnvrt@c,w
  3001     0263  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  3002     0264  0084               	movwf	4
  3003     0265  302D               	movlw	45
  3004     0266  1383               	bcf	3,7	;select IRP bank1
  3005     0267  0080               	movwf	0
  3006     0268  2A81               	goto	l2147
  3007     0269                     l2143:
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3010     0269  0835               	movf	vfpfcnvrt@c,w
  3011     026A  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  3012     026B  0084               	movwf	4
  3013     026C  1383               	bcf	3,7	;select IRP bank1
  3014     026D  0800               	movf	0,w
  3015     026E  00AD               	movwf	??_vfpfcnvrt
  3016     026F  01AE               	clrf	??_vfpfcnvrt+1
  3017     0270  082D               	movf	??_vfpfcnvrt,w
  3018     0271  00F2               	movwf	fputc@c
  3019     0272  082E               	movf	??_vfpfcnvrt+1,w
  3020     0273  00F3               	movwf	fputc@c+1
  3021     0274  0829               	movf	vfpfcnvrt@fp,w
  3022     0275  00F4               	movwf	fputc@fp
  3023     0276  082A               	movf	vfpfcnvrt@fp+1,w
  3024     0277  00F5               	movwf	fputc@fp+1
  3025     0278  120A  118A  22CA  120A  118A  	fcall	_fputc
  3026     027D                     l2145:
  3027     027D  3001               	movlw	1
  3028     027E  1283               	bcf	3,5	;RP0=0, select bank0
  3029     027F  1303               	bcf	3,6	;RP1=0, select bank0
  3030     0280  07B5               	addwf	vfpfcnvrt@c,f
  3031     0281                     l2147:
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3034     0281  3020               	movlw	32
  3035     0282  0635               	xorwf	vfpfcnvrt@c,w
  3036     0283  1D03               	btfss	3,2
  3037     0284  2A86               	goto	u2041
  3038     0285  2A87               	goto	u2040
  3039     0286                     u2041:
  3040     0286  2A69               	goto	l2143
  3041     0287                     u2040:
  3042     0287  2AC9               	goto	l820
  3043     0288                     l2149:
  3044                           
  3045                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  3046     0288  082B               	movf	vfpfcnvrt@fmt,w
  3047     0289  0084               	movwf	4
  3048     028A  0800               	movf	0,w
  3049     028B  0084               	movwf	4
  3050     028C  120A  118A  274C  120A  118A  	fcall	stringdir
  3051     0291  3A25               	xorlw	37
  3052     0292  1D03               	skipz
  3053     0293  2A95               	goto	u2051
  3054     0294  2A96               	goto	u2050
  3055     0295                     u2051:
  3056     0295  2AA8               	goto	l2157
  3057     0296                     u2050:
  3058     0296                     l2151:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  3061     0296  082B               	movf	vfpfcnvrt@fmt,w
  3062     0297  0084               	movwf	4
  3063     0298  3001               	movlw	1
  3064     0299  0780               	addwf	0,f
  3065     029A                     l2153:
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  3068     029A  3025               	movlw	37
  3069     029B  00F2               	movwf	fputc@c
  3070     029C  3000               	movlw	0
  3071     029D  00F3               	movwf	fputc@c+1
  3072     029E  0829               	movf	vfpfcnvrt@fp,w
  3073     029F  00F4               	movwf	fputc@fp
  3074     02A0  082A               	movf	vfpfcnvrt@fp+1,w
  3075     02A1  00F5               	movwf	fputc@fp+1
  3076     02A2  120A  118A  22CA  120A  118A  	fcall	_fputc
  3077     02A7  2AC9               	goto	l820
  3078     02A8                     l2157:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3081     02A8  1283               	bcf	3,5	;RP0=0, select bank0
  3082     02A9  1303               	bcf	3,6	;RP1=0, select bank0
  3083     02AA  082B               	movf	vfpfcnvrt@fmt,w
  3084     02AB  0084               	movwf	4
  3085     02AC  3001               	movlw	1
  3086     02AD  1383               	bcf	3,7	;select IRP bank0
  3087     02AE  0780               	addwf	0,f
  3088     02AF  2AC9               	goto	l820
  3089     02B0                     l2161:
  3090                           
  3091                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3092     02B0  082B               	movf	vfpfcnvrt@fmt,w
  3093     02B1  0084               	movwf	4
  3094     02B2  0800               	movf	0,w
  3095     02B3  0084               	movwf	4
  3096     02B4  120A  118A  274C  120A  118A  	fcall	stringdir
  3097     02B9  00AD               	movwf	??_vfpfcnvrt
  3098     02BA  01AE               	clrf	??_vfpfcnvrt+1
  3099     02BB  082D               	movf	??_vfpfcnvrt,w
  3100     02BC  00F2               	movwf	fputc@c
  3101     02BD  082E               	movf	??_vfpfcnvrt+1,w
  3102     02BE  00F3               	movwf	fputc@c+1
  3103     02BF  0829               	movf	vfpfcnvrt@fp,w
  3104     02C0  00F4               	movwf	fputc@fp
  3105     02C1  082A               	movf	vfpfcnvrt@fp+1,w
  3106     02C2  00F5               	movwf	fputc@fp+1
  3107     02C3  120A  118A  22CA  120A  118A  	fcall	_fputc
  3108     02C8  2AA8               	goto	l2157
  3109     02C9                     l820:
  3110     02C9  0008               	return
  3111     02CA                     __end_of_vfpfcnvrt:
  3112                           
  3113                           	psect	text14
  3114     02CA                     __ptext14:	
  3115 ;; *************** function _fputc *****************
  3116 ;; Defined at:
  3117 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  c               2    2[COMMON] int 
  3120 ;;  fp              2    4[COMMON] PTR struct _IO_FILE
  3121 ;;		 -> sprintf@f(11), 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  2    2[COMMON] int 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3133 ;;      Params:         4       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0
  3135 ;;      Temps:          0       9       0       0       0
  3136 ;;      Totals:         4       9       0       0       0
  3137 ;;Total ram usage:       13 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; Hardware stack levels required when called: 2
  3140 ;; This function calls:
  3141 ;;		_putch
  3142 ;; This function is called by:
  3143 ;;		_vfpfcnvrt
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147     02CA                     _fputc:	
  3148                           ;psect for function _fputc
  3149                           
  3150     02CA                     l1555:	
  3151                           ;incstack = 0
  3152                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3153                           
  3154     02CA  0874               	movf	fputc@fp,w
  3155     02CB  0475               	iorwf	fputc@fp+1,w
  3156     02CC  1903               	btfsc	3,2
  3157     02CD  2ACF               	goto	u1141
  3158     02CE  2AD0               	goto	u1140
  3159     02CF                     u1141:
  3160     02CF  2AD6               	goto	l1559
  3161     02D0                     u1140:
  3162     02D0                     l1557:
  3163     02D0  0874               	movf	fputc@fp,w
  3164     02D1  0475               	iorwf	fputc@fp+1,w
  3165     02D2  1D03               	btfss	3,2
  3166     02D3  2AD5               	goto	u1151
  3167     02D4  2AD6               	goto	u1150
  3168     02D5                     u1151:
  3169     02D5  2ADD               	goto	l1561
  3170     02D6                     u1150:
  3171     02D6                     l1559:
  3172     02D6  0872               	movf	fputc@c,w
  3173     02D7  120A  158A  26CF  120A  118A  	fcall	_putch
  3174     02DC  2B69               	goto	l846
  3175     02DD                     l1561:
  3176     02DD  0874               	movf	fputc@fp,w
  3177     02DE  3E09               	addlw	9
  3178     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3179     02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3180     02E1  00A0               	movwf	??_fputc
  3181     02E2  0875               	movf	fputc@fp+1,w
  3182     02E3  1803               	skipnc
  3183     02E4  3E01               	addlw	1
  3184     02E5  3E00               	addlw	0
  3185     02E6  00A1               	movwf	??_fputc+1
  3186     02E7  0820               	movf	??_fputc,w
  3187     02E8  0084               	movwf	4
  3188     02E9  1783               	bsf	3,7
  3189     02EA  1C21               	btfss	??_fputc+1,0
  3190     02EB  1383               	bcf	3,7
  3191     02EC  0800               	movf	0,w
  3192     02ED  00A2               	movwf	??_fputc+2
  3193     02EE  0A84               	incf	4,f
  3194     02EF  0800               	movf	0,w
  3195     02F0  00A3               	movwf	??_fputc+3
  3196     02F1  0822               	movf	??_fputc+2,w
  3197     02F2  0423               	iorwf	??_fputc+3,w
  3198     02F3  1903               	btfsc	3,2
  3199     02F4  2AF6               	goto	u1161
  3200     02F5  2AF7               	goto	u1160
  3201     02F6                     u1161:
  3202     02F6  2B29               	goto	l1565
  3203     02F7                     u1160:
  3204     02F7                     l1563:
  3205     02F7  0874               	movf	fputc@fp,w
  3206     02F8  3E09               	addlw	9
  3207     02F9  00A0               	movwf	??_fputc
  3208     02FA  0875               	movf	fputc@fp+1,w
  3209     02FB  1803               	skipnc
  3210     02FC  3E01               	addlw	1
  3211     02FD  3E00               	addlw	0
  3212     02FE  00A1               	movwf	??_fputc+1
  3213     02FF  0820               	movf	??_fputc,w
  3214     0300  0084               	movwf	4
  3215     0301  1783               	bsf	3,7
  3216     0302  1C21               	btfss	??_fputc+1,0
  3217     0303  1383               	bcf	3,7
  3218     0304  0800               	movf	0,w
  3219     0305  00A2               	movwf	??_fputc+2
  3220     0306  0A84               	incf	4,f
  3221     0307  0800               	movf	0,w
  3222     0308  00A3               	movwf	??_fputc+3
  3223     0309  0874               	movf	fputc@fp,w
  3224     030A  3E02               	addlw	2
  3225     030B  00A4               	movwf	??_fputc+4
  3226     030C  0875               	movf	fputc@fp+1,w
  3227     030D  1803               	skipnc
  3228     030E  3E01               	addlw	1
  3229     030F  3E00               	addlw	0
  3230     0310  00A5               	movwf	??_fputc+5
  3231     0311  0824               	movf	??_fputc+4,w
  3232     0312  0084               	movwf	4
  3233     0313  1783               	bsf	3,7
  3234     0314  1C25               	btfss	??_fputc+5,0
  3235     0315  1383               	bcf	3,7
  3236     0316  0800               	movf	0,w
  3237     0317  00A6               	movwf	??_fputc+6
  3238     0318  0A84               	incf	4,f
  3239     0319  0800               	movf	0,w
  3240     031A  00A7               	movwf	??_fputc+7
  3241     031B  0827               	movf	??_fputc+7,w
  3242     031C  3A80               	xorlw	128
  3243     031D  00A8               	movwf	??_fputc+8
  3244     031E  0823               	movf	??_fputc+3,w
  3245     031F  3A80               	xorlw	128
  3246     0320  0228               	subwf	??_fputc+8,w
  3247     0321  1D03               	skipz
  3248     0322  2B25               	goto	u1175
  3249     0323  0822               	movf	??_fputc+2,w
  3250     0324  0226               	subwf	??_fputc+6,w
  3251     0325                     u1175:
  3252     0325  1803               	skipnc
  3253     0326  2B28               	goto	u1171
  3254     0327  2B29               	goto	u1170
  3255     0328                     u1171:
  3256     0328  2B69               	goto	l846
  3257     0329                     u1170:
  3258     0329                     l1565:
  3259     0329  0874               	movf	fputc@fp,w
  3260     032A  0084               	movwf	4
  3261     032B  1783               	bsf	3,7
  3262     032C  1C75               	btfss	fputc@fp+1,0
  3263     032D  1383               	bcf	3,7
  3264     032E  0800               	movf	0,w
  3265     032F  1283               	bcf	3,5	;RP0=0, select bank0
  3266     0330  1303               	bcf	3,6	;RP1=0, select bank0
  3267     0331  00A0               	movwf	??_fputc
  3268     0332  0A84               	incf	4,f
  3269     0333  0800               	movf	0,w
  3270     0334  00A1               	movwf	??_fputc+1
  3271     0335  0874               	movf	fputc@fp,w
  3272     0336  3E02               	addlw	2
  3273     0337  00A2               	movwf	??_fputc+2
  3274     0338  0875               	movf	fputc@fp+1,w
  3275     0339  1803               	skipnc
  3276     033A  3E01               	addlw	1
  3277     033B  3E00               	addlw	0
  3278     033C  00A3               	movwf	??_fputc+3
  3279     033D  0822               	movf	??_fputc+2,w
  3280     033E  0084               	movwf	4
  3281     033F  1783               	bsf	3,7
  3282     0340  1C23               	btfss	??_fputc+3,0
  3283     0341  1383               	bcf	3,7
  3284     0342  0800               	movf	0,w
  3285     0343  0720               	addwf	??_fputc,w
  3286     0344  00A5               	movwf	??_fputc+5
  3287     0345  0821               	movf	??_fputc+1,w
  3288     0346  00A4               	movwf	??_fputc+4
  3289     0347  1803               	skipnc
  3290     0348  0AA4               	incf	??_fputc+4,f
  3291     0349  1F80               	btfss	0,7
  3292     034A  2B4C               	goto	u1180
  3293     034B  03A4               	decf	??_fputc+4,f
  3294     034C                     u1180:
  3295     034C  1283               	bcf	3,5	;RP0=0, select bank0
  3296     034D  1303               	bcf	3,6	;RP1=0, select bank0
  3297     034E  0824               	movf	??_fputc+4,w
  3298     034F  00A6               	movwf	??_fputc+6
  3299     0350  0825               	movf	??_fputc+5,w
  3300     0351  0084               	movwf	4
  3301     0352  1783               	bsf	3,7
  3302     0353  1C26               	btfss	??_fputc+6,0
  3303     0354  1383               	bcf	3,7
  3304     0355  0872               	movf	fputc@c,w
  3305     0356  0080               	movwf	0
  3306     0357  0874               	movf	fputc@fp,w
  3307     0358  3E02               	addlw	2
  3308     0359  00A0               	movwf	??_fputc
  3309     035A  0875               	movf	fputc@fp+1,w
  3310     035B  1803               	skipnc
  3311     035C  3E01               	addlw	1
  3312     035D  3E00               	addlw	0
  3313     035E  00A1               	movwf	??_fputc+1
  3314     035F  0820               	movf	??_fputc,w
  3315     0360  0084               	movwf	4
  3316     0361  1783               	bsf	3,7
  3317     0362  1C21               	btfss	??_fputc+1,0
  3318     0363  1383               	bcf	3,7
  3319     0364  3001               	movlw	1
  3320     0365  0780               	addwf	0,f
  3321     0366  0A84               	incf	4,f
  3322     0367  1803               	skipnc
  3323     0368  0A80               	incf	0,f
  3324     0369                     l846:
  3325     0369  0008               	return
  3326     036A                     __end_of_fputc:
  3327                           
  3328                           	psect	text15
  3329     0ECF                     __ptext15:	
  3330 ;; *************** function _putch *****************
  3331 ;; Defined at:
  3332 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  c               1    wreg     unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  c               1    0[COMMON] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346 ;;      Params:         0       0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0
  3349 ;;      Totals:         0       0       0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; Hardware stack levels required when called: 1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_fputc
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360     0ECF                     _putch:	
  3361                           ;psect for function _putch
  3362                           
  3363     0ECF                     l857:	
  3364                           ;incstack = 0
  3365                           ; Regs used in _putch: [wreg]
  3366                           
  3367     0ECF  0008               	return
  3368     0ED0                     __end_of_putch:
  3369                           
  3370                           	psect	text16
  3371     0F05                     __ptext16:	
  3372 ;; *************** function _abs *****************
  3373 ;; Defined at:
  3374 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  a               2    8[COMMON] int 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  2    8[COMMON] int 
  3381 ;; Registers used:
  3382 ;;		wreg, status,2, status,0
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3388 ;;      Params:         2       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0
  3390 ;;      Temps:          0       2       0       0       0
  3391 ;;      Totals:         2       2       0       0       0
  3392 ;;Total ram usage:        4 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; Hardware stack levels required when called: 1
  3395 ;; This function calls:
  3396 ;;		Nothing
  3397 ;; This function is called by:
  3398 ;;		_vfpfcnvrt
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402     0F05                     _abs:	
  3403                           ;psect for function _abs
  3404                           
  3405     0F05                     l2089:	
  3406                           ;incstack = 0
  3407                           ; Regs used in _abs: [wreg+status,2+status,0]
  3408                           
  3409     0F05  1BF9               	btfsc	abs@a+1,7
  3410     0F06  2F08               	goto	u1901
  3411     0F07  2F09               	goto	u1900
  3412     0F08                     u1901:
  3413     0F08  2F0A               	goto	l2093
  3414     0F09                     u1900:
  3415     0F09                     l2091:
  3416     0F09  2F17               	goto	l834
  3417     0F0A                     l2093:
  3418     0F0A  0978               	comf	abs@a,w
  3419     0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  3420     0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  3421     0F0D  00A0               	movwf	??_abs
  3422     0F0E  0979               	comf	abs@a+1,w
  3423     0F0F  00A1               	movwf	??_abs+1
  3424     0F10  0AA0               	incf	??_abs,f
  3425     0F11  1903               	skipnz
  3426     0F12  0AA1               	incf	??_abs+1,f
  3427     0F13  0820               	movf	??_abs,w
  3428     0F14  00F8               	movwf	?_abs
  3429     0F15  0821               	movf	??_abs+1,w
  3430     0F16  00F9               	movwf	?_abs+1
  3431     0F17                     l834:
  3432     0F17  0008               	return
  3433     0F18                     __end_of_abs:
  3434                           
  3435                           	psect	text17
  3436     0588                     __ptext17:	
  3437 ;; *************** function ___awmod *****************
  3438 ;; Defined at:
  3439 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  divisor         2    2[COMMON] int 
  3442 ;;  dividend        2    4[COMMON] int 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  sign            1    7[COMMON] unsigned char 
  3445 ;;  counter         1    6[COMMON] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  2    2[COMMON] int 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3455 ;;      Params:         4       0       0       0       0
  3456 ;;      Locals:         2       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0
  3458 ;;      Totals:         6       0       0       0       0
  3459 ;;Total ram usage:        6 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 1
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_vfpfcnvrt
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469     0588                     ___awmod:	
  3470                           ;psect for function ___awmod
  3471                           
  3472     0588                     l1517:	
  3473                           ;incstack = 0
  3474                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3475                           
  3476     0588  01F7               	clrf	___awmod@sign
  3477     0589                     l1519:
  3478     0589  1FF5               	btfss	___awmod@dividend+1,7
  3479     058A  2D8C               	goto	u1051
  3480     058B  2D8D               	goto	u1050
  3481     058C                     u1051:
  3482     058C  2D94               	goto	l1525
  3483     058D                     u1050:
  3484     058D                     l1521:
  3485     058D  09F4               	comf	___awmod@dividend,f
  3486     058E  09F5               	comf	___awmod@dividend+1,f
  3487     058F  0AF4               	incf	___awmod@dividend,f
  3488     0590  1903               	skipnz
  3489     0591  0AF5               	incf	___awmod@dividend+1,f
  3490     0592                     l1523:
  3491     0592  3001               	movlw	1
  3492     0593  00F7               	movwf	___awmod@sign
  3493     0594                     l1525:
  3494     0594  1FF3               	btfss	___awmod@divisor+1,7
  3495     0595  2D97               	goto	u1061
  3496     0596  2D98               	goto	u1060
  3497     0597                     u1061:
  3498     0597  2D9D               	goto	l1529
  3499     0598                     u1060:
  3500     0598                     l1527:
  3501     0598  09F2               	comf	___awmod@divisor,f
  3502     0599  09F3               	comf	___awmod@divisor+1,f
  3503     059A  0AF2               	incf	___awmod@divisor,f
  3504     059B  1903               	skipnz
  3505     059C  0AF3               	incf	___awmod@divisor+1,f
  3506     059D                     l1529:
  3507     059D  0872               	movf	___awmod@divisor,w
  3508     059E  0473               	iorwf	___awmod@divisor+1,w
  3509     059F  1903               	btfsc	3,2
  3510     05A0  2DA2               	goto	u1071
  3511     05A1  2DA3               	goto	u1070
  3512     05A2                     u1071:
  3513     05A2  2DD0               	goto	l1547
  3514     05A3                     u1070:
  3515     05A3                     l1531:
  3516     05A3  3001               	movlw	1
  3517     05A4  00F6               	movwf	___awmod@counter
  3518     05A5  2DAF               	goto	l1537
  3519     05A6                     l1533:
  3520     05A6  3001               	movlw	1
  3521     05A7                     u1085:
  3522     05A7  1003               	clrc
  3523     05A8  0DF2               	rlf	___awmod@divisor,f
  3524     05A9  0DF3               	rlf	___awmod@divisor+1,f
  3525     05AA  3EFF               	addlw	-1
  3526     05AB  1D03               	skipz
  3527     05AC  2DA7               	goto	u1085
  3528     05AD                     l1535:
  3529     05AD  3001               	movlw	1
  3530     05AE  07F6               	addwf	___awmod@counter,f
  3531     05AF                     l1537:
  3532     05AF  1FF3               	btfss	___awmod@divisor+1,7
  3533     05B0  2DB2               	goto	u1091
  3534     05B1  2DB3               	goto	u1090
  3535     05B2                     u1091:
  3536     05B2  2DA6               	goto	l1533
  3537     05B3                     u1090:
  3538     05B3                     l1539:
  3539     05B3  0873               	movf	___awmod@divisor+1,w
  3540     05B4  0275               	subwf	___awmod@dividend+1,w
  3541     05B5  1D03               	skipz
  3542     05B6  2DB9               	goto	u1105
  3543     05B7  0872               	movf	___awmod@divisor,w
  3544     05B8  0274               	subwf	___awmod@dividend,w
  3545     05B9                     u1105:
  3546     05B9  1C03               	skipc
  3547     05BA  2DBC               	goto	u1101
  3548     05BB  2DBD               	goto	u1100
  3549     05BC                     u1101:
  3550     05BC  2DC3               	goto	l1543
  3551     05BD                     u1100:
  3552     05BD                     l1541:
  3553     05BD  0872               	movf	___awmod@divisor,w
  3554     05BE  02F4               	subwf	___awmod@dividend,f
  3555     05BF  0873               	movf	___awmod@divisor+1,w
  3556     05C0  1C03               	skipc
  3557     05C1  03F5               	decf	___awmod@dividend+1,f
  3558     05C2  02F5               	subwf	___awmod@dividend+1,f
  3559     05C3                     l1543:
  3560     05C3  3001               	movlw	1
  3561     05C4                     u1115:
  3562     05C4  1003               	clrc
  3563     05C5  0CF3               	rrf	___awmod@divisor+1,f
  3564     05C6  0CF2               	rrf	___awmod@divisor,f
  3565     05C7  3EFF               	addlw	-1
  3566     05C8  1D03               	skipz
  3567     05C9  2DC4               	goto	u1115
  3568     05CA                     l1545:
  3569     05CA  3001               	movlw	1
  3570     05CB  02F6               	subwf	___awmod@counter,f
  3571     05CC  1D03               	btfss	3,2
  3572     05CD  2DCF               	goto	u1121
  3573     05CE  2DD0               	goto	u1120
  3574     05CF                     u1121:
  3575     05CF  2DB3               	goto	l1539
  3576     05D0                     u1120:
  3577     05D0                     l1547:
  3578     05D0  0877               	movf	___awmod@sign,w
  3579     05D1  1903               	btfsc	3,2
  3580     05D2  2DD4               	goto	u1131
  3581     05D3  2DD5               	goto	u1130
  3582     05D4                     u1131:
  3583     05D4  2DDA               	goto	l1551
  3584     05D5                     u1130:
  3585     05D5                     l1549:
  3586     05D5  09F4               	comf	___awmod@dividend,f
  3587     05D6  09F5               	comf	___awmod@dividend+1,f
  3588     05D7  0AF4               	incf	___awmod@dividend,f
  3589     05D8  1903               	skipnz
  3590     05D9  0AF5               	incf	___awmod@dividend+1,f
  3591     05DA                     l1551:
  3592     05DA  0875               	movf	___awmod@dividend+1,w
  3593     05DB  00F3               	movwf	?___awmod+1
  3594     05DC  0874               	movf	___awmod@dividend,w
  3595     05DD  00F2               	movwf	?___awmod
  3596     05DE                     l485:
  3597     05DE  0008               	return
  3598     05DF                     __end_of___awmod:
  3599                           
  3600                           	psect	text18
  3601     046F                     __ptext18:	
  3602 ;; *************** function ___awdiv *****************
  3603 ;; Defined at:
  3604 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  divisor         2    2[COMMON] int 
  3607 ;;  dividend        2    4[COMMON] int 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  quotient        2    8[COMMON] int 
  3610 ;;  sign            1    7[COMMON] unsigned char 
  3611 ;;  counter         1    6[COMMON] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  2    2[COMMON] int 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3621 ;;      Params:         4       0       0       0       0
  3622 ;;      Locals:         4       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0
  3624 ;;      Totals:         8       0       0       0       0
  3625 ;;Total ram usage:        8 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 1
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_vfpfcnvrt
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635     046F                     ___awdiv:	
  3636                           ;psect for function ___awdiv
  3637                           
  3638     046F                     l1473:	
  3639                           ;incstack = 0
  3640                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3641                           
  3642     046F  01F7               	clrf	___awdiv@sign
  3643     0470                     l1475:
  3644     0470  1FF3               	btfss	___awdiv@divisor+1,7
  3645     0471  2C73               	goto	u951
  3646     0472  2C74               	goto	u950
  3647     0473                     u951:
  3648     0473  2C7B               	goto	l1481
  3649     0474                     u950:
  3650     0474                     l1477:
  3651     0474  09F2               	comf	___awdiv@divisor,f
  3652     0475  09F3               	comf	___awdiv@divisor+1,f
  3653     0476  0AF2               	incf	___awdiv@divisor,f
  3654     0477  1903               	skipnz
  3655     0478  0AF3               	incf	___awdiv@divisor+1,f
  3656     0479                     l1479:
  3657     0479  3001               	movlw	1
  3658     047A  00F7               	movwf	___awdiv@sign
  3659     047B                     l1481:
  3660     047B  1FF5               	btfss	___awdiv@dividend+1,7
  3661     047C  2C7E               	goto	u961
  3662     047D  2C7F               	goto	u960
  3663     047E                     u961:
  3664     047E  2C86               	goto	l1487
  3665     047F                     u960:
  3666     047F                     l1483:
  3667     047F  09F4               	comf	___awdiv@dividend,f
  3668     0480  09F5               	comf	___awdiv@dividend+1,f
  3669     0481  0AF4               	incf	___awdiv@dividend,f
  3670     0482  1903               	skipnz
  3671     0483  0AF5               	incf	___awdiv@dividend+1,f
  3672     0484                     l1485:
  3673     0484  3001               	movlw	1
  3674     0485  06F7               	xorwf	___awdiv@sign,f
  3675     0486                     l1487:
  3676     0486  01F8               	clrf	___awdiv@quotient
  3677     0487  01F9               	clrf	___awdiv@quotient+1
  3678     0488                     l1489:
  3679     0488  0872               	movf	___awdiv@divisor,w
  3680     0489  0473               	iorwf	___awdiv@divisor+1,w
  3681     048A  1903               	btfsc	3,2
  3682     048B  2C8D               	goto	u971
  3683     048C  2C8E               	goto	u970
  3684     048D                     u971:
  3685     048D  2CC3               	goto	l1509
  3686     048E                     u970:
  3687     048E                     l1491:
  3688     048E  3001               	movlw	1
  3689     048F  00F6               	movwf	___awdiv@counter
  3690     0490  2C9A               	goto	l1497
  3691     0491                     l1493:
  3692     0491  3001               	movlw	1
  3693     0492                     u985:
  3694     0492  1003               	clrc
  3695     0493  0DF2               	rlf	___awdiv@divisor,f
  3696     0494  0DF3               	rlf	___awdiv@divisor+1,f
  3697     0495  3EFF               	addlw	-1
  3698     0496  1D03               	skipz
  3699     0497  2C92               	goto	u985
  3700     0498                     l1495:
  3701     0498  3001               	movlw	1
  3702     0499  07F6               	addwf	___awdiv@counter,f
  3703     049A                     l1497:
  3704     049A  1FF3               	btfss	___awdiv@divisor+1,7
  3705     049B  2C9D               	goto	u991
  3706     049C  2C9E               	goto	u990
  3707     049D                     u991:
  3708     049D  2C91               	goto	l1493
  3709     049E                     u990:
  3710     049E                     l1499:
  3711     049E  3001               	movlw	1
  3712     049F                     u1005:
  3713     049F  1003               	clrc
  3714     04A0  0DF8               	rlf	___awdiv@quotient,f
  3715     04A1  0DF9               	rlf	___awdiv@quotient+1,f
  3716     04A2  3EFF               	addlw	-1
  3717     04A3  1D03               	skipz
  3718     04A4  2C9F               	goto	u1005
  3719     04A5  0873               	movf	___awdiv@divisor+1,w
  3720     04A6  0275               	subwf	___awdiv@dividend+1,w
  3721     04A7  1D03               	skipz
  3722     04A8  2CAB               	goto	u1015
  3723     04A9  0872               	movf	___awdiv@divisor,w
  3724     04AA  0274               	subwf	___awdiv@dividend,w
  3725     04AB                     u1015:
  3726     04AB  1C03               	skipc
  3727     04AC  2CAE               	goto	u1011
  3728     04AD  2CAF               	goto	u1010
  3729     04AE                     u1011:
  3730     04AE  2CB6               	goto	l1505
  3731     04AF                     u1010:
  3732     04AF                     l1501:
  3733     04AF  0872               	movf	___awdiv@divisor,w
  3734     04B0  02F4               	subwf	___awdiv@dividend,f
  3735     04B1  0873               	movf	___awdiv@divisor+1,w
  3736     04B2  1C03               	skipc
  3737     04B3  03F5               	decf	___awdiv@dividend+1,f
  3738     04B4  02F5               	subwf	___awdiv@dividend+1,f
  3739     04B5                     l1503:
  3740     04B5  1478               	bsf	___awdiv@quotient,0
  3741     04B6                     l1505:
  3742     04B6  3001               	movlw	1
  3743     04B7                     u1025:
  3744     04B7  1003               	clrc
  3745     04B8  0CF3               	rrf	___awdiv@divisor+1,f
  3746     04B9  0CF2               	rrf	___awdiv@divisor,f
  3747     04BA  3EFF               	addlw	-1
  3748     04BB  1D03               	skipz
  3749     04BC  2CB7               	goto	u1025
  3750     04BD                     l1507:
  3751     04BD  3001               	movlw	1
  3752     04BE  02F6               	subwf	___awdiv@counter,f
  3753     04BF  1D03               	btfss	3,2
  3754     04C0  2CC2               	goto	u1031
  3755     04C1  2CC3               	goto	u1030
  3756     04C2                     u1031:
  3757     04C2  2C9E               	goto	l1499
  3758     04C3                     u1030:
  3759     04C3                     l1509:
  3760     04C3  0877               	movf	___awdiv@sign,w
  3761     04C4  1903               	btfsc	3,2
  3762     04C5  2CC7               	goto	u1041
  3763     04C6  2CC8               	goto	u1040
  3764     04C7                     u1041:
  3765     04C7  2CCD               	goto	l1513
  3766     04C8                     u1040:
  3767     04C8                     l1511:
  3768     04C8  09F8               	comf	___awdiv@quotient,f
  3769     04C9  09F9               	comf	___awdiv@quotient+1,f
  3770     04CA  0AF8               	incf	___awdiv@quotient,f
  3771     04CB  1903               	skipnz
  3772     04CC  0AF9               	incf	___awdiv@quotient+1,f
  3773     04CD                     l1513:
  3774     04CD  0879               	movf	___awdiv@quotient+1,w
  3775     04CE  00F3               	movwf	?___awdiv+1
  3776     04CF  0878               	movf	___awdiv@quotient,w
  3777     04D0  00F2               	movwf	?___awdiv
  3778     04D1                     l472:
  3779     04D1  0008               	return
  3780     04D2                     __end_of___awdiv:
  3781                           
  3782                           	psect	text19
  3783     06C2                     __ptext19:	
  3784 ;; *************** function _Lcd_Write_String *****************
  3785 ;; Defined at:
  3786 ;;		line 111 in file "./lcd.h"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  a               2    7[COMMON] PTR unsigned char 
  3789 ;;		 -> infoTempBuffer(8), STR_3(12), tempBuffer(8), umidadeBuffer(8), 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  i               2    3[BANK0 ] int 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3801 ;;      Params:         2       0       0       0       0
  3802 ;;      Locals:         0       2       0       0       0
  3803 ;;      Temps:          0       3       0       0       0
  3804 ;;      Totals:         2       5       0       0       0
  3805 ;;Total ram usage:        7 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; Hardware stack levels required when called: 3
  3808 ;; This function calls:
  3809 ;;		_Lcd_Write_Char
  3810 ;; This function is called by:
  3811 ;;		_display_dht11_data
  3812 ;;		_definir_temperatura
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816     06C2                     _Lcd_Write_String:	
  3817                           ;psect for function _Lcd_Write_String
  3818                           
  3819     06C2                     l2237:	
  3820                           ;incstack = 0
  3821                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3822                           
  3823                           
  3824                           ;./lcd.h: 111: void Lcd_Write_String(char *a);./lcd.h: 112: {;./lcd.h: 113:  int i;;./lc
      +                          d.h: 114:  for(i=0;a[i]!='\0';i++)
  3825     06C2  1283               	bcf	3,5	;RP0=0, select bank0
  3826     06C3  1303               	bcf	3,6	;RP1=0, select bank0
  3827     06C4  01A3               	clrf	Lcd_Write_String@i
  3828     06C5  01A4               	clrf	Lcd_Write_String@i+1
  3829     06C6  2EEB               	goto	l2243
  3830     06C7                     l2239:
  3831                           
  3832                           ;./lcd.h: 115:     Lcd_Write_Char(a[i]);
  3833     06C7  0823               	movf	Lcd_Write_String@i,w
  3834     06C8  0777               	addwf	Lcd_Write_String@a,w
  3835     06C9  00A1               	movwf	??_Lcd_Write_String+1
  3836     06CA  0878               	movf	Lcd_Write_String@a+1,w
  3837     06CB  00A0               	movwf	??_Lcd_Write_String
  3838     06CC  1803               	skipnc
  3839     06CD  0AA0               	incf	??_Lcd_Write_String,f
  3840     06CE  1FA3               	btfss	Lcd_Write_String@i,7
  3841     06CF  2ED1               	goto	u2120
  3842     06D0  03A0               	decf	??_Lcd_Write_String,f
  3843     06D1                     u2120:
  3844     06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3845     06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3846     06D3  0820               	movf	??_Lcd_Write_String,w
  3847     06D4  00A2               	movwf	??_Lcd_Write_String+2
  3848     06D5  0822               	movf	??_Lcd_Write_String+2,w
  3849     06D6  00FF               	movwf	btemp+1
  3850     06D7  0821               	movf	??_Lcd_Write_String+1,w
  3851     06D8  0084               	movwf	4
  3852     06D9  120A  118A  2742  120A  118A  	fcall	stringtab
  3853     06DE  120A  118A  277B  120A  118A  	fcall	_Lcd_Write_Char
  3854     06E3                     l2241:
  3855     06E3  3001               	movlw	1
  3856     06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3857     06E5  1303               	bcf	3,6	;RP1=0, select bank0
  3858     06E6  07A3               	addwf	Lcd_Write_String@i,f
  3859     06E7  1803               	skipnc
  3860     06E8  0AA4               	incf	Lcd_Write_String@i+1,f
  3861     06E9  3000               	movlw	0
  3862     06EA  07A4               	addwf	Lcd_Write_String@i+1,f
  3863     06EB                     l2243:
  3864     06EB  0823               	movf	Lcd_Write_String@i,w
  3865     06EC  0777               	addwf	Lcd_Write_String@a,w
  3866     06ED  00A1               	movwf	??_Lcd_Write_String+1
  3867     06EE  0878               	movf	Lcd_Write_String@a+1,w
  3868     06EF  00A0               	movwf	??_Lcd_Write_String
  3869     06F0  1803               	skipnc
  3870     06F1  0AA0               	incf	??_Lcd_Write_String,f
  3871     06F2  1FA3               	btfss	Lcd_Write_String@i,7
  3872     06F3  2EF5               	goto	u2130
  3873     06F4  03A0               	decf	??_Lcd_Write_String,f
  3874     06F5                     u2130:
  3875     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  3876     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  3877     06F7  0820               	movf	??_Lcd_Write_String,w
  3878     06F8  00A2               	movwf	??_Lcd_Write_String+2
  3879     06F9  0822               	movf	??_Lcd_Write_String+2,w
  3880     06FA  00FF               	movwf	btemp+1
  3881     06FB  0821               	movf	??_Lcd_Write_String+1,w
  3882     06FC  0084               	movwf	4
  3883     06FD  120A  118A  2742  120A  118A  	fcall	stringtab
  3884     0702  3A00               	xorlw	0
  3885     0703  1D03               	skipz
  3886     0704  2F06               	goto	u2141
  3887     0705  2F07               	goto	u2140
  3888     0706                     u2141:
  3889     0706  2EC7               	goto	l2239
  3890     0707                     u2140:
  3891     0707                     l97:
  3892     0707  0008               	return
  3893     0708                     __end_of_Lcd_Write_String:
  3894                           
  3895                           	psect	text20
  3896     077B                     __ptext20:	
  3897 ;; *************** function _Lcd_Write_Char *****************
  3898 ;; Defined at:
  3899 ;;		line 95 in file "./lcd.h"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  a               1    wreg     unsigned char 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  a               1    6[COMMON] unsigned char 
  3904 ;;  y               1    5[COMMON] unsigned char 
  3905 ;;  temp            1    4[COMMON] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0, pclath, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         0       0       0       0       0
  3916 ;;      Locals:         3       0       0       0       0
  3917 ;;      Temps:          1       0       0       0       0
  3918 ;;      Totals:         4       0       0       0       0
  3919 ;;Total ram usage:        4 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 2
  3922 ;; This function calls:
  3923 ;;		_Lcd_Port
  3924 ;; This function is called by:
  3925 ;;		_Lcd_Write_String
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929     077B                     _Lcd_Write_Char:	
  3930                           ;psect for function _Lcd_Write_Char
  3931                           
  3932                           
  3933                           ;incstack = 0
  3934                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3935                           ;Lcd_Write_Char@a stored from wreg
  3936     077B  00F6               	movwf	Lcd_Write_Char@a
  3937     077C                     l2177:
  3938                           
  3939                           ;./lcd.h: 95: void Lcd_Write_Char(char a);./lcd.h: 96: {;./lcd.h: 97:    char temp,y;;./
      +                          lcd.h: 98:    temp = a&0x0F;
  3940     077C  0876               	movf	Lcd_Write_Char@a,w
  3941     077D  00F4               	movwf	Lcd_Write_Char@temp
  3942     077E                     l2179:
  3943     077E  300F               	movlw	15
  3944     077F  05F4               	andwf	Lcd_Write_Char@temp,f
  3945     0780                     l2181:
  3946                           
  3947                           ;./lcd.h: 99:    y = a&0xF0;
  3948     0780  0876               	movf	Lcd_Write_Char@a,w
  3949     0781  00F5               	movwf	Lcd_Write_Char@y
  3950     0782  30F0               	movlw	240
  3951     0783  05F5               	andwf	Lcd_Write_Char@y,f
  3952     0784                     l2183:
  3953                           
  3954                           ;./lcd.h: 100:    RD1 = 1;
  3955     0784  1283               	bcf	3,5	;RP0=0, select bank0
  3956     0785  1303               	bcf	3,6	;RP1=0, select bank0
  3957     0786  1488               	bsf	8,1	;volatile
  3958     0787                     l2185:
  3959                           
  3960                           ;./lcd.h: 101:    Lcd_Port(y>>4);
  3961     0787  0875               	movf	Lcd_Write_Char@y,w
  3962     0788  00F3               	movwf	??_Lcd_Write_Char
  3963     0789  3004               	movlw	4
  3964     078A                     u2065:
  3965     078A  1003               	clrc
  3966     078B  0CF3               	rrf	??_Lcd_Write_Char,f
  3967     078C  3EFF               	addlw	-1
  3968     078D  1D03               	skipz
  3969     078E  2F8A               	goto	u2065
  3970     078F  0873               	movf	??_Lcd_Write_Char,w
  3971     0790  120A  158A  2772  120A  118A  	fcall	_Lcd_Port
  3972     0795                     l2187:
  3973                           
  3974                           ;./lcd.h: 102:    RD0 = 1;
  3975     0795  1283               	bcf	3,5	;RP0=0, select bank0
  3976     0796  1303               	bcf	3,6	;RP1=0, select bank0
  3977     0797  1408               	bsf	8,0	;volatile
  3978     0798                     l2189:
  3979                           
  3980                           ;./lcd.h: 103:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3981     0798  301A               	movlw	26
  3982     0799  00F3               	movwf	??_Lcd_Write_Char
  3983     079A                     u2537:
  3984     079A  0BF3               	decfsz	??_Lcd_Write_Char,f
  3985     079B  2F9A               	goto	u2537
  3986     079C  0000               	nop
  3987     079D                     l2191:
  3988                           
  3989                           ;./lcd.h: 104:    RD0 = 0;
  3990     079D  1283               	bcf	3,5	;RP0=0, select bank0
  3991     079E  1303               	bcf	3,6	;RP1=0, select bank0
  3992     079F  1008               	bcf	8,0	;volatile
  3993     07A0                     l2193:
  3994                           
  3995                           ;./lcd.h: 105:    Lcd_Port(temp);
  3996     07A0  0874               	movf	Lcd_Write_Char@temp,w
  3997     07A1  120A  158A  2772  120A  118A  	fcall	_Lcd_Port
  3998     07A6                     l2195:
  3999                           
  4000                           ;./lcd.h: 106:    RD0 = 1;
  4001     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  4002     07A7  1303               	bcf	3,6	;RP1=0, select bank0
  4003     07A8  1408               	bsf	8,0	;volatile
  4004     07A9                     l2197:
  4005                           
  4006                           ;./lcd.h: 107:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  4007     07A9  301A               	movlw	26
  4008     07AA  00F3               	movwf	??_Lcd_Write_Char
  4009     07AB                     u2547:
  4010     07AB  0BF3               	decfsz	??_Lcd_Write_Char,f
  4011     07AC  2FAB               	goto	u2547
  4012     07AD  0000               	nop
  4013     07AE                     l2199:
  4014                           
  4015                           ;./lcd.h: 108:    RD0 = 0;
  4016     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  4017     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  4018     07B0  1008               	bcf	8,0	;volatile
  4019     07B1                     l91:
  4020     07B1  0008               	return
  4021     07B2                     __end_of_Lcd_Write_Char:
  4022                           
  4023                           	psect	text21
  4024     05DF                     __ptext21:	
  4025 ;; *************** function _Lcd_Set_Cursor *****************
  4026 ;; Defined at:
  4027 ;;		line 55 in file "./lcd.h"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  a               1    wreg     unsigned char 
  4030 ;;  b               1    6[COMMON] unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  a               1    0[BANK0 ] unsigned char 
  4033 ;;  temp            1    3[BANK0 ] unsigned char 
  4034 ;;  y               1    2[BANK0 ] unsigned char 
  4035 ;;  z               1    1[BANK0 ] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, pclath, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4045 ;;      Params:         1       0       0       0       0
  4046 ;;      Locals:         0       4       0       0       0
  4047 ;;      Temps:          1       0       0       0       0
  4048 ;;      Totals:         2       4       0       0       0
  4049 ;;Total ram usage:        6 bytes
  4050 ;; Hardware stack levels used: 1
  4051 ;; Hardware stack levels required when called: 3
  4052 ;; This function calls:
  4053 ;;		_Lcd_Cmd
  4054 ;; This function is called by:
  4055 ;;		_read_dht11_data
  4056 ;;		_display_dht11_data
  4057 ;;		_definir_temperatura
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061     05DF                     _Lcd_Set_Cursor:	
  4062                           ;psect for function _Lcd_Set_Cursor
  4063                           
  4064                           
  4065                           ;incstack = 0
  4066                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4067                           ;Lcd_Set_Cursor@a stored from wreg
  4068     05DF  1283               	bcf	3,5	;RP0=0, select bank0
  4069     05E0  1303               	bcf	3,6	;RP1=0, select bank0
  4070     05E1  00A0               	movwf	Lcd_Set_Cursor@a
  4071     05E2                     l2213:
  4072                           
  4073                           ;./lcd.h: 55: void Lcd_Set_Cursor(char a, char b);./lcd.h: 56: {;./lcd.h: 57:  char temp
      +                          ,z,y;;./lcd.h: 58:  if(a == 1)
  4074     05E2  0320               	decf	Lcd_Set_Cursor@a,w
  4075     05E3  1D03               	btfss	3,2
  4076     05E4  2DE6               	goto	u2081
  4077     05E5  2DE7               	goto	u2080
  4078     05E6                     u2081:
  4079     05E6  2E07               	goto	l2225
  4080     05E7                     u2080:
  4081     05E7                     l2215:
  4082                           
  4083                           ;./lcd.h: 59:  {;./lcd.h: 60:    temp = 0x80 + b - 1;
  4084     05E7  0876               	movf	Lcd_Set_Cursor@b,w
  4085     05E8  3E7F               	addlw	127
  4086     05E9  00A3               	movwf	Lcd_Set_Cursor@temp
  4087                           
  4088                           ;./lcd.h: 61:   z = temp>>4;
  4089     05EA  0823               	movf	Lcd_Set_Cursor@temp,w
  4090     05EB  00F7               	movwf	??_Lcd_Set_Cursor
  4091     05EC  3004               	movlw	4
  4092     05ED                     u2095:
  4093     05ED  1003               	clrc
  4094     05EE  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4095     05EF  3EFF               	addlw	-1
  4096     05F0  1D03               	skipz
  4097     05F1  2DED               	goto	u2095
  4098     05F2  0877               	movf	??_Lcd_Set_Cursor,w
  4099     05F3  00A1               	movwf	Lcd_Set_Cursor@z
  4100     05F4                     l2217:
  4101                           
  4102                           ;./lcd.h: 62:   y = temp & 0x0F;
  4103     05F4  0823               	movf	Lcd_Set_Cursor@temp,w
  4104     05F5  00A2               	movwf	Lcd_Set_Cursor@y
  4105     05F6                     l2219:
  4106     05F6  300F               	movlw	15
  4107     05F7  05A2               	andwf	Lcd_Set_Cursor@y,f
  4108     05F8                     l2221:
  4109                           
  4110                           ;./lcd.h: 63:   Lcd_Cmd(z);
  4111     05F8  0821               	movf	Lcd_Set_Cursor@z,w
  4112     05F9  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4113     05FE                     l2223:
  4114                           
  4115                           ;./lcd.h: 64:   Lcd_Cmd(y);
  4116     05FE  1283               	bcf	3,5	;RP0=0, select bank0
  4117     05FF  1303               	bcf	3,6	;RP1=0, select bank0
  4118     0600  0822               	movf	Lcd_Set_Cursor@y,w
  4119     0601  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4120                           
  4121                           ;./lcd.h: 65:  }
  4122     0606  2E2C               	goto	l85
  4123     0607                     l2225:
  4124     0607  3002               	movlw	2
  4125     0608  0620               	xorwf	Lcd_Set_Cursor@a,w
  4126     0609  1D03               	btfss	3,2
  4127     060A  2E0C               	goto	u2101
  4128     060B  2E0D               	goto	u2100
  4129     060C                     u2101:
  4130     060C  2E2C               	goto	l85
  4131     060D                     u2100:
  4132     060D                     l2227:
  4133                           
  4134                           ;./lcd.h: 67:  {;./lcd.h: 68:   temp = 0xC0 + b - 1;
  4135     060D  0876               	movf	Lcd_Set_Cursor@b,w
  4136     060E  3EBF               	addlw	191
  4137     060F  00A3               	movwf	Lcd_Set_Cursor@temp
  4138                           
  4139                           ;./lcd.h: 69:   z = temp>>4;
  4140     0610  0823               	movf	Lcd_Set_Cursor@temp,w
  4141     0611  00F7               	movwf	??_Lcd_Set_Cursor
  4142     0612  3004               	movlw	4
  4143     0613                     u2115:
  4144     0613  1003               	clrc
  4145     0614  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4146     0615  3EFF               	addlw	-1
  4147     0616  1D03               	skipz
  4148     0617  2E13               	goto	u2115
  4149     0618  0877               	movf	??_Lcd_Set_Cursor,w
  4150     0619  00A1               	movwf	Lcd_Set_Cursor@z
  4151     061A                     l2229:
  4152                           
  4153                           ;./lcd.h: 70:   y = temp & 0x0F;
  4154     061A  0823               	movf	Lcd_Set_Cursor@temp,w
  4155     061B  00A2               	movwf	Lcd_Set_Cursor@y
  4156     061C                     l2231:
  4157     061C  300F               	movlw	15
  4158     061D  05A2               	andwf	Lcd_Set_Cursor@y,f
  4159     061E                     l2233:
  4160                           
  4161                           ;./lcd.h: 71:   Lcd_Cmd(z);
  4162     061E  0821               	movf	Lcd_Set_Cursor@z,w
  4163     061F  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4164     0624                     l2235:
  4165                           
  4166                           ;./lcd.h: 72:   Lcd_Cmd(y);
  4167     0624  1283               	bcf	3,5	;RP0=0, select bank0
  4168     0625  1303               	bcf	3,6	;RP1=0, select bank0
  4169     0626  0822               	movf	Lcd_Set_Cursor@y,w
  4170     0627  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4171     062C                     l85:
  4172     062C  0008               	return
  4173     062D                     __end_of_Lcd_Set_Cursor:
  4174                           
  4175                           	psect	text22
  4176     0EF8                     __ptext22:	
  4177 ;; *************** function _Lcd_Clear *****************
  4178 ;; Defined at:
  4179 ;;		line 49 in file "./lcd.h"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;		None
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      void 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0, pclath, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4193 ;;      Params:         0       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0
  4196 ;;      Totals:         0       0       0       0       0
  4197 ;;Total ram usage:        0 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; Hardware stack levels required when called: 3
  4200 ;; This function calls:
  4201 ;;		_Lcd_Cmd
  4202 ;; This function is called by:
  4203 ;;		_display_dht11_data
  4204 ;;		_definir_temperatura
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208     0EF8                     _Lcd_Clear:	
  4209                           ;psect for function _Lcd_Clear
  4210                           
  4211     0EF8                     l2211:	
  4212                           ;incstack = 0
  4213                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4214                           
  4215                           
  4216                           ;./lcd.h: 51:  Lcd_Cmd(0);
  4217     0EF8  3000               	movlw	0
  4218     0EF9  120A  158A  2718  120A  158A  	fcall	_Lcd_Cmd
  4219                           
  4220                           ;./lcd.h: 52:  Lcd_Cmd(1);
  4221     0EFE  3001               	movlw	1
  4222     0EFF  120A  158A  2718  120A  158A  	fcall	_Lcd_Cmd
  4223     0F04                     l79:
  4224     0F04  0008               	return
  4225     0F05                     __end_of_Lcd_Clear:
  4226                           
  4227                           	psect	text23
  4228     0ED8                     __ptext23:	
  4229 ;; *************** function _decrementarTemperatura *****************
  4230 ;; Defined at:
  4231 ;;		line 98 in file "main.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4245 ;;      Params:         0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0
  4248 ;;      Totals:         0       0       0       0       0
  4249 ;;Total ram usage:        0 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; Hardware stack levels required when called: 1
  4252 ;; This function calls:
  4253 ;;		Nothing
  4254 ;; This function is called by:
  4255 ;;		_main
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259     0ED8                     _decrementarTemperatura:	
  4260                           ;psect for function _decrementarTemperatura
  4261                           
  4262     0ED8                     l1903:	
  4263                           ;incstack = 0
  4264                           ; Regs used in _decrementarTemperatura: [wreg+status,2+status,0]
  4265                           
  4266                           
  4267                           ;main.c: 100:     if (temperaturaIdeal > 20)
  4268     0ED8  3015               	movlw	21
  4269     0ED9  027B               	subwf	_temperaturaIdeal,w
  4270     0EDA  1C03               	skipc
  4271     0EDB  2EDD               	goto	u1721
  4272     0EDC  2EDE               	goto	u1720
  4273     0EDD                     u1721:
  4274     0EDD  2EE1               	goto	l195
  4275     0EDE                     u1720:
  4276     0EDE                     l1905:
  4277                           
  4278                           ;main.c: 101:     {;main.c: 102:         temperaturaIdeal = temperaturaIdeal - 1;
  4279     0EDE  087B               	movf	_temperaturaIdeal,w
  4280     0EDF  3EFF               	addlw	255
  4281     0EE0  00FB               	movwf	_temperaturaIdeal
  4282     0EE1                     l195:
  4283     0EE1  0008               	return
  4284     0EE2                     __end_of_decrementarTemperatura:
  4285                           
  4286                           	psect	text24
  4287     07B2                     __ptext24:	
  4288 ;; *************** function _UART_Init *****************
  4289 ;; Defined at:
  4290 ;;		line 4 in file "./UART.h"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  baud_rate       4    7[BANK0 ] long 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;		None
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0, pclath, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4304 ;;      Params:         0       4       0       0       0
  4305 ;;      Locals:         0       0       0       0       0
  4306 ;;      Temps:          0       4       0       0       0
  4307 ;;      Totals:         0       8       0       0       0
  4308 ;;Total ram usage:        8 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 2
  4311 ;; This function calls:
  4312 ;;		___aldiv
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318     07B2                     _UART_Init:	
  4319                           ;psect for function _UART_Init
  4320                           
  4321     07B2                     l2309:	
  4322                           ;incstack = 0
  4323                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  4324                           
  4325                           
  4326                           ;./UART.h: 5:     SPBRG = (8000000/(64 * baud_rate)) - 1;
  4327     07B2  1283               	bcf	3,5	;RP0=0, select bank0
  4328     07B3  1303               	bcf	3,6	;RP1=0, select bank0
  4329     07B4  0827               	movf	UART_Init@baud_rate,w
  4330     07B5  00AB               	movwf	??_UART_Init
  4331     07B6  0828               	movf	UART_Init@baud_rate+1,w
  4332     07B7  00AC               	movwf	??_UART_Init+1
  4333     07B8  0829               	movf	UART_Init@baud_rate+2,w
  4334     07B9  00AD               	movwf	??_UART_Init+2
  4335     07BA  082A               	movf	UART_Init@baud_rate+3,w
  4336     07BB  00AE               	movwf	??_UART_Init+3
  4337     07BC  3006               	movlw	6
  4338     07BD                     u2255:
  4339     07BD  1003               	clrc
  4340     07BE  0DAB               	rlf	??_UART_Init,f
  4341     07BF  0DAC               	rlf	??_UART_Init+1,f
  4342     07C0  0DAD               	rlf	??_UART_Init+2,f
  4343     07C1  0DAE               	rlf	??_UART_Init+3,f
  4344     07C2                     u2250:
  4345     07C2  3EFF               	addlw	-1
  4346     07C3  1D03               	skipz
  4347     07C4  2FBD               	goto	u2255
  4348     07C5  082E               	movf	??_UART_Init+3,w
  4349     07C6  00F5               	movwf	___aldiv@divisor+3
  4350     07C7  082D               	movf	??_UART_Init+2,w
  4351     07C8  00F4               	movwf	___aldiv@divisor+2
  4352     07C9  082C               	movf	??_UART_Init+1,w
  4353     07CA  00F3               	movwf	___aldiv@divisor+1
  4354     07CB  082B               	movf	??_UART_Init,w
  4355     07CC  00F2               	movwf	___aldiv@divisor
  4356     07CD  3000               	movlw	0
  4357     07CE  00F9               	movwf	___aldiv@dividend+3
  4358     07CF  307A               	movlw	122
  4359     07D0  00F8               	movwf	___aldiv@dividend+2
  4360     07D1  3012               	movlw	18
  4361     07D2  00F7               	movwf	___aldiv@dividend+1
  4362     07D3  3000               	movlw	0
  4363     07D4  00F6               	movwf	___aldiv@dividend
  4364     07D5  120A  118A  236A  120A  118A  	fcall	___aldiv
  4365     07DA  0872               	movf	?___aldiv,w
  4366     07DB  3EFF               	addlw	255
  4367     07DC  1683               	bsf	3,5	;RP0=1, select bank1
  4368     07DD  1303               	bcf	3,6	;RP1=0, select bank1
  4369     07DE  0099               	movwf	25	;volatile
  4370     07DF                     l2311:
  4371                           
  4372                           ;./UART.h: 6:     TXSTAbits.BRGH = 0;
  4373     07DF  1118               	bcf	24,2	;volatile
  4374     07E0                     l2313:
  4375                           
  4376                           ;./UART.h: 7:     TXSTAbits.TXEN = 1;
  4377     07E0  1698               	bsf	24,5	;volatile
  4378     07E1                     l2315:
  4379                           
  4380                           ;./UART.h: 8:     RCSTAbits.SPEN = 1;
  4381     07E1  1283               	bcf	3,5	;RP0=0, select bank0
  4382     07E2  1303               	bcf	3,6	;RP1=0, select bank0
  4383     07E3  1798               	bsf	24,7	;volatile
  4384     07E4                     l143:
  4385     07E4  0008               	return
  4386     07E5                     __end_of_UART_Init:
  4387                           
  4388                           	psect	text25
  4389     036A                     __ptext25:	
  4390 ;; *************** function ___aldiv *****************
  4391 ;; Defined at:
  4392 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\aldiv.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  divisor         4    2[COMMON] long 
  4395 ;;  dividend        4    6[COMMON] long 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  quotient        4    3[BANK0 ] long 
  4398 ;;  sign            1    2[BANK0 ] unsigned char 
  4399 ;;  counter         1    1[BANK0 ] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  4    2[COMMON] long 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4409 ;;      Params:         8       0       0       0       0
  4410 ;;      Locals:         0       6       0       0       0
  4411 ;;      Temps:          0       1       0       0       0
  4412 ;;      Totals:         8       7       0       0       0
  4413 ;;Total ram usage:       15 bytes
  4414 ;; Hardware stack levels used: 1
  4415 ;; Hardware stack levels required when called: 1
  4416 ;; This function calls:
  4417 ;;		Nothing
  4418 ;; This function is called by:
  4419 ;;		_UART_Init
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423     036A                     ___aldiv:	
  4424                           ;psect for function ___aldiv
  4425                           
  4426     036A                     l2259:	
  4427                           ;incstack = 0
  4428                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4429                           
  4430     036A  1283               	bcf	3,5	;RP0=0, select bank0
  4431     036B  1303               	bcf	3,6	;RP1=0, select bank0
  4432     036C  01A2               	clrf	___aldiv@sign
  4433     036D                     l2261:
  4434     036D  1FF5               	btfss	___aldiv@divisor+3,7
  4435     036E  2B70               	goto	u2151
  4436     036F  2B71               	goto	u2150
  4437     0370                     u2151:
  4438     0370  2B7E               	goto	l384
  4439     0371                     u2150:
  4440     0371                     l2263:
  4441     0371  09F2               	comf	___aldiv@divisor,f
  4442     0372  09F3               	comf	___aldiv@divisor+1,f
  4443     0373  09F4               	comf	___aldiv@divisor+2,f
  4444     0374  09F5               	comf	___aldiv@divisor+3,f
  4445     0375  0AF2               	incf	___aldiv@divisor,f
  4446     0376  1903               	skipnz
  4447     0377  0AF3               	incf	___aldiv@divisor+1,f
  4448     0378  1903               	skipnz
  4449     0379  0AF4               	incf	___aldiv@divisor+2,f
  4450     037A  1903               	skipnz
  4451     037B  0AF5               	incf	___aldiv@divisor+3,f
  4452     037C  3001               	movlw	1
  4453     037D  00A2               	movwf	___aldiv@sign
  4454     037E                     l384:
  4455     037E  1FF9               	btfss	___aldiv@dividend+3,7
  4456     037F  2B81               	goto	u2161
  4457     0380  2B82               	goto	u2160
  4458     0381                     u2161:
  4459     0381  2B8F               	goto	l2269
  4460     0382                     u2160:
  4461     0382                     l2265:
  4462     0382  09F6               	comf	___aldiv@dividend,f
  4463     0383  09F7               	comf	___aldiv@dividend+1,f
  4464     0384  09F8               	comf	___aldiv@dividend+2,f
  4465     0385  09F9               	comf	___aldiv@dividend+3,f
  4466     0386  0AF6               	incf	___aldiv@dividend,f
  4467     0387  1903               	skipnz
  4468     0388  0AF7               	incf	___aldiv@dividend+1,f
  4469     0389  1903               	skipnz
  4470     038A  0AF8               	incf	___aldiv@dividend+2,f
  4471     038B  1903               	skipnz
  4472     038C  0AF9               	incf	___aldiv@dividend+3,f
  4473     038D                     l2267:
  4474     038D  3001               	movlw	1
  4475     038E  06A2               	xorwf	___aldiv@sign,f
  4476     038F                     l2269:
  4477     038F  3000               	movlw	0
  4478     0390  00A6               	movwf	___aldiv@quotient+3
  4479     0391  3000               	movlw	0
  4480     0392  00A5               	movwf	___aldiv@quotient+2
  4481     0393  3000               	movlw	0
  4482     0394  00A4               	movwf	___aldiv@quotient+1
  4483     0395  3000               	movlw	0
  4484     0396  00A3               	movwf	___aldiv@quotient
  4485     0397                     l2271:
  4486     0397  0875               	movf	___aldiv@divisor+3,w
  4487     0398  0474               	iorwf	___aldiv@divisor+2,w
  4488     0399  0473               	iorwf	___aldiv@divisor+1,w
  4489     039A  0472               	iorwf	___aldiv@divisor,w
  4490     039B  1903               	skipnz
  4491     039C  2B9E               	goto	u2171
  4492     039D  2B9F               	goto	u2170
  4493     039E                     u2171:
  4494     039E  2BEA               	goto	l2291
  4495     039F                     u2170:
  4496     039F                     l2273:
  4497     039F  3001               	movlw	1
  4498     03A0  00A1               	movwf	___aldiv@counter
  4499     03A1  2BAD               	goto	l2277
  4500     03A2                     l2275:
  4501     03A2  3001               	movlw	1
  4502     03A3  00A0               	movwf	??___aldiv
  4503     03A4                     u2185:
  4504     03A4  1003               	clrc
  4505     03A5  0DF2               	rlf	___aldiv@divisor,f
  4506     03A6  0DF3               	rlf	___aldiv@divisor+1,f
  4507     03A7  0DF4               	rlf	___aldiv@divisor+2,f
  4508     03A8  0DF5               	rlf	___aldiv@divisor+3,f
  4509     03A9  0BA0               	decfsz	??___aldiv,f
  4510     03AA  2BA4               	goto	u2185
  4511     03AB  3001               	movlw	1
  4512     03AC  07A1               	addwf	___aldiv@counter,f
  4513     03AD                     l2277:
  4514     03AD  1FF5               	btfss	___aldiv@divisor+3,7
  4515     03AE  2BB0               	goto	u2191
  4516     03AF  2BB1               	goto	u2190
  4517     03B0                     u2191:
  4518     03B0  2BA2               	goto	l2275
  4519     03B1                     u2190:
  4520     03B1                     l2279:
  4521     03B1  3001               	movlw	1
  4522     03B2  00A0               	movwf	??___aldiv
  4523     03B3                     u2205:
  4524     03B3  1003               	clrc
  4525     03B4  0DA3               	rlf	___aldiv@quotient,f
  4526     03B5  0DA4               	rlf	___aldiv@quotient+1,f
  4527     03B6  0DA5               	rlf	___aldiv@quotient+2,f
  4528     03B7  0DA6               	rlf	___aldiv@quotient+3,f
  4529     03B8  0BA0               	decfsz	??___aldiv,f
  4530     03B9  2BB3               	goto	u2205
  4531     03BA                     l2281:
  4532     03BA  0875               	movf	___aldiv@divisor+3,w
  4533     03BB  0279               	subwf	___aldiv@dividend+3,w
  4534     03BC  1D03               	skipz
  4535     03BD  2BC8               	goto	u2215
  4536     03BE  0874               	movf	___aldiv@divisor+2,w
  4537     03BF  0278               	subwf	___aldiv@dividend+2,w
  4538     03C0  1D03               	skipz
  4539     03C1  2BC8               	goto	u2215
  4540     03C2  0873               	movf	___aldiv@divisor+1,w
  4541     03C3  0277               	subwf	___aldiv@dividend+1,w
  4542     03C4  1D03               	skipz
  4543     03C5  2BC8               	goto	u2215
  4544     03C6  0872               	movf	___aldiv@divisor,w
  4545     03C7  0276               	subwf	___aldiv@dividend,w
  4546     03C8                     u2215:
  4547     03C8  1C03               	skipc
  4548     03C9  2BCB               	goto	u2211
  4549     03CA  2BCC               	goto	u2210
  4550     03CB                     u2211:
  4551     03CB  2BDB               	goto	l2287
  4552     03CC                     u2210:
  4553     03CC                     l2283:
  4554     03CC  0872               	movf	___aldiv@divisor,w
  4555     03CD  02F6               	subwf	___aldiv@dividend,f
  4556     03CE  0873               	movf	___aldiv@divisor+1,w
  4557     03CF  1C03               	skipc
  4558     03D0  0F73               	incfsz	___aldiv@divisor+1,w
  4559     03D1  02F7               	subwf	___aldiv@dividend+1,f
  4560     03D2  0874               	movf	___aldiv@divisor+2,w
  4561     03D3  1C03               	skipc
  4562     03D4  0F74               	incfsz	___aldiv@divisor+2,w
  4563     03D5  02F8               	subwf	___aldiv@dividend+2,f
  4564     03D6  0875               	movf	___aldiv@divisor+3,w
  4565     03D7  1C03               	skipc
  4566     03D8  0F75               	incfsz	___aldiv@divisor+3,w
  4567     03D9  02F9               	subwf	___aldiv@dividend+3,f
  4568     03DA                     l2285:
  4569     03DA  1423               	bsf	___aldiv@quotient,0
  4570     03DB                     l2287:
  4571     03DB  3001               	movlw	1
  4572     03DC                     u2225:
  4573     03DC  1003               	clrc
  4574     03DD  0CF5               	rrf	___aldiv@divisor+3,f
  4575     03DE  0CF4               	rrf	___aldiv@divisor+2,f
  4576     03DF  0CF3               	rrf	___aldiv@divisor+1,f
  4577     03E0  0CF2               	rrf	___aldiv@divisor,f
  4578     03E1  3EFF               	addlw	-1
  4579     03E2  1D03               	skipz
  4580     03E3  2BDC               	goto	u2225
  4581     03E4                     l2289:
  4582     03E4  3001               	movlw	1
  4583     03E5  02A1               	subwf	___aldiv@counter,f
  4584     03E6  1D03               	btfss	3,2
  4585     03E7  2BE9               	goto	u2231
  4586     03E8  2BEA               	goto	u2230
  4587     03E9                     u2231:
  4588     03E9  2BB1               	goto	l2279
  4589     03EA                     u2230:
  4590     03EA                     l2291:
  4591     03EA  0822               	movf	___aldiv@sign,w
  4592     03EB  1903               	btfsc	3,2
  4593     03EC  2BEE               	goto	u2241
  4594     03ED  2BEF               	goto	u2240
  4595     03EE                     u2241:
  4596     03EE  2BFA               	goto	l2295
  4597     03EF                     u2240:
  4598     03EF                     l2293:
  4599     03EF  09A3               	comf	___aldiv@quotient,f
  4600     03F0  09A4               	comf	___aldiv@quotient+1,f
  4601     03F1  09A5               	comf	___aldiv@quotient+2,f
  4602     03F2  09A6               	comf	___aldiv@quotient+3,f
  4603     03F3  0AA3               	incf	___aldiv@quotient,f
  4604     03F4  1903               	skipnz
  4605     03F5  0AA4               	incf	___aldiv@quotient+1,f
  4606     03F6  1903               	skipnz
  4607     03F7  0AA5               	incf	___aldiv@quotient+2,f
  4608     03F8  1903               	skipnz
  4609     03F9  0AA6               	incf	___aldiv@quotient+3,f
  4610     03FA                     l2295:
  4611     03FA  0826               	movf	___aldiv@quotient+3,w
  4612     03FB  00F5               	movwf	?___aldiv+3
  4613     03FC  0825               	movf	___aldiv@quotient+2,w
  4614     03FD  00F4               	movwf	?___aldiv+2
  4615     03FE  0824               	movf	___aldiv@quotient+1,w
  4616     03FF  00F3               	movwf	?___aldiv+1
  4617     0400  0823               	movf	___aldiv@quotient,w
  4618     0401  00F2               	movwf	?___aldiv
  4619     0402                     l394:
  4620     0402  0008               	return
  4621     0403                     __end_of___aldiv:
  4622                           
  4623                           	psect	text26
  4624     04D2                     __ptext26:	
  4625 ;; *************** function _Lcd_Init *****************
  4626 ;; Defined at:
  4627 ;;		line 76 in file "./lcd.h"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0, pclath, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4641 ;;      Params:         0       0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0
  4643 ;;      Temps:          2       0       0       0       0
  4644 ;;      Totals:         2       0       0       0       0
  4645 ;;Total ram usage:        2 bytes
  4646 ;; Hardware stack levels used: 1
  4647 ;; Hardware stack levels required when called: 3
  4648 ;; This function calls:
  4649 ;;		_Lcd_Cmd
  4650 ;;		_Lcd_Port
  4651 ;; This function is called by:
  4652 ;;		_main
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656     04D2                     _Lcd_Init:	
  4657                           ;psect for function _Lcd_Init
  4658                           
  4659     04D2                     l2299:	
  4660                           ;incstack = 0
  4661                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4662                           
  4663                           
  4664                           ;./lcd.h: 78:   Lcd_Port(0x00);
  4665     04D2  3000               	movlw	0
  4666     04D3  120A  158A  2772  120A  118A  	fcall	_Lcd_Port
  4667     04D8                     l2301:
  4668                           
  4669                           ;./lcd.h: 79:    _delay((unsigned long)((20)*(8000000/4000.0)));
  4670     04D8  3034               	movlw	52
  4671     04D9  00F7               	movwf	??_Lcd_Init+1
  4672     04DA  30F1               	movlw	241
  4673     04DB  00F6               	movwf	??_Lcd_Init
  4674     04DC                     u2557:
  4675     04DC  0BF6               	decfsz	??_Lcd_Init,f
  4676     04DD  2CDC               	goto	u2557
  4677     04DE  0BF7               	decfsz	??_Lcd_Init+1,f
  4678     04DF  2CDC               	goto	u2557
  4679     04E0  2CE1               	nop2
  4680     04E1                     l2303:
  4681                           
  4682                           ;./lcd.h: 80:   Lcd_Cmd(0x03);
  4683     04E1  3003               	movlw	3
  4684     04E2  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4685                           
  4686                           ;./lcd.h: 81:  _delay((unsigned long)((5)*(8000000/4000.0)));
  4687     04E7  300D               	movlw	13
  4688     04E8  00F7               	movwf	??_Lcd_Init+1
  4689     04E9  30FB               	movlw	251
  4690     04EA  00F6               	movwf	??_Lcd_Init
  4691     04EB                     u2567:
  4692     04EB  0BF6               	decfsz	??_Lcd_Init,f
  4693     04EC  2CEB               	goto	u2567
  4694     04ED  0BF7               	decfsz	??_Lcd_Init+1,f
  4695     04EE  2CEB               	goto	u2567
  4696     04EF  2CF0               	nop2
  4697     04F0                     l2305:
  4698                           
  4699                           ;./lcd.h: 82:   Lcd_Cmd(0x03);
  4700     04F0  3003               	movlw	3
  4701     04F1  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4702     04F6                     l2307:
  4703                           
  4704                           ;./lcd.h: 83:  _delay((unsigned long)((11)*(8000000/4000.0)));
  4705     04F6  301D               	movlw	29
  4706     04F7  00F7               	movwf	??_Lcd_Init+1
  4707     04F8  3091               	movlw	145
  4708     04F9  00F6               	movwf	??_Lcd_Init
  4709     04FA                     u2577:
  4710     04FA  0BF6               	decfsz	??_Lcd_Init,f
  4711     04FB  2CFA               	goto	u2577
  4712     04FC  0BF7               	decfsz	??_Lcd_Init+1,f
  4713     04FD  2CFA               	goto	u2577
  4714                           
  4715                           ;./lcd.h: 84:   Lcd_Cmd(0x03);
  4716     04FE  3003               	movlw	3
  4717     04FF  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4718                           
  4719                           ;./lcd.h: 86:   Lcd_Cmd(0x02);
  4720     0504  3002               	movlw	2
  4721     0505  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4722                           
  4723                           ;./lcd.h: 87:   Lcd_Cmd(0x02);
  4724     050A  3002               	movlw	2
  4725     050B  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4726                           
  4727                           ;./lcd.h: 88:   Lcd_Cmd(0x08);
  4728     0510  3008               	movlw	8
  4729     0511  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4730                           
  4731                           ;./lcd.h: 89:   Lcd_Cmd(0x00);
  4732     0516  3000               	movlw	0
  4733     0517  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4734                           
  4735                           ;./lcd.h: 90:   Lcd_Cmd(0x0C);
  4736     051C  300C               	movlw	12
  4737     051D  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4738                           
  4739                           ;./lcd.h: 91:   Lcd_Cmd(0x00);
  4740     0522  3000               	movlw	0
  4741     0523  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4742                           
  4743                           ;./lcd.h: 92:   Lcd_Cmd(0x06);
  4744     0528  3006               	movlw	6
  4745     0529  120A  158A  2718  120A  118A  	fcall	_Lcd_Cmd
  4746     052E                     l88:
  4747     052E  0008               	return
  4748     052F                     __end_of_Lcd_Init:
  4749                           
  4750                           	psect	text27
  4751     0F18                     __ptext27:	
  4752 ;; *************** function _Lcd_Cmd *****************
  4753 ;; Defined at:
  4754 ;;		line 40 in file "./lcd.h"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  a               1    wreg     unsigned char 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  a               1    5[COMMON] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  1    wreg      void 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0, pclath, cstack
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4768 ;;      Params:         0       0       0       0       0
  4769 ;;      Locals:         1       0       0       0       0
  4770 ;;      Temps:          2       0       0       0       0
  4771 ;;      Totals:         3       0       0       0       0
  4772 ;;Total ram usage:        3 bytes
  4773 ;; Hardware stack levels used: 1
  4774 ;; Hardware stack levels required when called: 2
  4775 ;; This function calls:
  4776 ;;		_Lcd_Port
  4777 ;; This function is called by:
  4778 ;;		_Lcd_Clear
  4779 ;;		_Lcd_Set_Cursor
  4780 ;;		_Lcd_Init
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784     0F18                     _Lcd_Cmd:	
  4785                           ;psect for function _Lcd_Cmd
  4786                           
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4790                           ;Lcd_Cmd@a stored from wreg
  4791     0F18  00F5               	movwf	Lcd_Cmd@a
  4792     0F19                     l2167:
  4793                           
  4794                           ;./lcd.h: 40: void Lcd_Cmd(char a);./lcd.h: 41: {;./lcd.h: 42:  RD1 = 0;
  4795     0F19  1283               	bcf	3,5	;RP0=0, select bank0
  4796     0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  4797     0F1B  1088               	bcf	8,1	;volatile
  4798     0F1C                     l2169:
  4799                           
  4800                           ;./lcd.h: 43:  Lcd_Port(a);
  4801     0F1C  0875               	movf	Lcd_Cmd@a,w
  4802     0F1D  120A  158A  2772  120A  158A  	fcall	_Lcd_Port
  4803     0F22                     l2171:
  4804                           
  4805                           ;./lcd.h: 44:  RD0 = 1;
  4806     0F22  1283               	bcf	3,5	;RP0=0, select bank0
  4807     0F23  1303               	bcf	3,6	;RP1=0, select bank0
  4808     0F24  1408               	bsf	8,0	;volatile
  4809     0F25                     l2173:
  4810                           
  4811                           ;./lcd.h: 45:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4812     0F25  300B               	movlw	11
  4813     0F26  00F4               	movwf	??_Lcd_Cmd+1
  4814     0F27  3062               	movlw	98
  4815     0F28  00F3               	movwf	??_Lcd_Cmd
  4816     0F29                     u2587:
  4817     0F29  0BF3               	decfsz	??_Lcd_Cmd,f
  4818     0F2A  2F29               	goto	u2587
  4819     0F2B  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4820     0F2C  2F29               	goto	u2587
  4821     0F2D  0000               	nop
  4822     0F2E                     l2175:
  4823                           
  4824                           ;./lcd.h: 46:     RD0 = 0;
  4825     0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  4826     0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  4827     0F30  1008               	bcf	8,0	;volatile
  4828     0F31                     l76:
  4829     0F31  0008               	return
  4830     0F32                     __end_of_Lcd_Cmd:
  4831                           
  4832                           	psect	text28
  4833     0F72                     __ptext28:	
  4834 ;; *************** function _Lcd_Port *****************
  4835 ;; Defined at:
  4836 ;;		line 18 in file "./lcd.h"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  a               1    wreg     unsigned char 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  a               1    2[COMMON] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4850 ;;      Params:         0       0       0       0       0
  4851 ;;      Locals:         1       0       0       0       0
  4852 ;;      Temps:          0       0       0       0       0
  4853 ;;      Totals:         1       0       0       0       0
  4854 ;;Total ram usage:        1 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; Hardware stack levels required when called: 1
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_Lcd_Cmd
  4861 ;;		_Lcd_Init
  4862 ;;		_Lcd_Write_Char
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866     0F72                     _Lcd_Port:	
  4867                           ;psect for function _Lcd_Port
  4868                           
  4869                           
  4870                           ;incstack = 0
  4871                           ; Regs used in _Lcd_Port: [wreg]
  4872                           ;Lcd_Port@a stored from wreg
  4873     0F72  00F2               	movwf	Lcd_Port@a
  4874     0F73                     l2097:
  4875                           
  4876                           ;./lcd.h: 18: void Lcd_Port(char a);./lcd.h: 19: {;./lcd.h: 20:  if(a & 1)
  4877     0F73  1C72               	btfss	Lcd_Port@a,0
  4878     0F74  2F76               	goto	u1911
  4879     0F75  2F77               	goto	u1910
  4880     0F76                     u1911:
  4881     0F76  2F7B               	goto	l65
  4882     0F77                     u1910:
  4883     0F77                     l2099:
  4884                           
  4885                           ;./lcd.h: 21:   RD4 = 1;
  4886     0F77  1283               	bcf	3,5	;RP0=0, select bank0
  4887     0F78  1303               	bcf	3,6	;RP1=0, select bank0
  4888     0F79  1608               	bsf	8,4	;volatile
  4889     0F7A  2F7E               	goto	l66
  4890     0F7B                     l65:	
  4891                           ;./lcd.h: 22:  else
  4892                           
  4893                           
  4894                           ;./lcd.h: 23:   RD4 = 0;
  4895     0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  4896     0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  4897     0F7D  1208               	bcf	8,4	;volatile
  4898     0F7E                     l66:
  4899                           
  4900                           ;./lcd.h: 25:  if(a & 2)
  4901     0F7E  1CF2               	btfss	Lcd_Port@a,1
  4902     0F7F  2F81               	goto	u1921
  4903     0F80  2F82               	goto	u1920
  4904     0F81                     u1921:
  4905     0F81  2F84               	goto	l67
  4906     0F82                     u1920:
  4907     0F82                     l2101:
  4908                           
  4909                           ;./lcd.h: 26:   RD5 = 1;
  4910     0F82  1688               	bsf	8,5	;volatile
  4911     0F83  2F85               	goto	l68
  4912     0F84                     l67:	
  4913                           ;./lcd.h: 27:  else
  4914                           
  4915                           
  4916                           ;./lcd.h: 28:   RD5 = 0;
  4917     0F84  1288               	bcf	8,5	;volatile
  4918     0F85                     l68:
  4919                           
  4920                           ;./lcd.h: 30:  if(a & 4)
  4921     0F85  1D72               	btfss	Lcd_Port@a,2
  4922     0F86  2F88               	goto	u1931
  4923     0F87  2F89               	goto	u1930
  4924     0F88                     u1931:
  4925     0F88  2F8B               	goto	l69
  4926     0F89                     u1930:
  4927     0F89                     l2103:
  4928                           
  4929                           ;./lcd.h: 31:   RD6 = 1;
  4930     0F89  1708               	bsf	8,6	;volatile
  4931     0F8A  2F8C               	goto	l70
  4932     0F8B                     l69:	
  4933                           ;./lcd.h: 32:  else
  4934                           
  4935                           
  4936                           ;./lcd.h: 33:   RD6 = 0;
  4937     0F8B  1308               	bcf	8,6	;volatile
  4938     0F8C                     l70:
  4939                           
  4940                           ;./lcd.h: 35:  if(a & 8)
  4941     0F8C  1DF2               	btfss	Lcd_Port@a,3
  4942     0F8D  2F8F               	goto	u1941
  4943     0F8E  2F90               	goto	u1940
  4944     0F8F                     u1941:
  4945     0F8F  2F92               	goto	l71
  4946     0F90                     u1940:
  4947     0F90                     l2105:
  4948                           
  4949                           ;./lcd.h: 36:   RD7 = 1;
  4950     0F90  1788               	bsf	8,7	;volatile
  4951     0F91  2F93               	goto	l73
  4952     0F92                     l71:	
  4953                           ;./lcd.h: 37:  else
  4954                           
  4955                           
  4956                           ;./lcd.h: 38:   RD7 = 0;
  4957     0F92  1388               	bcf	8,7	;volatile
  4958     0F93                     l73:
  4959     0F93  0008               	return
  4960     0F94                     __end_of_Lcd_Port:
  4961                           
  4962                           	psect	text29
  4963     0F50                     __ptext29:	
  4964 ;; *************** function _TrataInt *****************
  4965 ;; Defined at:
  4966 ;;		line 116 in file "main.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;		None
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;		None
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      void 
  4973 ;; Registers used:
  4974 ;;		wreg, status,2, status,0
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4980 ;;      Params:         0       0       0       0       0
  4981 ;;      Locals:         0       0       0       0       0
  4982 ;;      Temps:          2       0       0       0       0
  4983 ;;      Totals:         2       0       0       0       0
  4984 ;;Total ram usage:        2 bytes
  4985 ;; Hardware stack levels used: 1
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		Interrupt level 1
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993     0F50                     _TrataInt:	
  4994                           ;psect for function _TrataInt
  4995                           
  4996     0F50                     i1l1909:
  4997                           
  4998                           ;main.c: 118:   if (TMR1IF)
  4999     0F50  1283               	bcf	3,5	;RP0=0, select bank0
  5000     0F51  1303               	bcf	3,6	;RP1=0, select bank0
  5001     0F52  1C0C               	btfss	12,0	;volatile
  5002     0F53  2F55               	goto	u173_21
  5003     0F54  2F56               	goto	u173_20
  5004     0F55                     u173_21:
  5005     0F55  2F6B               	goto	i1l205
  5006     0F56                     u173_20:
  5007     0F56                     i1l1911:
  5008                           
  5009                           ;main.c: 119:      {;main.c: 120:         PIR1bits.TMR1IF = 0;
  5010     0F56  100C               	bcf	12,0	;volatile
  5011                           
  5012                           ;main.c: 121:         TMR1H = 0x9E;
  5013     0F57  309E               	movlw	158
  5014     0F58  008F               	movwf	15	;volatile
  5015                           
  5016                           ;main.c: 122:         TMR1L = 0x58;
  5017     0F59  3058               	movlw	88
  5018     0F5A  008E               	movwf	14	;volatile
  5019     0F5B                     i1l1913:
  5020                           
  5021                           ;main.c: 125:         contador++;
  5022     0F5B  3001               	movlw	1
  5023     0F5C  07DB               	addwf	_contador,f
  5024     0F5D  1803               	skipnc
  5025     0F5E  0ADC               	incf	_contador+1,f
  5026     0F5F  3000               	movlw	0
  5027     0F60  07DC               	addwf	_contador+1,f
  5028     0F61                     i1l1915:
  5029                           
  5030                           ;main.c: 126:         if (contador == 50)
  5031     0F61  3032               	movlw	50
  5032     0F62  065B               	xorwf	_contador,w
  5033     0F63  045C               	iorwf	_contador+1,w
  5034     0F64  1D03               	btfss	3,2
  5035     0F65  2F67               	goto	u174_21
  5036     0F66  2F68               	goto	u174_20
  5037     0F67                     u174_21:
  5038     0F67  2F6B               	goto	i1l205
  5039     0F68                     u174_20:
  5040     0F68                     i1l1917:
  5041                           
  5042                           ;main.c: 127:         {;main.c: 128:             enviarDadosTerminal = 1;
  5043     0F68  14FA               	bsf	_enviarDadosTerminal/(0+8),_enviarDadosTerminal& (0+7)
  5044     0F69                     i1l1919:
  5045                           
  5046                           ;main.c: 129:             contador = 0;
  5047     0F69  01DB               	clrf	_contador
  5048     0F6A  01DC               	clrf	_contador+1
  5049     0F6B                     i1l205:
  5050     0F6B  0871               	movf	??_TrataInt+1,w
  5051     0F6C  008A               	movwf	10
  5052     0F6D  0E70               	swapf	??_TrataInt,w
  5053     0F6E  0083               	movwf	3
  5054     0F6F  0EFE               	swapf	btemp,f
  5055     0F70  0E7E               	swapf	btemp,w
  5056     0F71  0009               	retfie
  5057     0F72                     __end_of_TrataInt:
  5058     0002                     ___latbits      equ	2
  5059     007E                     btemp           set	126	;btemp
  5060     007E                     wtemp0          set	126
  5061                           
  5062                           	psect	intentry
  5063     0004                     __pintentry:	
  5064                           ;incstack = 0
  5065                           ; Regs used in _TrataInt: [wreg+status,2+status,0]
  5066                           
  5067     0004                     interrupt_function:
  5068     007E                     saved_w         set	btemp
  5069     0004  00FE               	movwf	btemp
  5070     0005  0E03               	swapf	3,w
  5071     0006  00F0               	movwf	??_TrataInt
  5072     0007  080A               	movf	10,w
  5073     0008  00F1               	movwf	??_TrataInt+1
  5074     0009  120A  158A  2F50   	ljmp	_TrataInt
  5075                           
  5076                           	psect	config
  5077                           
  5078                           ;Config register CONFIG @ 0x2007
  5079                           ;	Oscillator Selection bits
  5080                           ;	FOSC = HS, HS oscillator
  5081                           ;	Watchdog Timer Enable bit
  5082                           ;	WDTE = ON, WDT enabled
  5083                           ;	Power-up Timer Enable bit
  5084                           ;	PWRTE = ON, PWRT enabled
  5085                           ;	Brown-out Reset Enable bit
  5086                           ;	BOREN = ON, BOR enabled
  5087                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5088                           ;	LVP = 0x1, unprogrammed default
  5089                           ;	Data EEPROM Memory Code Protection bit
  5090                           ;	CPD = 0x1, unprogrammed default
  5091                           ;	Flash Program Memory Write Enable bits
  5092                           ;	WRT = 0x3, unprogrammed default
  5093                           ;	In-Circuit Debugger Mode bit
  5094                           ;	DEBUG = 0x1, unprogrammed default
  5095                           ;	Flash Program Memory Code Protection bit
  5096                           ;	CP = 0x1, unprogrammed default
  5097     2007                     	org	8199
  5098     2007  3FF6               	dw	16374

Data Sizes:
    Strings     41
    Constant    0
    Data        1
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     49      78
    BANK1            80      0      48
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> infoTempBuffer(BANK1[8]), tempBuffer(BANK0[8]), umidadeBuffer(BANK1[8]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> infoTempBuffer(BANK1[8]), tempBuffer(BANK0[8]), umidadeBuffer(BANK1[8]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 12
		 -> infoTempBuffer(BANK1[8]), STR_3(CODE[12]), tempBuffer(BANK0[8]), umidadeBuffer(BANK1[8]), 

    S1086$buffer	PTR unsigned char  size(2) Largest target is 8
		 -> infoTempBuffer(BANK1[8]), tempBuffer(BANK0[8]), umidadeBuffer(BANK1[8]), 

    S1086$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_4(CODE[4]), STR_5(CODE[14]), 
		 -> STR_7(CODE[10]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 8
		 -> infoTempBuffer(BANK1[8]), tempBuffer(BANK0[8]), umidadeBuffer(BANK1[8]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 8
		 -> STR_6(CODE[3]), STR_8(CODE[5]), tempBuffer(BANK0[8]), umidadeBuffer(BANK1[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_4(CODE[4]), STR_5(CODE[14]), 
		 -> STR_7(CODE[10]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_4(CODE[4]), STR_5(CODE[14]), 
		 -> STR_7(CODE[10]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[10]), STR_4(CODE[4]), STR_5(CODE[14]), 
		 -> STR_7(CODE[10]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _read_dht11_data->_Lcd_Set_Cursor
    _UART_Write_Text->_UART_Write
    _vfpfcnvrt->___awdiv
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _UART_Init->___aldiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TrataInt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_definir_temperatura
    _main->_display_dht11_data
    _main->_display_terminal_data
    _read_dht11_data->_Lcd_Set_Cursor
    _display_terminal_data->_sprintf
    _display_dht11_data->_sprintf
    _definir_temperatura->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _UART_Init->___aldiv

Critical Paths under _TrataInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TrataInt in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TrataInt in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TrataInt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   11702
                                             46 BANK0      3     3      0
                           _Lcd_Init
                          _UART_Init
             _decrementarTemperatura
                _definir_temperatura
                         _dht11_init
                 _display_dht11_data
              _display_terminal_data
                      _find_response
             _incrementarTemperatura
                    _read_dht11_data
 ---------------------------------------------------------------------------------
 (1) _read_dht11_data                                      6     6      0     883
                                              4 BANK0      6     6      0
                     _Lcd_Set_Cursor
                         _read_dht11
 ---------------------------------------------------------------------------------
 (2) _read_dht11                                           5     5      0     205
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _incrementarTemperatura                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _find_response                                        1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_terminal_data                                2     2      0    2415
                                             44 BANK0      2     2      0
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      2     0      2      78
                                              3 COMMON     2     0      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      29
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_dht11_data                                   2     2      0    3748
                                             44 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _dht11_init                                           2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _definir_temperatura                                  2     2      0    3748
                                             44 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    2337
                                             27 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4    2001
                                             22 BANK0      5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     9      4    1792
                                              9 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                               13     9      4     232
                                              2 COMMON     4     0      4
                                              0 BANK0      9     9      0
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      96
                                              8 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     498
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     356
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     678
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     235
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _decrementarTemperatura                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            8     4      4     485
                                              7 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     451
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     423
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     235
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     188
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _TrataInt                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _UART_Init
     ___aldiv
   _decrementarTemperatura
   _definir_temperatura
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _dht11_init
   _display_dht11_data
     _Lcd_Clear
     _Lcd_Set_Cursor
     _Lcd_Write_String
     _sprintf
   _display_terminal_data
     _UART_Write_Text
       _UART_Write
     _sprintf
   _find_response
   _incrementarTemperatura
   _read_dht11_data
     _Lcd_Set_Cursor
     _read_dht11

 _TrataInt (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      48     60.0%
BITBANK1            80      0       0      0.0%
BANK0               80     49      78     97.5%
BITBANK0            80      0       0      0.0%
COMMON              14     10      12     85.7%
BITCOMMON           14      0       1      7.1%
DATA                 0      0     139      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Dec 09 21:56:22 2024

                             pc 0002                              l70 0F8C                              l71 0F92  
                            l73 0F93                              l65 0F7B                              l66 0F7E  
                            l67 0F84                              l91 07B1                              l68 0F85  
                            l76 0F31                              l69 0F8B                              l85 062C  
                            l79 0F04                              l88 052E                              l97 0707  
                            _RH 005F                    ___awdiv@sign 0077                              fsr 0004  
                           l121 0F4F                             l210 007C                             l116 07FF  
                           l132 046E                             l126 0409                             l143 07E4  
                           l135 044E                             l146 0EED                             l155 0FFF  
                           l149 0EF7                             l181 0587                             l191 0EEB  
                           l184 0678                             l195 0EE1                             l187 0741  
                           l198 06C1                             l384 037E                             l472 04D1  
                           l394 0402                             l820 02C9                             l485 05DE  
                           l834 0F17                             l827 0FB6                             l846 0369  
                           l782 0FD9                             l857 0ECF                             _RD0 0040  
                           _RD1 0041                             _RD4 0044                             _RD5 0045  
                           _RD6 0046                             _RD7 0047                             u950 0474  
                           u951 0473                             u960 047F                             u961 047E  
                           u970 048E                             u971 048D                             u990 049E  
                           u991 049D                             u985 0492     __end_of_definir_temperatura 0742  
                           _abs 0F05                             fsr0 0004                             indf 0000  
                  ___awmod@sign 0077                            ?_abs 0078                            l2101 0F82  
                          l2103 0F89                            l2111 01D8                            l2105 0F90  
                          l2121 01FC                            l2113 01DC                            l2201 0F94  
                          l2211 0EF8                            l2131 0236                            l2123 0209  
                          l2115 01E0                            l2107 01C3                            l2203 0F99  
                          l2301 04D8                            l2221 05F8                            l2213 05E2  
                          l1501 04AF                            l2141 0260                            l2133 024B  
                          l2125 020E                            l2117 01E4                            l2109 01D4  
                          l2205 0FA6                            l2303 04E1                            l2311 07DF  
                          l2231 061C                            l2223 05FE                            l2215 05E7  
                          l1511 04C8                            l1503 04B5                            l2151 0296  
                          l2143 0269                            l2135 0251                            l2127 0210  
                          l2119 01F0                            l2207 0FB4                            l2305 04F0  
                          l2313 07E0                            l2233 061E                            l2217 05F4  
                          l2225 0607                            l2241 06E3                            l1513 04CD  
                          l1505 04B6                            l1521 058D                            l2153 029A  
                          l2145 027D                            l2137 0256                            l2129 0217  
                          l2161 02B0                            l2321 055E                            l2401 0051  
                          l2171 0F22                            l2307 04F6                            l2315 07E1  
                          l2235 0624                            l2227 060D                            l2219 05F6  
                          l2243 06EB                            l1507 04BD                            l1531 05A3  
                          l1523 0592                            l2091 0F09                            l2139 025B  
                          l2147 0281                            l2251 0FC1                            l2331 064C  
                          l2323 057A                            l2411 005C                            l2403 0058  
                          l2173 0F25                            l2261 036D                            l2309 07B2  
                          l2229 061A                            l2181 0780                            l2237 06C2  
                          l1509 04C3                            l1541 05BD                            l1533 05A6  
                          l1525 0594                            l1517 0588                            l2093 0F0A  
                          l2157 02A8                            l2149 0288                            l2253 0FC3  
                          l2245 0FB7                            l2341 071E                            l2333 065D  
                          l2325 057F                            l2317 052F                            l2501 0186  
                          l2421 0068                            l2413 005F                            l2405 0059  
                          l2175 0F2E                            l2167 0F19                            l2271 0397  
                          l2263 0371                            l2191 079D                            l2183 0784  
                          l2239 06C7                            l1551 05DA                            l1543 05C3  
                          l1535 05AD                            l1527 0598                            l1519 0589  
                          l2255 0FD0                            l2247 0FBB                            l2335 066F  
                          l2327 062D                            l2343 0679                            l2319 0536  
                          l2503 019D                            l2431 0082                            l2423 0077  
                          l2415 0060                            l2407 005A                            l2351 0030  
                          l2097 0F73                            l2169 0F1C                            l2281 03BA  
                          l2273 039F                            l2265 0382                            l2193 07A0  
                          l2185 0787                            l2177 077C                            l1481 047B  
                          l1473 046F                            l1545 05CA                            l1537 05AF  
                          l1529 059D                            l2089 0F05                            l1561 02DD  
                          l2249 0FBF                            l2337 0708                            l2329 063A  
                          l2505 01A1                            l2441 009F                            l2433 0087  
                          l2425 007A                            l2417 0061                            l2409 005B  
                          l2361 0035                            l2353 0031                            l2345 002B  
                          l2099 0F77                            l2283 03CC                            l2275 03A2  
                          l2291 03EA                            l2267 038D                            l2259 036A  
                          l2195 07A6                            l2187 0795                            l2179 077E  
                          l1491 048E                            l1483 047F                            l1475 0470  
                          l1539 05B3                            l1547 05D0                            l1563 02F7  
                          l1555 02CA                            l2339 0715                            l2507 01B0  
                          l2451 00BC                            l2443 00A6                            l2435 008C  
                          l2427 007B                            l2419 0063                            l2371 003A  
                          l2363 0036                            l2355 0032                            l2347 002E  
                          l2293 03EF                            l2285 03DA                            l2277 03AD  
                          l2269 038F                            l2197 07A9                            l2189 0798  
                          l1493 0491                            l1485 0484                            l1477 0474  
                          l1549 05D5                            l1565 0329                            l1557 02D0  
                          l1901 0EE8                            l1741 0421                            l2509 01B1  
                          l2461 00DB                            l2453 00C2                            l2445 00AD  
                          l2437 008F                            l2429 007D                            l2381 0041  
                          l2373 003B                            l2365 0037                            l2357 0033  
                          l2349 002F                            l2295 03FA                            l2287 03DB  
                          l2279 03B1                            l1903 0ED8                            l2199 07AE  
                          l1495 0498                            l1487 0486                            l1479 0479  
                          l1559 02D6                            l1751 043D                            l1735 0405  
                          l2471 00F9                            l2455 00C9                            l2463 00E0  
                          l2447 00B1                            l2439 0096                            l2391 004A  
                          l2383 0042                            l2375 003C                            l2367 0038  
                          l2359 0034                            l2289 03E4                            l1905 0EDE  
                          l1497 049A                            l1489 0488                            l1681 0EED  
                          l1753 044A                            l1745 0423                            l1737 040F  
                          l1729 0403                            l2481 012B                            l2473 00FD  
                          l2465 00E4                            l2457 00CE                            l2449 00B7  
                          l2393 004B                            l2385 0043                            l2377 003D  
                          l2369 0039                            l2299 04D2                            l1499 049E  
                          l1843 07E5                            l1683 0EF3                            l1771 0FDA  
                          l1851 0F32                            l1755 0452                            l1763 0465  
                          l1747 0428                            l1739 041B                            l2491 015C  
                          l2483 013A                            l2475 010C                            l2467 00E9  
                          l2459 00D4                            l2395 004C                            l2387 0045  
                          l2379 0040                            l1845 07EB                            l1773 0FDB  
                          l1861 0F49                            l1853 0F35                            l1765 0467  
                          l1757 045E                            l1749 042E                            l2493 016B  
                          l2485 013C                            l2477 010F                            l2469 00EA  
                          l2397 004D                            l2389 0047                            l1847 07F4  
                          l1775 0FE9                            l1863 0F4B                            l1855 0F39  
                          l1767 046D                            l2495 0172                            l2487 0149  
                          l2479 0126                            l2399 0050                            l1849 07FC  
                          l1777 0FEF                            l1857 0F3F                            l2497 0174  
                          l2489 014D                            l1859 0F43                            l2499 0183  
                          l1899 0EE2                            STR_1 0752                            STR_2 076C  
                          STR_3 0760                            STR_4 0772                            STR_5 0752  
                          STR_6 0778                            STR_7 076C                            STR_8 0776  
                          u1010 04AF                            u1011 04AE                            u1100 05BD  
                          u1005 049F                            u1101 05BC                            u1030 04C3  
                          u1031 04C2                            u1015 04AB                            u1040 04C8  
                          u1120 05D0                            u2000 0251                            u1041 04C7  
                          u1025 04B7                            u1121 05CF                            u1105 05B9  
                          u2001 0250                            u1130 05D5                            u1050 058D  
                          u2010 0256                            u1131 05D4                            u1115 05C4  
                          u1051 058C                            u2011 0255                            u2100 060D  
                          u1060 0598                            u1140 02D0                            u2020 025B  
                          u2101 060C                            u1061 0597                            u1141 02CF  
                          u2021 025A                            u1070 05A3                            u1150 02D6  
                          u2030 0260                            u1071 05A2                            u1151 02D5  
                          u2031 025F                            u2120 06D1                            u1160 02F7  
                          u2040 0287                            u1161 02F6                            u2041 0286  
                          u2210 03CC                            u2130 06F5                            u1090 05B3  
                          u1170 0329                            u2050 0296                            u2211 03CB  
                          u2115 0613                            u1091 05B2                            u1171 0328  
                          u2051 0295                            u2140 0707                            u1180 034C  
                          u2300 00D4                            u2205 03B3                            u2141 0706  
                          u1085 05A7                            u2301 00D3                            u2230 03EA  
                          u2150 0371                            u2070 0FB4                            u1510 0452  
                          u2310 00E4                            u2231 03E9                            u2215 03C8  
                          u2151 0370                            u1175 0325                            u2071 0FB3  
                          u1511 0451                            u2311 00E3                            u2240 03EF  
                          u2160 0382                            u2080 05E7                            u1360 0EF3  
                          u1520 045E                            u1504 0445                            u2400 0183  
                          u2320 00F9                            u2241 03EE                            u2225 03DC  
                          u2161 0381                            u2081 05E6                            u2065 078A  
                          u1361 0EF2                            u1521 045D                            u1505 0443  
                          u2401 0182                            u2321 00F8                            u2170 039F  
                          u2250 07C2                            u1530 0464                            u1450 040F  
                          u2410 019D                            u2330 010C                            u2171 039E  
                          u1531 0463                            u1451 040E                            u2411 019C  
                          u2331 010B                            u1540 046D                            u1460 041B  
                          u2260 0536                            u2420 01B0                            u2340 0126  
                          u1541 046C                            u1461 041A                            u2261 0535  
                          u2421 01AF                            u2405 017F                            u2341 0125  
                          u2325 00F5                            u2190 03B1                            u1550 0FFF  
                          u1710 0EE8                            u1470 0421                            u2270 057A  
                          u2350 013A                            u2191 03B0                            u2255 07BD  
                          u2095 05ED                            u1551 0FFE                            u1711 0EE7  
                          u1471 0420                            u2271 0579                            u2415 0199  
                          u2351 0139                            u2335 0108                            u1720 0EDE  
                          u1480 042E                            u2360 0149                            u2280 00B1  
                          u2185 03A4                            u1721 0EDD                            u1481 042D  
                          u2425 01AC                            u2361 0148                            u2345 0122  
                          u2281 00B0                            u2370 015C                            u2290 00C2  
                          u2507 0F4D                            u2371 015B                            u2355 0136  
                          u2291 00C1                            u1900 0F09                            u1660 0F3F  
                          u2380 016B                            u1901 0F08                            u2517 07EF  
                          u1661 0F3E                            u2381 016A                            u2365 0145  
                          u2437 0093                            u1910 0F77                            u1670 0F49  
                          u1494 0436                            u2390 0172                            u1911 0F76  
                          u2527 07F9                            u1671 0F48                            u1495 0434  
                          u2391 0171                            u2375 0158                            u2447 00C6  
                          u1920 0F82                            u1921 0F81                            u2537 079A  
                          u2385 0167                            u2457 00D8                            u1930 0F89  
                          u1931 0F88                            u2547 07AB                            u2467 01B9  
                          u1940 0F90                            u1941 0F8F                            u2557 04DC  
                          u2477 0425                            u1950 01D4                            u2567 04EB  
                          u1951 01D3                            u2487 0F37                            u1960 01F0  
                          u2577 04FA                            u1961 01EF                            u2497 0F41  
                          u1970 01FC                            u2587 0F29                            u1971 01FB  
                          u1980 0215                            u1981 0213                            u1990 0216  
                          abs@a 0078               ?_Lcd_Write_String 0077                            _dbuf 00A0  
                          _main 002B                            _prec 0053                            btemp 007E  
                          start 000C              ??_Lcd_Write_String 0020           _display_terminal_data 0679  
               __end_of_Lcd_Cmd 0F32         __end_of_UART_Write_Text 1000                           ??_abs 0020  
               __end_of___aldiv 0403                           ?_main 0070                 __end_of___awdiv 04D2  
               __end_of___awmod 05DF                 ___awdiv@divisor 0072                           i1l205 0F6B  
               ___awdiv@counter 0076                    vfpfcnvrt@fmt 002B                           _TMR1H 000F  
                         _TMR1L 000E                           _SPBRG 0099                 ??_find_response 0072  
                         _TRISD 0088                           _TXREG 0019                     ?_UART_Write 0070  
                         _flags 005D                           _fputc 02CA                           _width 0051  
                         _putch 0ECF                  __pbitbssCOMMON 03D0                           pclath 000A  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 0FDA  
              __end_of_Lcd_Init 052F                __end_of_Lcd_Port 0F94                 __initialization 000F  
                  __end_of_main 01C3          _decrementarTemperatura 0ED8                          ??_main 004E  
              __end_of_TrataInt 0F72               read_dht11@timeout 0074                          ?_fputc 0072  
                        _ADRESH 001E                          _ADRESL 009E                ___awdiv@dividend 0074  
                        ?_putch 0070                          i1l1911 0F56                          i1l1913 0F5B  
                        i1l1915 0F61                          i1l1917 0F68                          i1l1909 0F50  
                        i1l1919 0F69                          u173_20 0F56                          u173_21 0F55  
                        u174_20 0F68                          u174_21 0F67                       ??_Lcd_Cmd 0073  
                 vfpfcnvrt@done 002F                          _TMR1IF 0060          ?_display_terminal_data 0070  
                  vfprintf@cfmt 003A               __end_of_UART_Init 07E5                       ??___aldiv 0020  
                     ??___awdiv 0076                       ??___awmod 0076                ?_UART_Write_Text 0073  
           _enviarDadosTerminal 03D1                ___awdiv@quotient 0078                 ___awmod@divisor 0072  
                        _temper 0060                 ___awmod@counter 0076                     read_dht11@i 0076  
                        fputc@c 0072                    __pdataCOMMON 007B                          saved_w 007E  
               _read_dht11_data 052F                          putch@c 0070                __end_of_vfprintf 0FB7  
                     ??_sprintf 003F                 Lcd_Set_Cursor@a 0020                 Lcd_Set_Cursor@b 0076  
               Lcd_Set_Cursor@y 0022                 Lcd_Set_Cursor@z 0021         __end_of__initialization 0027  
             __end_of_Lcd_Clear 0F05        ??_incrementarTemperatura 0072                  __pcstackCOMMON 0070  
                    _dht11_init 07E5                   __end_of_fputc 036A                   __end_of_putch 0ED0  
                _Lcd_Set_Cursor 05DF              _display_dht11_data 062D                  _OPTION_REGbits 0081  
                     ?_Lcd_Init 0070                       ?_Lcd_Port 0070                         ??_fputc 0020  
           ?_display_dht11_data 0070                         ??_putch 0072                  _infoTempBuffer 00C8  
                    __pbssBANK0 0051                      __pbssBANK1 00A0                      __pmaintext 002B  
          ??_display_dht11_data 004C                       ?_TrataInt 0070                      __pintentry 0004  
        __end_of_Lcd_Set_Cursor 062D         __end_of_read_dht11_data 0588                    ??_UART_Write 0072  
                    ??_Lcd_Init 0076                      ??_Lcd_Port 0072                      __stringtab 0742  
                _Lcd_Write_Char 077B                         _Lcd_Cmd 0F18         ?_decrementarTemperatura 0070  
                   ?_dht11_init 0070                         ___aldiv 036A                         ___awdiv 046F  
                    ??_TrataInt 0070                         ___awmod 0588              __end_of_UART_Write 0EF8  
                     ?_vfprintf 0036                      _read_dht11 0403                 ?_Lcd_Set_Cursor 0076  
                       __ptext1 052F                         __ptext2 0403                         __ptext3 0EE2  
                       __ptext4 0F32                         __ptext5 0679                         __ptext6 0FDA  
                       __ptext7 0EEC                         __ptext8 062D                         __ptext9 07E5  
                       _rhByte1 0062                         _rhByte2 0061                       _T1CONbits 0010  
              ___awmod@dividend 0074                ___aldiv@dividend 0076           __end_of_find_response 0F50  
                       _sprintf 0FB7                         clrloop0 0ED1          __end_of_Lcd_Write_Char 07B2  
       ??_display_terminal_data 004C            end_of_initialization 0027                         fputc@fp 0074  
                    _tempBuffer 0066  __end_of_decrementarTemperatura 0EE2               __end_of_vfpfcnvrt 02CA  
                     _RCSTAbits 0018                ___aldiv@quotient 0023                vfpfcnvrt@convarg 0031  
                     Lcd_Port@a 0072                      ??_vfprintf 007A                       _UART_Init 07B2  
                     _PORTAbits 0005                       _PORTBbits 0006                       _PORTCbits 0007  
              ?_read_dht11_data 0070                  UART_Write@data 0072          _incrementarTemperatura 0EE2  
            UART_Init@baud_rate 0027                       _TRISAbits 0085                       _TRISBbits 0086  
                     _TRISCbits 0087                 ?_Lcd_Write_Char 0070               Lcd_Write_String@a 0077  
             Lcd_Write_String@i 0023                       _TXSTAbits 0098                       _Lcd_Clear 0EF8  
                   vfpfcnvrt@ap 002C                     vfpfcnvrt@cp 0030                     vfpfcnvrt@fp 0029  
                   ?_read_dht11 0070                _Lcd_Write_String 06C2                      ?_UART_Init 0027  
                 __pidataCOMMON 0003             start_initialization 000F                     __end_of_abs 0F18  
              _temperaturaIdeal 007B                     vfprintf@fmt 0038                      ?_Lcd_Clear 0070  
           _definir_temperatura 0708                 Lcd_Write_Char@a 0076                 Lcd_Write_Char@y 0075  
                     ___latbits 0002                   __pcstackBANK0 0020            ?_definir_temperatura 0070  
                      ?_Lcd_Cmd 0070                ??_Lcd_Set_Cursor 0077                    ??_dht11_init 0072  
                      ?___aldiv 0072                        ?___awdiv 0072                        ?___awmod 0072  
                   ??_UART_Init 002B                       __pstrings 0742           ??_definir_temperatura 004C  
                      ?_sprintf 003B               ??_UART_Write_Text 0075              __end_of_dht11_init 0800  
               ___aldiv@divisor 0072   __end_of_display_terminal_data 06C2               interrupt_function 0004  
               ___aldiv@counter 0021                       clear_ram0 0ED0                        _PIE1bits 008C  
                     _tempByte1 0064                       _tempByte2 0063                        Lcd_Cmd@a 0075  
                      _PIR1bits 000C                       _tempValor 0057                     ??_Lcd_Clear 0076  
                     _oxigValor 0059         ?_incrementarTemperatura 0070                       _vfpfcnvrt 01C3  
                    _ADCON0bits 001F                     __stringbase 0751                      _ADCON1bits 009F  
              ??_Lcd_Write_Char 0073                  read_dht11@data 0073                        _Lcd_Init 04D2  
                      _Lcd_Port 0F72                      vfpfcnvrt@c 0035                 _aquecedorLigado 03D0  
      __end_of_Lcd_Write_String 0708                      vfprintf@ap 0039                      vfprintf@fp 0036  
__end_of_incrementarTemperatura 0EEC                        _TrataInt 0F50                    ??_read_dht11 0072  
                    ?_vfpfcnvrt 0029              __end_of__stringtab 0752                      sprintf@fmt 003C  
                      _checkBit 0065                        __ptext10 0708                        __ptext11 0FB7  
                      __ptext20 077B                        __ptext12 0F94                        __ptext21 05DF  
                      __ptext13 01C3                        __ptext22 0EF8                        __ptext14 02CA  
                      __ptext23 0ED8                        __ptext15 0ECF                        __ptext24 07B2  
                      __ptext16 0F05                        __ptext25 036A                        __ptext17 0588  
                      __ptext26 04D2                        __ptext18 046F                        __ptext27 0F18  
                      __ptext19 06C2                        __ptext28 0F72                        __ptext29 0F50  
                      _contador 005B             UART_Write_Text@text 0073              __end_of_read_dht11 046F  
                      _vfprintf 0F94                        _sumation 005E                      _INTCONbits 000B  
                 _find_response 0F32              Lcd_Write_Char@temp 0074                        intlevel1 0000  
                     sprintf@ap 0040        ??_decrementarTemperatura 0072                   _umidadeBuffer 00C0  
                     stringcode 074C                     ??_vfpfcnvrt 002D              Lcd_Set_Cursor@temp 0023  
               _UART_Write_Text 0FDA                        sprintf@f 0041                        sprintf@s 003B  
                      stringdir 074C                    _umidadeValor 0055                        stringtab 0742  
                  ___aldiv@sign 0022                  ?_find_response 0070                      _UART_Write 0EEC  
             ??_read_dht11_data 0024      __end_of_display_dht11_data 0679  
